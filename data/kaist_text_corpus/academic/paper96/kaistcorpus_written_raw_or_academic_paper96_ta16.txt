<language> Korean </language>
<textcode> KSC-5601-1988 </textcode>
<process> raw </process>
<version> 2001(or)</version>
<filename> kaistcorpus_written_raw_or_academic_paper96_ta16.txt </filename>
<title> 퍼지이론을  이용한  2차원 형상의   자동요소 분할  시스템  개발 </title>
<author> 박상임 </author>
<date> 1993</date>
<publisher> 서울대학교 </publisher>
<kdc> TM551.31 </kdc>
<tdmsfiletext>
  초 록

  2차원 형상을 표현하는 간단한 좌표값들로부터,응력집중요소를 판별해내고,이
러한 응력집중요소로 부터  적절한 형태의 절점패턴을 발생시킨 다음에 요소망을 형성 해주는 자동요소생성 시스템을 개발하였다.
   응력집중요소들로부터 절점 패턴을 생성해내고,이후에 이러한 중복된  절점들을 선별하여 해석대상물체의  최종적인 절점분포를 확정하는 과정에서  퍼지함수를 도입함으로써,손쉽게 전문가에 근사한 요소생성이 가능하게 되었다.
   본 연구를 통하여 유한요소해석을  위한 전처리과정에서 퍼지이론의 적용가능성을 확인할수 있었으며  또한 개발된 시스템은 객체지향언어가 사용됨으로써 향후의 시스템확장에 능동적으로 적응될 수있다.

  주요어    : 자동요소생성,퍼지 Membership 함수,객체지향언어

  

   목   차

초록            ⅰ
목차            ⅱ
그림목차            ⅳ

1. 서 론  1 
  1.1. 연구배경 및 연구동향  1
  1.2  연구개요 및 목표  2

2. 절 점 발 생  5
   2.1  개 요   5
   2.2  퍼지관계  6
   2.3. 응력집중요소 및 절점밀도 결정계수  9
     2.3.1   Notch  9
     2.3.2.  Hole 11
     2.3.3.  Arc 12
   2.4  절점발생방법 13
     2.4.1.   경계선상의 절점발생 13
     2.4.2.   내부영역에의 절점발생  13
     2.4.3    In-Out Test 15
   2.5. 응력집중요소의 영향력계수 16

3. 요 소 생 성 17
   3.1. 기본 원리 17
   3.2  기본자료의 구조 18
     3.2.1.  Point Class 18
     3.2.2.  Line Class 20
     3.2.3.  Element Class 20
     3.2.4.  Point Connectivity Class 21
     3.2.5.  Stress Feature Class 22

   3.3  주요 Algorithms 23
     3.3.1.  절점선택 23
     3.3.2   요소생성시 자료구조의 수정 25
       3.3.2.1. Free Node 25
       3.3.2.2. Left Overlapped Node       27
       3.3.2.3. Right Overlapped Node       28
       3.3.2.4. Loop Node 29
       3.3.2.5. Married Node             30

4. 요소 평활화 32

5. 작업결과 33
   5.1. 입  력 33
     5.1.1  형상정보 33
     5.1.2  조정인자 정보 33
     5.1.3. 입력 예 34
     5.1.4  경계조건 및 기타정보 35
   5.2. 작업결과(예) 36

6. 결론 43


References 44
Abstract 46
감사의 글  
  
   제   장   서론

  연구배경 및 연구동향

유한요소법은 그 적용에 있어서 임의형상의 영역해석을  쉽게  할 수 있다는 범용성이 있으나, 이의 사용을 위한 입력자료의 작성은 대개 대단히 힘이 들고 또한 임의성이 강한 면이 있다.
따라서 유한요소법에 의한 해의 정확성이나 수렴성, 해의 신뢰성은 요소분할의 양부(良否)가 크게 영향을 준다.
그러나 Meshing이란 것 자체가 본래 임의성이 강한 작업이므로,엄밀한 수학적 원리에 입각한 수법을 적용하는 것은 무리가 있으므로,복잡하고 대규모의 문제에 대하여 해석자가 원하는 최적의 Meshing을 해주는 System은 없다.

2차원형상에 대한 자동요소 분할에 대한 이전의 연구에 대하여는 Thacker[1]가 광범위 하게 정리 하였으며,이전의 연구는 대개 다음과 같은 방법으로 나눌 수 있다.[2]

1.  해석 영역내부에서 난수발생기(Random number generator)를 써서 절점을 생성시킨 후에, 삼각형 요소를 생성하는 방법 [3,4]

2.  영역을 컨벡스한 부영역(subregions)으로 나누는 과정을 재귀적으로 반복하여 요소를 생성하는 방법 [ 5 ]

3.  변형된 4분목법(quadtree encoding technique)을 써서 영역을 이산화 하는 방법.[ 6 ]

4.  경계선상에 있는 키 노드에서부터 영역쪽으로 3각형 요소를 발생시켜 가는 방법.[ 7,8]

이전의 많은 연구 논문들은 주로 생성되는 요소의 형상특성을 좋게하기 위하여 많은 노력들을 기울인데 반하여,상대적으로 사용자의 측면에서 좀더 쉽고도 특별한 전문 지식이 없는 사람도 상당히 전문가에 근사한 요소분할을 할 수 있는 방법에 대한 연구는 그리 많지 않았다고 보여진다.

또한 요소의 형상특성에 대하여는,이즈음과 같이 Computer Hardware가 급속히 발전하고 있는 상황에서는,초기부터 요소의 형상특성을 대단히 좋게하기 위한 연구방향보다는,일단 요소를 적절한 방법으로 빨리 생성시킨 후에  평활화 방법등에 의하여 요소 특성의 개선을 도모하는 것이 바람직 하다고 여겨진다.

  연구개요 및 목표


요소분할 시스템(Meshing System)이 만족시켜야 할 조건으로서는 다음을 들 수 있다.[9]

-.  임의의 형상에 대하여 요소분할이 가능할 것
-.  해석대상의 형상에 따라 세밀한 요소와 성긴 요소를 적절히 배치할 수 있을 것.
-.  요소의 찌그러짐을 최대한 배제 할 수 있을 것.
-.  총 자유도의 수를 제어 할 수 있을 것.
-.  입력 데이터가 적고 간단할 것.
-.  대화 환경에서 요소 분할 작업을 할 수 있을 것.


본 연구는 위에서 언급한 일반적인 요소분할 시스템(Meshing System)의 필요요건을 최대한 충족시키면서, 전문가에 가까운 초기 요소 분할을 자동으로 수행할 수 있는 System의 개발을 위하여 다음과 같은 기본 개념을 도입하여 수행되었다.

첫째, 외부 및 내부의 형상을 정의하는 기본 절점의 좌표만을 입력 데이터로 부터 받아서, 이것에서부터 응력집중이 예상되는 절점을 검색해 내고, 이것을 응력 집중요소(Stress Concentraion Feature)로 정의 한다. 응력 집중요소에는 Notch,Hole및 Arc가 포함된다. 각각의 응력 집중요소에는 그 형상의 특성에 따라 적절한 요소 밀도함수( Fuzzy 이론에 의한 membership 함수들로서 경계선 및 영역내부의 Node를 생성하는 parameter를 계산하는 함수)가 생성된다.

둘째, 각각의 응력집중 요소에 대하여 연결된 경계선과 부근의 영역에 요소 밀도 함수에 따른 절점이 생성된 후에,생성된 각각의 절점은 모든 응력집중요소에 대한 영향계수(membership function value)를 평가하여 경계선과 영역내부의 절점으로서 확정되던가, 혹은 삭제된다.

셋째, 확정된 경계선과 영역내부의 절점에 대하여, 제 4 장에서 설명되는 방법에 의하여 의하여 삼각형요소 생성을 수행한다.

넷째, 이상의 작업에 의하여 생성된 요소는 요소 평활화(smoothing process)과정을 거쳐 최종적인 절점들의 좌표가 확정되며,필요시 기존의 FEM Code에 의한 해석작업을 위한 Input Data가 생성될 수 있다

 
본 연구는 사용자 편이성 및 System에 의한 최대한의 전문성 제공 및 향후의 System 확장의 용이성을 고려하여 다음과 같은 사항에 주안을 두었다.


첫째, Fuzzy 이론의 적용가능성 검증

일반적인 요소분할의 시작단계에서는 작업자가 주어진 형상을 검토한 후에,극히 주관적이고도 정성적인 판단에 의하여 요소분할을 시작하는 것이 보통이다.즉 작업자가 응력집중부위라고 판단한 부분은 좀더 세밀하게 분할하려고 결정하는 과정을 Fuzzy이론에 의하여 자동적이고도 정량적인 처리를 가능케 하려고 시도하였다.이러한 개념은 향후에 전문가 시스템으로의 확장시에 기초가 된다.


둘째, 객체 지향언어에 의한 시스템개발

컴퓨터의 사용이 급증하면서 컴퓨터에 대한 요구 또한 점점 복잡해지고 그 규모도 방대해 지고 있는데 반해서,그 시스템의 규모나 복잡성의 증가만큼 소프트웨어 개발기술이 이를 뒷받침해 주지 못함에 따라,이러한 상황을 소프트웨어 위기(Software Crisis)라고 표현하기도 한다.
이에 따라 소프트웨어 개발에 새로운 전환이 절실히 요구되고,이러한 인식에서 등장한 것이 객체지향 개념이다.
객체지향 개념은 기존의 구조적 프로그래밍(Structured Programming)방법에 비하여 소프트웨어의 재사용성(Reusability)및 확장성(Extensibility)등이 특히 뛰어난 것으로 알려져 있다.[10,11]
본 연구결과의 향후 확장가능성과  이러한 객체지향 개념의 특성을 고려하여,객체지향개념을 지원하는 언어인 C++ 를 사용하여 본 시스템을 개발 하였다.



  제   장   절점발생 

   개 요 

입력된 임의의 형상을 전문가에 근사하게 요소분할을 하기 위해서는,형상 전체에 대한 정확한 응력 분포 결과를 예상할 수 있어야 한다.
이를 위하여는 입력된 형상으로부터 응력 집중부위를 판단해 내고, 이 응력 집중부위로 부터 적절하게 절점을 배치 시킬 필요가 있다.

본 연구에서는 단순한 형상의 입력정보속에서 3.2 항에서부터 설명되는  응력집중요소(Stress Feature)로 정의된 특성이 존재하는가를 판단하고,이렇게 하여 생성된 각 응력집중요소별로 절점분포형태(Node Distribution Pattern)를 생성하고 정리하는 방법에 대하여 설명한다.

응력집중요소는 노치, 홀 및 원호로 구분되며 그 각각의 응력집중요소는 적절하게 정의된 퍼지함수로 부터 절점밀도 결정계수(Node Density Factor)가 계산되며 이것은 응력집중요소 근처의 영역에서 분할되어야할 요소의 최소크기를 결정하는 인자로서 쓰이게 된다.

절점밀도 결정계수가 결정된 다음에는 응력집중요소를 시작점으로 하여 근처의 경계선 및 내부영역 전체에 걸쳐 절점이 발생되며, 이러한 과정이 전체의 응력집중요소에 대하여 행해진 다음에 발생된 절점전체를 평가하여 최종적인 절점패턴을 확정시킨다.




  퍼지관계( Fuzzy Relation )

집합 X 에서 Y 에로의 (혹은 X 와 Y 간의) 퍼지관계(Fuzzy Relation) R은 직적(直積) 인 퍼지집합에서

                            (1)

이 되는 귀속함수( membership Function )  에 의해 특성이 부여되는 것을 말한다.

특히   의 경우에는 R 을 X 상의 퍼지관계라고 한다.

예를 들어    를 실수의 집합이라고 하고,   에 대해 「  는  보다 상당히 크다 ( 즉  ) 」 라고 하는 관계를 퍼지관계로 표시한다면, 이것은  상의 퍼지관계   이 되며,다음과 같은 귀속함수로 그 특성을 부여할 수 있다.




본 연구는 위의 개념을 바탕으로 자동요소 분할에 필요한 두 가지의 퍼지관계를 정의한다.

응력집중요소와 절점밀도 결정계수

응력집중요소별로 정의된 하나의 퍼지관계로부터 계산된 귀속함수의 값에서 응력집중요소의 특성을 추출해 낸다.
이때의 귀속함수값을 절점밀도 결정계수( Node Density Factor) 로 정의하고,이것은 해당 응력집중요소 근방에서의 요소크기를 결정한다.

응력집중요소와 영향력계수

각 응력집중요소는 정해진 절점밀도에 따라 전영역에 절점을 발생시키므로, 절점생성과정 직후에는 특정영역에 여러 응력집중요소에서 발생된 절점들이 중복되어 분포되어 있다.이것을 정리하기 위하여 각 응력집중요소와 그 부근 절점과의 영향력 간의 퍼지관계를 정의한다.

이 퍼지관계의 귀속함수로 부터 얻어진 값을 영향력계수 (Infuence Factor)로 정의하고, 모든절점에 대하여  다음의 조건을 만족하는 절점만을 취하면 적절한 절점분포를 얻을 수 있다.

 

이것을 도식화하여 설명하면 다음 그림과 같다.

          그림 2.1 ) 절점발생 및 절점의 정리


  응력집중요소 및 절점밀도 결정계수

   Notch

입력된 형상으로부터 직선의 연결상태를 검색하여,선분의 진행방향에서  시계방향으로의 각도가 180 보다 큰 것을 notch로 식별한다.
    
         : no notch (    )
         : notch    (  )

    그림  2.2 ) Notch 의 정의





Notch의 특성은 Notch가 이루는 각도에 따라 다음의 그림과 같은 퍼지 표현이 자연스럽다.

   
     그림  2.3 ) Notch 의 정성적 표현


이와 같은 Notch의 정성적인 특성은 다음과 같은 퍼지함수에 의하여 수학적인 표현및 처리가 가능해 진다.

               
             여기서    Node Density Factor for Notch
                         Notch Angle 
                         Control Coefficient

           그림 2.4) Membership Function of Notch   
                 
    Hole

영역내부에서의 Hole등에 대한 응력집중의 연구는 광범하게 이루어져 있으며[12],또한 三好[13]은 다양한 실험을 통하여 전문가 시스템의 구현을 위한 연구를 시도한바 있다.

본 연구에서는 영역 내부의 원에 대하여 다음과 같이 비교적 간단하게,전체 영역과 Hole의 크기와의 비율을 주 요소로 하여 퍼지함수를 가정하였다.
 
   
  그림  2.5 ) Hole의 정의



       
                      where    Node Density Factor for Circle
                                Radius of Circle
                                Shoter length among 
                              
                                Control Coefficient

              그림  2.6 ) Menbership Function of Hole  

    Arc

원호는 일반적인 기계부품등에서 대단히 많이 나타나는 기하형상중의 하나이다.원호는 위에서 언급한 Notch와 Hole의 조합으로써 처리가 가능한바,즉 원호의 시작점과 끝점은 Notch로 인식하고 기타 원호상의 절점은 Hole로 간주하여 처리할 수 있다.

   절점발생 방법

  경계선 상의 절점발생

Notch의 경우에는 응력집중요소의 전후 선분에 대하여 절점을 발생시킨다. 최초로 발생될 절점의 요소크기는 각 응력집중요소의 최소 요소크기이며 이후의 요소크기는 Control Parameter로 입력된 응력집중요소별 공비수열로 결정된다.
Hole이나 원호의 경우에는 형상을 정의한 기하학적인 원(혹은 원호)를 응력집중요소의 최소 요소크기로 분할하여 이산화 시키고,동시에 선분을 발생시킨다.이후에 원호의 경우에는 원호의 시작점과 끝점을 Notch의 응력집중요소로서 등록하고 Notch에 대한 경계선상의 절점발생과정을 반복한다.

  내부영역에의 절점발생

내부영역으로의 절점 배치는 응력집중요소의 중심으로부터 동심원상으로 생성시켜 나간다. 최초 동신원의 반경은 응력집중요소의 최소크기가 되며,이때 동심원상의 이산화는 가급적 정삼각형의 요소가 되도록 한다.

이후 동심원의 반경은 경계선상에서의 절점발생의 경우와 같이 응력집중요소별 등비수열에 따라 결정되는 요소크기의를 감안하여 점차 증가되어 나간다.

  그림 2.7  ) 절점분포 형태 ( Node Distribution Pattern )
  
                          (3)
                             (4)
                                (5)
   
   
   
        .
   
 
    
    

   In-Out Test

영역 내부에의 절점 발생시 고려하여야 할 사항은 발생된 절점이 영역내에 존재하고 있는지를 판단하여야 한다.
발생된 절점이 유효영역내에 있는지의 판단은 아래의 그림과 같이 한다.


         그림 2.8 ) In Out Test


위의 그림에서 점선으로 표시된 영역은 입력된 형상의 최대영역을 표시한다. 임의의 절점에서 반직선을 그었을 때, 그 반직선이 형상을 구성하는 선분들과 홀수회만큼 교차하면 그 절점은 영역의 내부에 있다고 판단하며, 짝수번 교차하면 영역의 바깥에 있는 것으로 판단한다.


  응력집중요소의 영향력 계수
   ( Influence Factor of Stress Concentration Feature )

위의 방법에 의하여 생성된 절점들은 영역 내부나 혹은 경계선상에 중첩하여 발생되게 된다.이렇게 중첩된 절점들은 다음의 방법으로 정리 된다.

각 응력집중요소로 부터 생성된 절점들은 응력집중요소로 부터 가까울 수록 해당 응력집중요소의 영향이 크고,멀어질수록 작아 진다.
절점의 응력집중요소에 대한 영향력의 크고 작음은 각 절점의 각 응력집중요소에 대한 귀속함수(Membership Function)로 표시할 수 있다.

이것을 한 절점의 어떤 응력집중요소로부터의 영향력의 크기를 영향력계수(Influence Factor)로 정의 하고 그것은 다음의 그림과 같은 함수형태로 정한다.

           
           여기서       영향력 계수
                           응력집중요소와 절점과의 거리
                         전체영역의 대각선 길이
                           Control Coefficient

 그림  2. 9 )  Membership Function for Influence Factor
   제    장   요 소 생성

  기본 원리

제 2 장에서 설명된 개념에 따라 내부 및 외부의 경계선상과 내부영역에 생성된 절점들은 다음절에서 설명되는 자료구조를 갖는 몇가지의 기본 List에 의하여 요소분할 작업을 수행하게 된다.

이 과정을 간단히 요약하면

첫째, 외부및 내부의 경계선으로 정의된 2차원 형상은 모두 Linked List의 형태인 Line List에 순차적으로 저장된다.초기의 Line List는 내외부의 경계선상에 있는 절점들을 연결하여 형성된다.

둘째, 초기 Line List의 첫번째 Line부터 요소를 생성해 나가는데,이 과정은 우선 해당 Line에서 요소 형상을 가장 좋게 할 수 있는 내부 절점(혹은 경계선상의 절점)을 하나 찾아 내어 삼각형요소를 생성 시킨다.이 과정에서 대상 절점을 빠르게 찾아내기위한 영역전개 방식을 적용한다.

셋째, 하나의 삼각형요소가 생성되면 1개나 2개의 새로운 Line요소가 새로 생기게 되는데,새로 생성된 Line요소는 Line List의 맨 끝에 추가된다.이 과정에서 요소 생성을 위해 선택된 절점의 특성에 따라 기본이 되는 자료구조(Data Structure)를 수정하는 Algorithm이 이후에 설명된다.

넷째, 위의 두번째와 세번째의 과정을 반복하여 Line List의 끝까지 진행하게 되면 영역내의 요소 분할이 완료되게 된다.



  기본 자료의 구조

객체지향시스템의 개념에 따라 기본자료의 구성은 다음과 같은 형태의 Class들로 이루어 진다.자료구조의 주요한 특징은 실질적인 Node의 좌표값은 후에 설명되는 Point Class의 객체들에만 저장되어 있으며,이 후에 생성되는 타 Class들은 주로 지시인자(Pointer)에 의하여 상대부분을 쉽게 참조할 수 있는 형태로 되어있다.
 
  Point Class

Point Object는 본 System의 가장 기본이 되는 객체(Object)로서, 형상입력자료로 부터최초에 생성되는 객체이며 이후 이것으로부터 타객체(Line Object,Element Object등)가 생성되게 된다.

class Point: public Real {
    long               id;             
    float              x,y;
    In_Out_Line*       connect;
    Stress_feature*    stress_ft;
public :
    ( member functions )
};

그림  3.1) Example of Class Clarification for Point


                
              
 

                                      
그림  3.2 ) Data Structure of Point Class 

그림 3.1)는 객체지향 시스템의 개념에 따른 Point Class선언의 예를 보인것이며, 그림 3.2)는 이것을 도식화 한 것이다.
각 항목에 대한 설명은 다음과 같다.
 
ID                 :   각 절점의 식별기호로서 일련번호로 주어진다.
X,Y                :   각 절점에 대한 절대 좌표계상의 값으로 주어진다.
Boundary Condition :   각 절점의 X, Y 좌표축으로의 Restraint정보
Stress Feature     :   각 절점의 응력상태 정보를 참조할 수 있는 지시인자.
Connectivity       :    Line Object와의 연결관계 참조를 위한 지시인자.
Member Functions   :   Point Object 각각에 대한 관련 함수들의 집합.


  Line Class


         

    그림  3.3) Data Structure of Line Class 
              
  Element Class


         

  그림  3.4) Data Structure of Element Class 


  Point Connectivity Class



        

 그림  3.5) Data Structure of Connectivity Class 


  Stress Concentration Feature Class

본 Class 는 최초 형상입력자료를 처리하면서 Hole이나 Arc로 정의된 절점이나, 혹은 절점 전후에 생성되는 Line Object의 상호관계를 점검하여 Notch로 판단된 절점에 대하여 생성된다. 객체의 생성시 응력집중요소의 특성이 평가되어 그 결과(즉 Node Density Factor)가 Data Instance인 Intensity에 저장되며,동시에 관련 절점의 Stress Feature에 생성된 객체의 지시인자를 기록한다.

        

                                      
그림  3.6) Data Structure of Stress Concentraion Feature Class 




  주요 Algorithm

  절점선택 

요소생성은 하나의 기준 Line에 대하여 경계상이나 영역내에 존재하는 여러개의 가용한 절점들 가운데에서 요소를 생성하는데에 최적인 제 3 의  절점을 찾아낸 다음에 이것을 미리 정의된 Element Class의 구조에 맞춰서 요소를 생성해 내는 것이다.
이때에 중요한 사항은 검색대상 절점의 수를 최소화 할 것인가와 대상 절점중에서 어떻게 최적의 절점을 선정할 것인가하는 점이다.

본 연구는 기준 Line에 대하여  Sub-domain을 설정하여 이 영역내에 속한 절점만을 검색함으로써 계산수행속도의 향상을 기하였다.
Sub-domain설정은 기준 Line의 방향및 길이를 고려하여 직사각형의 영역을 얻은다음에, Coordinate별로 정렬되어 있는 Sorted Node List를 이용하여 대상 절점들을 Stack에 모은 다음에, 이 절점들과 기준 Line간의 내각을 계산하여 최대치를 얻음으로써 최적의 절점을 선택하는 방식을 취하였다. 만약에 처음의 시도에서 적정한 절점이 취해지지 않으면 영역전개를 위한 기준 길이를 확장하여 좀더 넓은 내부영역을 커버하는 직사각형의 변수를 구한 다음에 위의 과정을 반복하도록 하였다.
최대 내각에 의한 절점 선정은 인접 절점이 요소의 내부에 수용되는 것을 방지하여 준다.
              
    
   그림 3.7) 영역전개 원리
             대상 선분의 방향과 크기에 따라 검색대상영역의 결정방법을 보여준다.검색대상영역은 점선으로 표시되어있다. 

   
 
   그림 3.8) 대상절점 선정 및 최적절점의 판정
             a - g 는 대상절점을 표시하며 중 최대값을 갖는 절점을 선택한다.

  요소생성시 관련 자료구조의 수정

하나의 요소가 생성되면 기본자료의 정보도 동시에 수정되어야 하는데,이에는 Line List, Point Connectivity 및 Line Connectivity 등이 있다.
본 절에서는 선정된 절점의 특성에 따라 각각 관련 정보를 수정하는 기본 Algorithm 에 대하여 설명한다.

  Free Node
선정된 절점이 경계선상의 절점이 아닌 경우이다.

  그림  3.9) Free Node Configuration


이때의 자료수정 절차는 다음과 같다.

1) Create Left & Right Line and add Line List
기준 선분과 선택된 절점을 연결하는 선분이 2개 생기게 되며,이것을 Line List의 끝에 추가시킨다.
2) Create Element with Base Line,Left Line and Right Line
3개의 Line 을 이용하여 Element를 생성하고  Element Link에 연결한다.
3) Kill base line
Line List상에서 기준선분에 작업 처리완료 표시를 한다.
이에 따라 작업 대상 영역은 새로 생성된 요소만큼 줄어든다.
4) Line Connectivity Modify
작업 전후의 Line Connectivity Configuration은 다음과 같다.

       요소생성전                 

Line ID    Before Line      After Line  
--------  ------------  --------------   
base       before           after        
before     before->before   base         
after       base            after->after   
                                  
                           
      요소생성후

 Line ID  Before Line      After Line 
 ------  -------------  -----------
 base         -            - 
 before    before->before   left
 after     right             after->after  
 left       before           right
 right     left              after


요소생성전후에 Configuration상에 변화가 생긴 left line에 대하여 객체지향개념의 명령어의 예를 들어본다면
     left->put_before(before);
     left->put_after(right);
와 같이되어 대단히 간단히 될 수 있다.
4) Point Connectivity Modify
작업 전후의 Point Connectivity Configuration은 다음과 같다.

         요소생성전                       요소생성후                  
                                          
  PointID   In Line     Out Line    PointID   In Line       Out Line     
  ------- ---------- ---------  -------- ---------- -------- 
     P1       before       base         P1       before       left   
     P2       base        after         P2       right        after
     P3       NULL      NULL         P3       left         right

  Left Overlapped Node
선정된 절점이 before line의 시작점일 경우이다.
  
그림 3.10 ) Left Overlapped Node Configuration


1) Create Right Line and add Line List
2) Create Element with Base Line,Left Line and Right Line
3) Kill base line ,base.before and P1
4) Line Connectivity Modify
       요소생성전                           

Line ID         Before Line             After Line        
 ----------- ------------------    ---------- 
base            before                    after       
before          before->before            base      
before->before  before->before->before    before        
after           base                      after->after
                                            
        요소생성후

Line ID         Before Line               After Line        
-----------  ---------------------  ---------- 
base             -                         - 
before           -                         -
before->before  before->before->before    right     
right           before->before             after
after           right                      after->after
5) Point Connectivity Modify

       요소생성전                            요소생성후
                                           
Point    In Line       Out Line       Point     In Line      Out Line  
-----  -----------   ---------   ------   ---------   -------- 
P1      before           base          P1       NULL          NULL
P2      base            after          P2       right           after
P3      before->before   before        P3       before->before  right
                                           
  Right Overlapped Node
선정된 절점이 after line의 끝점일 경우이다.


그림 3.11) Right Overlapped Node Configuration


1) Create Left Line and add Line List
2) Create Element with Base Line,Left Line and Right Line
3) Kill base line ,after line  and p1
4) Line Connectivity Modify
       요소생성전                           

Line ID         Before Line               After Line        
-----------  ---------------------  ---------- 
base            before                    after       
before          before->before            base      
after            base                     after->after
after->after     after                     after->after->after 

        요소생성후
Line ID         Before Line             After Line        
-----------  --------------------  ---------- 
base             -                         - 
after             -                         -
before          before->before            left     
left             before                    after->after
after->after     left                      after->after->after

5) Point Connectivity Modify
       요소생성전                           요소생성후
 Point    In Line    Out Line        Point    In Line   Out Line      
 ------ --------- --------       ------  -------- --------- 
  P1      before      base           P1      before      left
  P2     base        after           P2      NULL      NULL
  P3     after        after->after    P3      left        after->after


  Loop Node
선정된 절점이 befor line의 시작점이면서 after line의 끝점일 경우이다.
            
그림 3.12 ) Loop Node Configuration

1) Kill base,base.before and base.after lines
 이때에는 관련 Line과 관련 Point 모두에 처리완료표시를 한다.
2) Create Element with base line,before line and after line
  Married Node
선택된 절점이 기준 선분과는 다른 형상요소로부터 생성되어 나온 절점일 경우이다.
이때에는 작업대상 영역의 분할이 이루어 지게되므로 해당 절점의 Point Connectivity 는 복수개가 된다.
        

그림 3.13) Married Node Configuration

1) Create Left & Right Line and add Line List
2) Create Element with Base Line,Left Line and Right Line
3) Kill base line 
4) Line Connectivity Modify

       요소생성전                           

Line ID         Before Line              After Line            
----------  ---------------------    ---------
base            before                    after       
before          before->before            base      
after           base                      after->after
in              in->before                out
out             in                        out->after

        요소생성후

Line ID         Before Line               After Line            
----------  ----------------------  ---------
base             -                         - 
before          before->before            left     
after           right                     after->after
left            before                    out
right           in                        after
in             in->before                right
out            left                      out

5) Point Connectivity Modify


       요소생성전                        요소생성후

 Point   In Line    Out Line      Point    In Line        Out Line 
 ------ -------- ----------   -----  -----------  ----------
 P1      before      base          P1      before          left
 P2      base        after         P2      right           after
 P3      in          out           P3 --+- in              right
                                        +- left            out



  
 제   장 요소 평활화( Smoothing )
 
 전항의 방법으로 삼각형요소 생성이 끝나게 되면 요소 평활화 기법을 사용하여 형상특성이 개선된 최종적인 요소망을 얻는다.      
평활화 기법은 Shephard [14]에 의하여 제안된 방법을 적용한다.
이 방법은 내부의 절점을 인접한 절점의 도형중심과 현재의 위치와의 평균위치로 이동시켜 가면서 그 추이를 판단하는 것으로,이 과정에서 경계선 상의 절점은 고정시겨 둔다.
즉  

    
           

실행결과를 관찰해 보면 대개 4-6 번의 반복과정후에는  의 범위내로 수렴하는 것을 알 수 있다.

  제   장   작업과정의 예 

  입력 
자동 요소분할을 위한 입력정보는 형상정보,조정인자(Control Parameter)정보 및 유한요소 해석을 위한 출력생성에 필요한 경계조건 및 관련정보로 이루어 진다.

  형상 정보

입력형상의 정의는 다음과 같은 몇가지의 규칙을 가지고 있다.
1) 형상요소( Geometric Feature)는 직선,Hole및 원호로써 이루어 진다.
2) 형상의 정의는 형상요소들의 입력순서에 따라 형성되는 폐루프(closed loop)들로서 이루어 지며, 첫번째 폐루프는 외부경계로 인식되며 이후의 폐루프는 내부형상(Void)으로 인식된다.
3) 형상요소의 입력순서는 내부영역을 왼쪽에 갖도록 진행된다.
4) 형상요소별 입력정보의 내용은 다음과 같다.
      - 직선 : 점의 좌표, loop id
      - 원   : 중심점의 좌표,loop id, 반경
      - 원호 : 중심점의 좌표,loop id, 반경,회전방향

  조정인자(Control Parameter) 정보

1) 형상전체의 자유도( Total No of Degree)
작업대상 형상의 총자유도의 갯수로서 경계선및 내부영역 전체 절점의 수에 대한 대략적인 지표이다. 
입력된 전체 자유도의 수에 따라서 기본 요소의 크기가 결정되며, 이것에서 부터 최소 요소의 크기를 결정한다.
2) 각종계수
발생시킬 요소의 크기나 숫자등을 제어하기 위한 계수들로서 응력집중요소의 형태별로 최소요소의 크기조정계수및 추후요소크기의 결정계수가 있다.
  입력예

다음은 그림들은 외부 경계선에 2개의 노치를 가지고 있고 내부에 Hole이 있는 작업대상 형상 및 이것을 위한 입력정보를 보여주는 예이다.

   그림  5.1 ) 작업대상의 형상

  0     0.           0       0
  0    10.           0       0
  2    12.           0       0   2.0   0
  0    14.           0       0
  0    20.           0       0
  0    20.          10       0
  0     5.          10       0
  0     4.5          8       0
  0     4.0         10       0
  0     0.          10       0
  1    16.           5       3    2
--+-  -------+---------   --+-- -+-------
  |          |              |    +---   radius ( and rotaion in arc)
  |          |              +--------   loop id
  |          +-----------------------   x,y coordinates
  +-----------------------------------  geometry feature id
  
  그림  5.2 ) 형상정보의 입력예

  경계조건 및 기타 정보

만약에 본 시스템의 결과를 별도의 유한요소 해석프로그램에의 입력정보로 사용하려면 다음과 같은 사항이 입력된다.

- Program Description

- Boundary Condition
  . Point Restraint
  . Point Force
  . Line Restraint
  . Line Force

- Control Parameters
  . No of Material Properties
  . No of Point Forces
  . No of Line Forces
  . Type of Stress Analysis (Plain Stress/Plain Strain)

- Material Properties

- Boundary Condition Parameters
  . Prescribed Restraints' Information
  . Prescribed Boundary Forces' Information
      
      

   작업 결과

전장에서 언급된 형상구성, 응력집중요소의 판별, 경계선및 영역내부에서의 절점발생과 생성된 요소의 평활화 과정등을 그림으로 설명한다.
             

그림 5.3)  입력된  2차원 형상과, 기본 절점만이 영역내에 생성되어 있는 모양.


 
 그림  5.4 ) 영역내부에 기본절점 및 각각의 응력집중요소로부터의 절점이 동시에 발생되어 섞여있는 모습을 보이고 있다.
 

 그림 5.5)  영역내부의 절점들이 응력집중요소별 영향력계수를 평가한 후에 정리되어  있는 최종적인 상태

 그림 5.6 )  정리된 Line List의 순서에 따라서 삼각형 요소를 생성해 나가기 시작하고 있다.


    
그림 5.7)    외부경계선에서부터 진행되어 나온 요소생성이 끝나면 이어서 내부경계선에서의 요소생성을 시작한다.


그림 5.8 )   외부 경계선에서 생성된 요소와 내부경계선에서 생성된 요소들이 만나게 되면 ,내부의 영역을 분할 하여 경계 Line을 조정한다.


그림 5.9) 요소분할이 진행되면서,내부영역이 많은 수의  Sub-domain으로 분할되어 있는 모양.




 그림  5.10 )  요소분할이 완료된 모양.


그림 5.11 )  요소평활화 과정 ( after 1st Iteration ) 


 그림 5.12 )  요소평활화 완료후 ( after 5 iterarion)


   그림 5.13 ) 요소 및 절점의 검색


  그림 5.14 )  임의형상의 요소분할




   제  장   결론



 점차로 보편화되어가는 CAE환경에서 전문가의 손을 빌지 않더라도 일반적인 설계자의 수준에서 손쉽게 유한요소해석수법을 활용할수있는 전처리기의 개발을 목적으로 본 연구를 수행한 결과 다음과 같은 결론을 얻었다.


(1) 단순한 형상입력정보로 부터 경계선및 영역내에서 응력집중요소를 판별해 내고, 간단한 퍼지함수를 도입함으로써 만족할만한 수준의 절점을 발생시켜줄 수있는 시스템이 개발되었다.

(2) 발생된 절점들은 어떠한 상태에서라도 정확하게 요소화할 수있는 Algorithm이 개발되었다.

(3) 절점발생 및 요소생성의 제반 Algorithm을 객체지향개념의 언어에 의하여 구현함으로써 향후의 좀더 정교한 시스템으로의 발전을 위한 기반을 구축하였다.
  
초 록


 2차원 형상을 표현하는 간단한 좌표값들로부터,응력집중요소를 판별해내고,이러한 응력집중요소로 부터 적절한 형태의 절점패턴을 발생시킨 다음에 요소망을 형성 해주는 자동요소생성 시스템을 개발하였다.

 응력집중요소들로부터 절점 패턴을 생성해내고,이후에 이러한 중복된 절점들을 선별하여 해석대상물체의 최종적인 절점분포를 확정하는 과정에서 퍼지함수를 도입함으로써,손쉽게 전문가에 근사한 요소생성이 가능하게 되었다.

 본 연구를 통하여 유한요소해석을 위한 전처리과정에서 퍼지이론의 적용가능성을 확인할수 있었으며 또한 개발된 시스템은 객체지향언어가 사용됨으로써 향후의 시스템확장에 능동적으로 적응될 수있다.


주요어    : 자동요소생성,퍼지 Membership 함수,객체지향언어




   References

1.  W.C. Thacker, A Brief Review of Techniques for Generating Irregular Computational Grids
    Int. J. Numer. Methods Eng  Vol.15 1335-1342,1980
2.  Soo-Won Chae, On the Automatic Generation of near optimal meshes for the three-dimensional linear elastic finite element analysis
    PhD thesis Dept. of Mechanical Engineering,Massachusettes Institute of TechnologyJanuary 1988
3.  J.C. Cavendish, Automatic Triangulation of Arbitrary Planar Domains for the Finite Element MEthod.
    Int. J. Numer. Methods Eng   8:679-696,1974
4.  S.H. Lo,A New Mesh Generation Scheme for Arbitray Planar Domains
    Int. J. Numer. Methods Eng   21;1403-1426,1985
5.  A.Bykat, Automatic Generation of Triangular Grid I-Subdivision of a General Polygon into Convex Subregions;II-Triangulation of Convex Polygons
    Int. J. Numer. Methods Eng   10 : 1329-1342,1976
6.  M.S. Terry and M.S.Shephard, A Modified-Quadtree Approach to Finite Element Mesh Generation
    IEEE Computer Graphics and Applications 3(I);36-46,1983
7.  E.A. Sadek, A Scheme for the Automatic Generation of Triangular Finite Elements
    Int. J. Numer. Methods Eng  15(!2):1813-1822,1977
8. Masaaki Yokoyama, Automated Computer Simulation of Two -Dimensional Elastostaic Problems by the Finite Element Method
    Int. J. Numer. Methods Eng  21: 2273-2287,1985.
9.  矢川元基,福田收一,あいまい知識處理手法に基つ"く自動要素分割システム
   計算 力學 [II] pp 163-180 養賢堂

10. 김형주, 객체지향시스템, 교학사, 1992
11. Bjorne Stroustrup, The C++ Programming Language,Second Edition
   Addition-Wesley Publishing Company,1991
12. R.E.Peterson, Stress Concentration Factors
   A Wiley-Interscience Publication
13. 三好俊郞, 有限要素自動分割エキスパア-トシスデム
   計算 力學 [II] pp 183-184 養賢堂
14. M.S.Shephard, Finite Element Grid Optimization with Interactive Computer Graphics, PhD Thesis Dept.of Structured Engr.School of Civil Engr.,Cornell University,January,1979


 
감사의 글


이태전 이맘 때, 나를 무어라고 불러야 좋겠냐고 심각한 표정으로 물어오던 다소 낯선 실험실 동료들의 얼굴이 하나의 기억으로 남아있는데, 겨을비가 추적거리며 내리는 이태가 지난 오늘은,식구와도 같이 느껴지는 실험실의 여러 동료들과 마치 먼 여행이라도 떠났다가 이제는 집으로 돌아오는 열차칸에라도 같이 앉아있는 듯한 다소 나른한 느낌입니다.

부끄러운 이 논문을 마치면서 오랫동안 나를 이끌어 주신 교수님들과 동료들에게 감사하다는 말 만으로는 도저히 채울 수 없을 것같은 커다란 고마움을 달리 표현하지 못함에 답답함마저 느낍니다.

또한 이처럼 소중한 기회를 나에게 베풀어 주신 회사의 고마운 분들을 저는 절대로 잊을 수 없습니다.

항상 아들을 위해 기도해 주시고 힘을 주신 어머님과 형님,형수님 그리고 조카들...............
언제나 나에게 큰 힘과 용기를 주시는 장인과 장모님......... 
온갖 정성으로 나를 아껴준 사랑하는 나의 아내와 생각만하여도 무한한 기쁨과 의욕을 불러 일궈주는 나의 두 아이들 ..........

헤아릴 수없이 많은 은혜를 입었습니다.

이 큰 은혜와 이 큰 빚을 다소라도 갚기위한 나의 생각과 행동은 무엇이어야 하는가를 조용히 생각하고 기도하고자 합니다..........  

</tdmsfiletext>
