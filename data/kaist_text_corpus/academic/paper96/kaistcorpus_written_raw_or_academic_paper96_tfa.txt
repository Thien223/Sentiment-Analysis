<language> Korean </language>
<textcode> KSC-5601-1988 </textcode>
<process> raw </process>
<version> 2001(or)</version>
<filename> kaistcorpus_written_raw_or_academic_paper96_tfa.txt </filename>
<title> 지식기반을 활용한 선형계획법 교육지원시스템의 개발에 관한 연구 </title>
<author> 김우제 </author>
<date> 1993</date>
<publisher> 서울대학교 </publisher>
<kdc> TD530.95 </kdc>
<tdmsfiletext>
   초  록
   본 논문의 목적은 선형계획법  교육을 지원하기 위한 시스템을 설계하고 구현
하는  것이다. 이 시스템에서는 지식기반을 활용하여  입력자료로부터 모형을 인
식하고, 단체법의 여러가지 해법을 선택하여 그 과정을 이해하기 쉽게 하였다.
   본 논문에서는 첫째, 선형계획법의  입력자료,  모형, 해법 및 프로그램 수행
에 관한 교육을 지원하는 기능을 가진  선형계획법 교육 지원시스템의 전반적 구
조를 설계하였다. 이 구조는 모형인식시스템, 풀이지원시스템, 단체법의 표현 등
의 하부시스템으로 구성된다. 
   둘째, 지식기반을  활용하여 모형을   인식하는 하부시스템에서는 선형최적화 
모형들을 프레임베이스 형태로  표현하여  지식기반을 구축하였으며, 패턴비교인
식과 탐색전략을  도입하여  모형인식을 위한 추론기관을 구축하였다. 그리고 여
러가지 선형계획법  해법을  선택할 수 있는 풀이지원시스템에 대한 기본 구조를 
설계하였다. 
   셋째, 여러가지 단체법을 수행할  수  있는 도구로 교육용 선형계획법 프로그
램을 개발하였다. 여기서는 초기기저의 선정방법 및 퇴화시 진입변수의 선정방법
에  대한 발견적 기법으로 단체법의 수행횟수를 줄였으며,  오차의 측정과 통제, 
선회요소의 관리,  재역산실시를  통해 교육용  선형계획법 프로그램의 안정성을 
제고시켰다. 
   마지막으로 선형계획법의  풀이과정에  대한 정보를 다양한  수준으로 제공할 
수  있도록 단체법의 표현 방법에 대한  설계를 하였다. 여기서는 피교육자의 수
준에 따른 세가지  수준의 출력방식과 가능해집합과 단체법의 풀이과정을 시각적
으로 표현하는 방법을 구현하였다. 
   주요어 : 선형계획법, 지식기반,  교육지원시스템, 교육용 선형계획법 프로그
램, 모형인식시스템
  




  1. 서론
 
1.1. 연구동기 및 목적 

선형계획법(Linear Programming)은 경영과학 분야에서 가장 널리 사용되고 있는 모형중의 하나이다. 이것은 모형수립이 명료하고 해법이 잘 개발되어 있을 뿐만 아니라 대단히 많은 변수를 가진 방대한 문제도 쉽게 다룰 수 있기 때문에 시스템의 기획 및 설계분야, 경영관리 및 운영분야, 공학분야의 최적화 문제, 그밖에 환경과 지역개발 문제등 다방면에 걸쳐서 넓게 이용되고 있다. 이러한 폭넓은 활용범위에 따라 선형계획법 문제를 해결하는 방법은 Dantzig의 단체법 이래 최근의 내부점 기법에 이르기까지 알고리즘적으로 많은 연구가 이루어 졌다.
그러나 수많은 선형계획법 알고리즘에 관한 연구에도 불구하고 선형계획법을 실제의 경영 및 행정에서 의사결정의 기본도구로 사용하려면 선형계획법의 전문가를 필요로 하고 있다. 이것은 선형계획법에서는 문제의 정형화 과정, 입력자료의 형성과정, 적절한 해법의 선택과정 및 해를 분석하는 과정들이 상당히 복잡하여, 선형계획법에 익숙하지 않은 의사결정자가 선형계획법을 의사결정의 기본도구로서 사용하기에는 어려움이 많기 때문이다. 따라서 비전문가도 선형계획법을 보다 쉽게 이해하기 위해서는 선형계획법의 정형화 과정, 입력자료형성과정, 해법선택과정, 해의 분석과정에 대한 선형계획법 교육 지원시스템이 절실히 요구되고 있다.
본 논문에서는 선형계획법의 문제해결과정에서 지식기반 교육 지원시스템의 기본 구조 설계와 구축을 목적으로 한다. 선형계획법에서의 지식기반 교육 지원시스템이란 주어진 선형계획법 모형에 대한 교육과 선형계획법 해법 및 프로그램에 대한 교육을 지원할 수 있는 기능을 가진 시스템을 말한다.
한편, 선형계획법으로 문제를 해결하는 과정은 개략적으로 문제의 정형화과정, 해법의 선택과정, 문제의 풀이과정등으로 구분되어진다. 본 논문에서는 해법의 선택과정과 문제의 풀이과정에서 선형계획법의 비전문가를 보다 적절하게 지원할 수 있는 지식기반 교육 지원시스템을 구축하고자한다. 
이를 위해 본 논문에서는 다음과 같은 연구를 수행한다.
첫째, 지식기반 선형계획법 교육 지원시스템의 전반적인 구조를 설계한다. 선형계획법 교육 지원시스템이 갖추어야 할 기능과 특징을 설계하고 선형계획법 교육 지원시스템의 하부시스템들의 기능을 설계한다. 하부시스템은 모형인식시스템과 풀이지원시스템이 있으며 교육용 선형계획법 프로그램들로 구성된다.
둘째, 모형인식시스템은 입력자료를 가지고 주어진 문제의 수리계획 모형이 선형최적화 모형중 어느 모형에 가장 적합한가를 판별하는 시스템이다. 여기서는 선형최적화 모형의 틀(Frame)을 설계하고 각각의 선형최적화 모형을 지식으로 보관하는 방법, 그리고 이러한 지식베이스(Knowledge Base)를 가지고 어느 모형에 가장 부합되는지를 판별하는 추론기관(Inference Engine)에 대해 설계한다.
그리고 풀이지원시스템은 선형계획법의 여러 해법 구조를 교육하고 해법을 선택하는 데 지원하는 시스템이다. 여기서는 선형계획법의 여러 해법을 분석하여 선형계획법 해법의 구조를 설계하고 풀이지원시스템의 기본적 구조를 구축한다. 
셋째, 교육용 선형계획법 프로그램의 개발에 관한 연구를 한다. 교육용 선형계획법 프로그램이 갖추어야할 기능들을 살펴보고 프로그램의 안정화와 효율화를 기할 수 있는 여러가지 기법들을 도입한다.
넷째, 선형계획법의 비전문가가 선형계획법에 대한 이해를 보다 쉽게 할 수 있도록 선형계획법의 풀이과정에 대한 정보를 다양한 수준으로 제공하고 선형계획법의 풀이과정을 시각적으로 보여주는 방법을 설계한다. 여기서는 선형계획법의 여러해법 중 단체법에 대해 풀이과정 정보제공 방법을 설계한다. 

 1.2.  선형계획법 문제의 해결과정

선형계획법 교육 지원시스템을 구축하기 위해서는 선형계획법으로 문제해결을 하는 전반적인 과정을 분석할 필요가 있다. 그래서 선형계획법의 전문가가 선형계획법 문제를 해결하는 전반적인 절차를 분석하면 개략적으로 [그림 1-1]과 같다.
선형계획법의 전문가는 주어진 문제를 선형계획법으로 풀기 위해서는 수리적 모형(Mathematical Model)으로 정형화 하여야 한다. 그런데 문제의 정형화단계에서 실제 문제(Real Problem)를 수리적으로 표현하기 위해서는 먼저 개념화(Conceptualization) 단계를 거쳐 문제가 어떠한 문제인지를 개략적으로 파악하여야 한다. 그런 다음 정형화단계에서 결정변수를 설정하여 주어진 문제에 대한 목적함수와 제약식을 수리식으로 표현하여 수리계획모형을 수립한다. 다음, 수리계획법 패키지로 문제를 해결하기 위해서는 입력자료를 형성하여야 한다. 선형계획법의 실제 문제는 방대한 크기의 대형 문제이므로 입력자료를 사용자가 직접 작성하기는 쉽지 않다. 그러므로 실제 문제의 입력자료 형성은 이를 지원하는 여러가지 입력자료 형성 프로그램(Formulator)들을 사용하고 있다. 여기까지 수행 단계는 수리계획 모형을 수립하는 단계이므로 모형수립단계(Formulation Process)로 분류할 수 있다.
그런데 입력자료 형성 프로그램들은 대부분 입력 자료를 선형계획법 패키지에 알맞은 형태로 생성한다. 따라서 입력자료로 형성된 자료만으로는 개념화 단계에서 분석하였던 주어진 문제에 대한 수리계획모형의 유형에 대한 정보를 상실하게 된다. 그러므로 입력 자료를 가지고 주어진 문제의 수리모형이 선형최적화 모형중 어느 모형에 적합한가를 파악하여, 그에 적합한 해법을 사용하면 보다 효율적으로 주어진 문제를 해결할 수 있게 된다. 그래서 다음 작업으로 입력자료에 대한 분석을 통해 모형 인식 과정을 거친다. 
다음, 모형 인식 과정을 거쳐 어떠한 모형인가를 파악하게 되면 이 모형을 풀기에 적합한 해법을 선택하는 과정을 거친다. 그런 다음 실제로 주어진 모형에 대한 문제를 패키지로 풀기위해 입력자료의 규모화(Scaling) 및 허용오차(Tolerance) 설정 등의 패키지 환경을 설정한다.
                               +--------+
                               | 문  제 |
                               +--------+
                                   ↓
         +------------------------------------------------------+  
         |    제1단계 : 모형수립단계 (Formulation Process)      |
         |                                                      |
         |        +-------------------------------------+       |
         |        |  문제의 개념화 (Conceptualization)  |       |
         |        +-------------------------------------+       |
         |                         ↓                           |
         |        +-------------------------------------+       |
         |        |       문제의 정형화 (Formulation)   |       |
         |        +-------------------------------------+       |
         |                         ↓                           |
         |        +-------------------------------------+       |
         |        |         입력자료 형성               |       |
         |        +-------------------------------------+       |
         +------------------------------------------------------+
                                   ↓  
         +------------------------------------------------------+  
         |        제2단계 : 풀이단계 (Solving Process)          |
         |                                                      |
         |        +-------------------------------------+       |
         |        |            모형  인식               |       |
         |        +-------------------------------------+       |
         |                         ↓                           |
         |        +-------------------------------------+       |
         |        |            해법  선택               |       |
         |        +-------------------------------------+       |
         |                         ↓                           |
         |        +-------------------------------------+       |
         |        |            환경  설정               |       |
         |        +-------------------------------------+       |
         |                         ↓                           |
         |        +-------------------------------------+       |
         |        |          Problem Solving            |       |
         |        +-------------------------------------+       |
         +------------------------------------------------------+
                                   ↓  
         +------------------------------------------------------+  
         |      제3단계 : 해의 해석단계 (Analysis Process)      |
         |                                                      |
         |        +-------------------------------------+       |
         |        |                해                   |       |
         |        +-------------------------------------+       |
         |                         ↓                           |
         |        +-------------------------------------+       |
         |        |         해의 분석 및 표현           |       |
         |        +-------------------------------------+       |
         +------------------------------------------------------+      

 [그림 1-1] 선형계획법의 문제해결과정
다음, 주어진 문제에 적합한 해법과 패키지의 환경 설정을 한 후 해를 구한다. 모형 인식 과정에서부터 해의 풀이 단계까지는 주어진 문제를 해결하는 풀이 단계(Solving Process)로 분석된다.
선형계획법 패키지에 의해 해가 구해진 다음 과정은 해의 분석 단계로 의사결정자가 이해하기 쉬운 형태로 해를 표현하는 과정을 거치게 된다.
이러한 선형계획법의 전반적인 문제 해결과정을 분석함으로써 각 단계에서 선형계획법의 비전문가를 지원할 수 있는 선형계획법 교육 지원시스템의 틀(Frame)을 설계할 수 있다.
먼저 모형수립 단계에서는 문제의 정형화 단계에서 비전문가를 지원할 수 있는 정형화 지원시스템이 있을 수 있겠으며, 다음으로 입력 자료의 형성 단계에서 사용자를 지원할 수 있는 입력자료 형성 지원시스템이 가능하겠다.
풀이 단계에서는 입력자료를 택하여 모형을 인식할 때의 모형인식시스템과 해법선택을 지원하는 풀이지원시스템, 그리고 선형계획법 교육목적에 맞는 프로그램 등이 갖추어져야 한다.
해의 해석 단계에서도 사용자가 보다 쉽게 해를 이해할 수 있도록 해의 분석 지원시스템이 있을 수 있겠다.
본 논문에서는 선형계획법의 풀이 단계에서의 모형인식시스템 및 풀이지원시스템의 설계, 교육용 단체법 프로그램의 개발 그리고 단체법의 풀이 과정을 표현하는 방법에 대한 연구를 실시한다.

 1.3. 지식기반 선형계획법 교육 지원시스템

선형계획법을 비전문가에 대한 이해와 지원을 보다 증진시키기 위해서는 선형계획법 문제해결과정에서 부분적으로 비전문가를 지원하는 것 보다는 통합적으로 지원하는 것이 더 효율적이다. 그러므로 본 논문에서의 지식기반 선형계획법 교육 지원시스템은 선형계획법의 풀이 단계에서 선형계획법의 비전문가를 총괄적으로 지원할 수 있도록 설계한다.
선형계획법의 풀이과정에서 선형계획법 교육 지원시스템의 구성은 선형계획법 모형에 대한 교육을 위한 모형인식시스템, 해법의 구조에 대한 교육 및 해법선택을 지원하는 풀이지원시스템, 선형계획법의 교육목적을 지닌 교육용 선형계획법 프로그램, 실험용 문제 생성 또는 입력자료 형식변경등의 기능을 가진 선형계획법 교육 지원시스템의 통합환경으로 구성된다.
지식기반 선형계획법 교육 지원시스템의 전반적인 구조는 [그림1-2]와 같다.

     +-----------------------------------------------------------------+
     |                                                                 |
     |   +----------+    +------------+      +--------------------+    |
     |   |  입  력  | → | 입력 자료  +--+-→|    모형  인식      |    |
     |   |  자  료  |    |   분석     |  |   |      시스템        |    |
     |   +----------+    +------------+  |   +--------------------+    |
     |                                   |             ↓              |
     |                                   |   +--------------------+    |
     |                                   |→ |     풀이  지원     |    |
     |                                   |   |       시스템       |    |
     |                                   |   +--------------------+    |
     |                                   |             ↓              |
     |                                   |   +--------------------+    |
     |                                   |   |   교육용  단체법   |    |
     |                                   +→ |      프로그램      |    |
     |                                       +--------------------+    |
     |                                                 ↓              |
     |           +--------------------+      +--------------------+    |
     |           | 단체법의 표현과정  |←----+     Solution       |    |
     |           +--------------------+      +--------------------+    |
     |                                                                 |
     +-----------------------------------------------------------------+

          [그림 1-2] 지식기반 선형계획법 교육 지원시스템의 구조

지식기반 선형계획법 교육 지원시스템은 먼저 주어진 문제의 입력자료를 분석하여 선형최적화 모형중 어느 모형에 부합되는지를 알아보기 위해 모형인식시스템을 거친다. 본 연구에서의 모형인식시스템은 선형최적화 모형에서의 모형인식시스템을 다룬다. 
다음에는 모형인식시스템에서 판별된 모형으로 주어진 문제를 해결할 때 해법을 선택한다. 이러한 해법 선택을 위해 선형계획법의 비전문가가 보다 수월하게 해법을 선택할 수 있도록 풀이지원시스템을 설계한다. 
다음에는 여러가지 해법을 하나의 통합된 프로그램으로 해결할 수 있는 교육용 선형계획법 프로그램을 수행한다.
그리고 지식기반 선형계획법 교육 지원시스템에서는 선형계획법의 비전문가가 선형계획법의 수행과정을 보다 쉽게 이해하도록 선형계획법의 풀이과정을 사용자의 수준에 따라 다른 정보를 제공하며, 가능해집합과 풀이과정을 시각적으로 보여주는 기능도 갖추고 있다.

  2. 연구배경

 2.1 인공지능과 선형계획법

인공지능을 경영과학(Operations Research) 또는 계량적 의사결정 방법(Quantatitive Method for Decision Support)에 적용하고자한 문헌들은 LEE [LEE 90]와 Turban [TUR 90]의 연구조사(Survey)논문에 잘 나타나고 있다. 그리고 O'keefe [OKE 86]은 전반적으로 경영과학에서 인공지능기법이 활용가능한 분야를 제시하였다. 이들 논문에서는 경영과학에서 인공지능기법이 활용가능한 분야로는 모델의 분류(Classification), 계량적 분석방법에 지식기반방법(Knowledge based Method)을 첨가하여 해를 개선하는 방법, 감도분석(Sensitivity Analysis)시 과거의 결과를 첨가하여 해를 개선하는 방법 등이 제시되었으며, 경영과학의 자문역으로서의 인공지능기법이 이용가능하다고 제시하였다. 
한편, 지식기반시스템, 모형관리시스템 등의 인공지능기법들을 선형계획법에 응용하고자 했던 문헌들을 살펴보면 크게 세가지로 분류된다. 먼저 문제의 정형화 과정에서 인공지능기법을 적용한 것과 해의 해석과정에서 인공지능기법을 적용한 것 그리고 모델 관리적(Model Management) 입장에서 인공지능기법을 적용한 분야가 있다. 

 2.1.1. 정형화과정에서의 통합

문제의 정형화 과정에서 인공지능기법을 적용한 분야는 현재 가장 광범위하게 연구되고 있으며, Murphy의 연구조사 논문[MUR 92]에서는 선형계획법의 정형화 방법을 8가지로 분류하였다. Murphy의 분류에서는 선형계획법의 표현 방법을 [표 2-1]과 같이 분류하였다.

               [표 2-1] 선형계획법 표현 방법의 분류
      --------------------------------------+---------------------------
             표 현   방 법                  |        특  징
      --------------------------------------+---------------------------
           기호(Symbol)                     |
       - 행렬 생성자(Matrix generator)      |  MPS 형식
       - 절차적 언어(Non procedual          |  
            language)                       |  
         : 수리적 언어(Algebraic language)  |  산술적 표현
         : 데이타베이스적 언어              |  데이타베이스 (Database
              (Database oriented language)  |      of data tables) 
           그래픽(Graphic)                  |
       - 구조적 모형화(Structual Modeling)  |  식과 자료의 구조
       - 블럭화 언어(Block Schematic        |  선형계획법 행렬계수의
              language)                     |   비영블록
       - 네트워크 표현                      |  
         : 활동-제약 그래프                 |  활동/제약 네트워크
              (Activity/constraint graphs)  |
         : 네트워크 형태(Netforms)          |  자원흐름의 네트워크
       - 상징적 언어(Iconic language)       |  실제 사물과 유사
      --------------------------------------+-------------------------- 
                                          
                                          
선형계획법의 정형화과정을 지원하는 모형화 언어(Modeling Language)에는 다음과 같은 것들이 있다. 
Murphy, Stohr, Ma [MUR86][MA 89]는 LPFORM이라는 선형계획법의 정형화(Formulation)를 부분적으로 실행할 수 있는 시스템을 구축하였다. 이 시스템은 상징적 언어를 사용한 시스템으로 선형계획법 문제를 계층적 정형화 과정으로 여러가지 부분문제로 나누고 각 부분문제에 대하여 상세한 기술을 하고, 이를 통합하는 방법에 대해 연구하였다. Geoffrion [GEO 87][GEO 92]은 수리적 형태(Algebric Form)와 그래픽을 사용한 구조적 모형화 방법(Structured Modeling)에 대해 연구하여 SML이라는 정형화 지원 언어를 개발하였다. 수리적 표현의 형태로는 GAMS [BRO 88], LINDO [SCH 91]등이 있다. 이들은 수리식을 정형화 언어에 알맞은 형태로 입력하면 프로그램 내부에서 문제를 인식하고 해를 산정하여 준다. 
그리고 Lee [LEE 89]는 특정 영역(Domain)에 연관되지 않은 UNIK-OPT라는 지식 기반 모형 지원시스템(Knowledge-based Modeling Support System)을 구축하여 선형계획법에 적용하였다. Welch [WEL 89]는 블럭형태의 정형화 방법을 사용한 PAM(Practioner's Approach to Modeling)이라는 시스템을 개발 하였다. Choobineh [CHO 91]는 SQLMP라는 것을 개발하였는데 이는 선형계획법의 수리적 모형을 입력자료의 관계적 모형으로 일치시키는 방법으로 정형화를 지원하였다. Singh와 Sadagopan [SIH 87]도 최적화 모형에서 정형화를 할 수 있는 모형화 언어를 개발하여 LAMP라는 시스템을 구축하였다. Johns [JOH 90]는 그래프적 표현에 기초한 GBMS를 설계하여 네트워크 형태의 문제를 입력하는 예제를 보였다. 그리고 최근에는 객체지향 프로그램(Object Oriented Programming)을 이용한 정형화 시스템의 설계가 연구되고 있다.[CHO 93] 이밖에도 Krishnan [KRI 88][KRI 89]은 생산, 재고, 분배 시스템(Production, Inventory and Distribution System)에 사용할 수 있는 PM이라는 모형 정형화 시스템을 개발하였다. 그리고 특정영역에서의 데이타 베이스를 사용하여 정형화 및 입력자료의 형성과정을 지원하는 선형계획법 정형화 시스템도 개발하였다.[WHI 91]
한편, Kendrick [KEN 90]은 수리적 형태의 정형화 방법, 그래프 형태의 정형화 방법, 행렬형태의 정형화 방법들 간에 서로 모형 변환이 가능하도록 하여 모형 정형화의 수직적 변형과 수평적 변형을 동시에 수행할 수 있는 모형 정형화 시스템의 기본 틀(Frame)을 제시하였다. 

 2.1.2. 모형관리에서의 통합

모형 관리적 입장에서의 경영과학과 인공지능이 통합된 분야는 Blanning [BLA 93]의 모형관리시스템이라는 연구조사 논문에서 전반적인 연구상황이 나타나 있다. 모형 관리적 입장에서 인공지능기법을 선형계획법 분야에 적용한 분야에서는 Lee, Sklar, Zahedi, Banerjee, Mannino, Dolk, Sklar 등이 연구하였다. 이재식 [LEE 90][LEE 91]은 선형계획법의 모형들에 대한 인식을 인공지능기법을 도입하여 구현하였다. 여기서는 모형운영체제의 기능을 보다 효율적으로 하기 위해 모형보관을 등식구조베이스(Equation Structure Base)와 정형화 지식베이스(Formulation Knowledge Base)로 분리하여 보관하고, 그 모형이 속해 있는 범주 명칭(Category Name)과 그 모형의 명칭을 제시하는 모형기반시스템(Model Based System)을 구축하였다. 등식구조베이스에서는 같은 구조를 갖는 등식은 동일한 형태의 등식으로 보관하였으며, 정형화 지식베이스에서는 선형 최적화 모형에서의 목적함수와 제약식의 구조를 등식구조베이스에 있는 등식들의 결합으로 표현하여 선형최적화 모형을 지식으로 보관하였다. 이렇게 함으로써 선형최적화 모형을 보관하기위한 기억 공간을 절약하였으며, 선형최적화 모형의 구조적 시스템을 구축하였다.  
Banerjee 와 Basu [BAN 93]는 모형선택에 관한 통합적인 의사결정시스템을 설계하였다. 여기서는 모형선택에 영향을 미치는 요인을 환경적 요인, 기능적 요인, 기술적 요인, 경제적 요인, 주관적 요인의 5가지로 분석하였으며, 모형 선택을 하기 위한 단계로 환경적 단계, 구조적 단계, 매개변수 단계, 해법 단계등의 4단계로 구성하는 설계방안을 제시하였다. 환경적 단계에서는 주어진 문제의 입력과 출력의 형태, 목표 등의 환경적 요인과 경제적 요인에 의하여 모형이 선택되며, 구조적 단계에서는 변수의 특성 또는 변수들간의 관계와 같은 기능적 요인에 의해 모형 선택을 한다. 매개변수 단계에서는 특정 모형의 매개변수 값의 영역(Domain)들이 관계하고 있으며, 해법 단계에서는 문제의 크기, 사용자의 주관적 요인들을 관련시켜 모형 선택을 하였다. 그리고 모형 분류의 구조를 지식으로 표현하는 방법으로 프레임 기반방법 (Frame based method)이 적절함을 보였다. 
또한, Mannino, Greenberg, Hong [MAN 88][MAN 90]등은 모델을 관리하는 방법과 모형을 추론하는 방법에 대해 연구하였다. 여기서는 선형최적화 모형을 구성하는 요소로 가정(Assumption), 수리적 형태, 입력 요소, 출력 요소, 해법으로 규정하였다. 모형의 표현방법으로는 집합 포함관계(Set Inclusion)와 상속(Inheritance)의 개념을 도입하여 모형간의 부분 우선 관계(Partial Order Relation)를 정하고 이들 모형을 분류시켜 보관하였다. 추론 방법(Reasoning Method)으로는 부정확한 일치(Inexact Matching)의 개념을 도입하여 가장 비슷한 모형의 범위를 제시하고 있다. 그리고 모형 선택 중 설명(Explanation) 기능을 시스템에 도입하는 방법에 대해 연구하였다. 
Liang [LIA 86]은 모형의 합성과 모형의 선택을 할 수 있는 시스템을 그래프적인 방법으로 구축하였다. 여기서는 모형을 선택하기 위해 모형베이스에 보관되어 있는 단위 모형들을 가지고 모형 그래프를 AND/OR 그래프로 구축하고, 이 모형 그래프 상에서 적합한 모형들의 순서(Sequence)를 찾아내는 시스템을 구축하였다. 그리고 Dolk와 Konsynski [DOL84]는 모형의 개념화(Method Abstract)를 통하여 모형 관리 시스템을 위한 모형들의 표현 방법에 대해 연구하였다.  
한편, Sklar[SKL 89]는 선형계획법에서의 적절한 지식 구축(Knowledge Representation) 방법과 선형계획법에 대한 지식을 획득(Knowledge Acquisition) 하는 방법을 실험적으로 실시하였다. 선형계획법의 지식표현방법으로는 지식을 문법적(Syntactic) 지식과 의미적(Semantic) 지식으로 분류하여 프레임 기반 방법과 규칙기반 방법의 혼합 시스템(Hybrid System)으로 표현하는 것이 적절함을 보였다. 그리고 Zahedi [ZAH 90]는 정수계획법 문제에서 프로젝트를 실시하였던 경험적 지식을 지식 베이스로 구축하여 정수계획법 문제를 풀때 풀이 방법을 지도하는 시스템을 규칙기반 시스템(Rule-based System)으로 구현하였다.
모형관리 입장에서 인공지능기법을 선형계획법 분야에 응용한 연구에서는 정형화된 식 또는 여러가지 환경적 요인, 경제적 요인, 주관적 요인, 기능적 요인 들을 입력정보로 하여 모형 선택을 하고 있다. 그런데 선형계획법의 수행과정중 정형화 단계를 거쳐 형성된 입력 데이타를 가지고 선형 최적화 모형중 가장 적합한 모형을 판별하는 부분에 대한 연구는 이루어지지 않고 있다. 따라서 입력 데이타만을 가지고 선형최적화 모형을 인식하는 모형인식시스템에 대한 연구가 필요하다. 

 2.1.3. 해의 해석과정에서의 통합

해의 해석과정에서 인공지능기법을 적용한 분야에 대한 연구로는 Greenberg [GRE 87]가 대표적으로 연구하였는데 그는 ANALYZE 라는 시스템으로 선형계획법 문제의 형태와 해를 설명하였다. 여기서는 선형계획법 모형과 해를 설명하기 위해 자연어 해석(Natural Language Discourse) 방법을 도입하였다.  즉, 제약식을 묘사하기 위해 문법적 규칙인 동사변형규칙(Verb Translation Rule)을 제시하였으며,  활동(Activity)을 묘사하기 위해서는 활동 입출력 변형 규칙(Activity IO Translation Role)을 제시하였다. 또한 Greenberg[GRE 87][GRE 91] 는 선형계획법 문제의 입력자료를 분석하여 비가해(Infeasibility)여부와 무한해(Unboundedness)여부를 조사하는 방법을 연구하였다.
그리고 양경훈 [양 92]은 회귀모형에서의 해를 해석하는 시스템에 대해 연구하였다. 여기서는 해의 해석을 모형관리 시스템과 퍼지이론(Fuzzy Logic)을 응용하여 패턴비교선택(Pattern Matching) 방법으로 통계적 모형에서의 해를 해석하였다. 
이러한 선형계획법 분야에서 인공지능기법응 응용한 연구는 최근 활발히 연구되고 있으나, 아직까지는 부분적으로만 연구되고 있으며 전체적으로 선형계획법을 지원하는 시스템에 대한 연구는 미진한 상태이다.  따라서 선형계획법을 모형분석에서 부터 해법의 선택, 프로그램 수행 환경의 설정등의 해법분석단계에서 선형계획법을 통괄적으로 지원할 수 있는 지식기반 선형계획법 교육 지원시스템에 대한 연구가 필요한 실정이다. 

 2.2. 선형계획법 해법과 환경

 2.2.1. 선형계획법 해법

선형계획법 문제를 풀이하는 해법은 크게 단체법형과 내부점기법형 그리고 특수형태로 구분할 수 있다. 
단체법형에서는 원단체법이 가장 보편적으로 쓰이는 해법이며 이 밖에 쌍대단체법(Dual Simplex method), 원-쌍대단체법(Primal-Dual Simplex method), 가능방향법(Feasible direction method)이 있다.
원단체법은 원가능인 해(Primal Feasible Solution)에서 시작하여 상보여유정리(Complementary Slackness Theory)를 만족시키면서 개선을 거듭하여 쌍대가능성(Dual Feasibility)에 도달할 때 최적해를 찾게 되는 해법이며, 쌍대단체법은 쌍대가능인 해에서 시작하여 상보여유정리를 만족시키면서 원가능성에 도달할 때 최적해를 찾게되는 해법이다. 또한, 원-쌍대단체법은 원가능이면서 동시에 쌍대가능인 해로부터 시작하여 상보여유정리를 만족시키면서 최적해를 찾는 해법이다.[박 92] 그리고 가능방향법은 단체법을 기초로 하는 방법으로써 어느 정점에서 해를 개선시키고자 할 때, 이웃 정점으로 이동하는 것이 아니라 가능해 집합의 내부방향으로 이동하여 최적해를 찾아가는 해법이다.
단체법은 원단체법, 쌍대단체법, 원-쌍대 단체법, 가능방향법으로 나눌 수 있다. 이중 원단체법은 기저행열의 보관법, 평가전략, 진입변수 선택방법, 초기해 선택방법등으로 구성되는데 이들 각각에 대한 여러가지 변형된 방법들이 있다. 기저행열 보관법에는 명시형, 적산형, 상하분해형이 있으며, 상하분해형은 Batels-Golub 방법, Forrest-Tomlin 방법, Cholesky 방법으로 나뉘어 진다. 평가전략은 일반평가, 다종평가(Multiple Pricing) 및 부분평가(Partial Pricing)가 있으며, 진입변수 선택방법에는 최대경사법(Steepest descent method), 최소첨수법(Least index method), 최대감소법(Best descent method), 최후첨수법(Last index method)등이 있다. 그리고 초기해 선택방법에는 대수법(Big M method), 2국면법(Two Phase method) 등이 있다. 쌍대단체법의 구성요소는 원단체법의 구성요소와 같이 기저행열의 보관법, 평가전략, 진입변수 선택방법, 초기해 선택방법 등으로 구성된다. 그리고 가능방향법은 진입 변수의 갯수와 축소과정에서의 전략에 따라 여러가지 변형된 방법들이 파생된다. 
이러한 원단체법, 쌍대단체법, 원-쌍대단체법, 가능방향법은 단체법을 기본으로 하고 있어 실용성이 훌륭하나 최악의 경우(Worst Case)에는 지수시간 복잡도(Exponentioal Time Complexity)를 가질 수 있다. 그래서 최근 관심을 보이고 있는 내부점기법은 내부가능점에서 해를 찾아가는 방법으로 최악의 경우에 대한 복잡도가 다항시간(Polynomial Time) 복잡도를 갖는다. 이러한 내부점 기법에는 가능해 영역을 타원체(Ellipsoid)로 덮어 이 타원체를 점점 줄여 최적해를 찾는 Khachiyan법(타원체법)과 사영변환에 의해 새로운 가능해를 만들어 가는 Karmarkar법이 있다. 그리고 사영변환 대신에 Affine 변환에 의해 새로운 가능해를 만들어 가는 애핀법이 있다.
내부점기법의 하나인 Khachiyan법은 이론적으로는 우수하나 실용적인 면에서는 다른 기법들에 비해 열세이다. Karmarkar법은 역행렬 계산법에 따라 여러가지 변형된 해법들이 있다. 역행렬 계산법은 Gauss 소거법, QR 분해법, Cholesky 분해법으로 나뉘어 진다. 애핀법은 원애핀법(Primal Affine Scaling method)와 쌍대 애핀법(Dual Affine Scaling method)이 있으며,  이들도 각각 역행열 계산법에 따라 변형된 해법들이 존재한다.
특수해법은 특수한 형태의 문제들에 적합한 해법으로 일반한계법과 분해해법이 있다. 일반한계법은 변수가 상한 및 하한을 갖는 경우 이를 제약식으로 풀지 않고 개선폭의 결정시 하나의 고려사항으로 푸는 방법이다. 분해해법은 선형계획법 문제가 여러개의 동일한 구조를 가지는 부분 문제로 나눌 수 있는 경우 이를 효율적으로 푸는 방법이다. 일반한계법의 구성요소는 원단체법과 같이 기저행열의 보관법, 평가전략, 평가방법, 초기해선택방법등으로 구성되며, 이들은 원단체법과 같은 변형 방법들을 가진다. 분해해법은 동일한 구조의 형태에 따라 m0+1 차와 m0+l 차 방법이 있다. 
이러한 여러가지의 선형계획법 해법들은 모두 나름대로의 특성을 가지고 있어 어떤 특정문제에 대해서는 특정 해법이 우월하게 적용될 수 있다. 즉, Fathi 와 Murty [FAT 89] 는 가능방향법의 여러가지 변형된 해법에 대해 소개하고 이 해법들과 원단체법과의 전산실험결과를 비교분석하여 각각의 문제 특성에 적합한 가능방향법 해법을 제시하였다. 또한, Adler [ADL 87] 등에 의하면 문제의 크기가 커지게 되면 Karmarkar법이 원단체법보다 수행시간 측면에서 우월하다는 것을 실험적으로 보였다.

 2.2.2. 입력자료의 규모화

선형계획법의 해법인 단체법에서는 주어진 문제를 보다 수치적으로 안정되게 풀기위해 입력자료에 대한 조건(Condition)을 향상시키는 규모화(Scaling)을 실시한다. 입력자료의 규모화에 대한 연구는 Tomlin [TOM 75]의 연구에 잘 나타나 있다. 입력자료에 대해 규모화를 실시하게 되면 수치적인 안정 뿐만아니라 변수의 상하한에 대한 정보를 축약적으로 보관할 수 있으며, 단체법의 수행 횟수를 줄일 수 있다. 따라서 상업용 선형계획법 패키지에서는 입력자료의 규모화를 실시하고 있다. CPLEX [BIX 92]와 MINOS [MUR87]에서는 각 열과 행에서 가장 큰 수를 나누어 주는 방법을 사용하고 있다.
그런데 지금까지의 연구에서 일반적인 행렬에 대해 Well Scale에 대한 정의는 각각의 연구자에 의해 다르게 발표되고 있다. 
Orchard Hays [HAY 68]는 Well Scale기준을
   
   
로 두고 있으며, Hamming과 Curtis 는 Well Scale의 기준을
   
    
로 설정하였다.
Orchard-hays는 행렬계수의 최대값과 최소값의 비율을 고려한 것이고, Hamming과 Curtis는 실제로 컴퓨터내에서 표현되는 Digit로 표현한 것이다.
한편, 규모화의 방법으로는 기본적으로 각 열과 행을 가장 큰 수로 나누는 평형기법(Equilibration Method)이 있고, 행열 요소의 산술 평균을 구한 후 이것으로 나누어주는 산술평균기법(Arithmetic Mean Method)이 있다. 그리고 행열 요소에 대해  를 구해 이것으로 나누어주는 기하평균기법(Geometric Mean Method)이 있다. 이외에도 최적 규모화 방법으로 Fulkerson-Wolfe의 방법과 Curtis-Reid의 방법이 있다. 그러나 이 두방법은 모두 최적 규모화를 위해 또다른 선형계획법 문제를 풀어야 하므로 실용적이지 못하다.[TOM 75]

 2.2.3. 허용오차

선형계획문제에서의 오차분석은 Forrest와 Tomlin [FOR 92]에 의하면 크게 두가지 동기에서 추구되었다. 첫째로는 비가해, 무한해 또는 최적해를 구한 경우 프로그램이 끝났음을 알지 못하고 계속 단체수행을 계속하는 경우에 이를 방지하기 위해서 연구되었으며, 둘째로는 2국면으로 넘어갔으나 영의 선회요소로 나누거나 혹은 잘못된 선택으로 비음(Non-negative)인 요소가 진입하는 경우에는 해가 줄었다 늘었다 하는 진동현상(Oscillation)이 있게 되는데 이러한 해의 진동형상을 방지하기 위해 연구되었다.
이런 문제에 대한 해결은 첫째, 기저행렬의 역행렬을 좀더 조심스럽게 유지하여 이 역행렬 부분에 오차의 개입 소지를 최소한 줄이는 방법이 있을 수 있다. 둘째로는 주어진 단체 수행 알고리즘의 일부를 개선하여 전체적 부분에서 오차의 개입을 줄일 수 있는 방법들이 고려된다. 그리고 현단계에서의 오차를 분석하여 적절한 허용오차를 설정함으로서 안정적인 해를 구하는 방법이 있다.
허용오차의 설정방법에는 크게 두가지의 연구 방향이 있는데 하나는 주어진 계산기의 하드웨어적 속성을 가지고 많은 실험을 통해 경험적으로 선형계획 문제에서 주어진 허용오차를 결정하는 방법이 있으며, 다른 하나는 행렬이나 벡터의 속성에 의해 허용오차를 동적으로 관리하는 분야가 있다.
경험적 허용오차의 설정에서 Orchard Hay [HAY 68]의 경우 허용오차의 설정이 필요한 분야를 수의 크기의 역치(TABS,TDIF), 선회요소의 크기(TRES,TINV,TPIV), 원 쌍대의 비가해 여부(TZER), 오차확인(TCHK) 과정에서의 허용오차등의 4가지로 분류하였다. 둘째, Tewarson [TEW 73]은 10진수 연산의 경우 탈락변수의 허용오차(Drop Tolerance)를 10-7 으로, 선회요소의 허용오차(Pivot Tolerance)를 10-3 으로 추천하였다. Murtagh [MUR 81]에서는 선형계획 문제의 계산오차를 줄이기 위한 방법으로 잠재가의 허용오차는 10-5 으로, 행렬요소의 허용오차는 10-10 으로, 선회요소의 허용오차는 10-8 으로, 우변상수의 허용오차는 10-6 의 4가지로 제시하였고, 계산오차의 누적이 있을 시 재역산이 필요함을 밝히고 있다. Murty [MUR 83]는 계산상 안정된 형태의 기저의 보관방법을 LU factorization 이나 Cholesky factor 라고 밝히고 있으며,   b - BxB   와   cB -  BB   를 25 회나 50 회에서 계산한 후, 이 오차가 (10-6 ~ 10-7) 보다 커졌을 때 재역산을 실시해야한다고 지적하였다. 대표적인 상업용 선형계획법 프로그램의 허용오차는 [표 2-2]와 같다.
동적 허용오차의 설정분야에서는 Clasen [CLA 66]이 허용오차를 일정한 값으로 주지않고 자동적으로 통제할 수 있는 방법을 제시하였다. 그리고 Ogryczak [OGR 87]의 경우 원가능성과 쌍대가능성을 유지하기 위한 허용오차의 오차분석에 의해 허용오차를 동적으로 정의하는 방법을 제시하였다.

           [표 2-2] 상업용 선형계획법 프로그램의 허용오차
     
                                '-'는 알려지지 않은 것을 의미함

 2.2.4. 상업용 선형계획법 프로그램

선형계획법의 상업용 전산 프로그램은 대학교 또는 전산기 제조회사에서 독자적인 프로그램을 제공하고 있다. 예로서 대형 컴퓨터에서 사용할 수 있는 프로그램으로 다음과 같은 것들이 있다.
IBM  -  MPS/360, MPSX/370, OSL(Optimization Subroutine Library)
CDC  -  APEXⅢ, OPHELIEⅡ
UNIVAC  -  MPS
HONEYWELL  -  LP6000, ALPS
FACOM  -  LIPS
개인용 컴퓨터에서 수행할 수 있는 선형계획법 프로그램은 대표적으로 다음과 같은 것들이 있다.
LINDO System Inc.  -  LINDO
Stanford Univ.  -  GAMS/MINOS 
Eastern Software  -  LP88
Maximal Inc.  -  Turbo-Simplex
Dash Associates  -  XPRESS-LP 
개인용 컴퓨터에서 수행할 수 있는 선형계획법 프로그램은 대략적으로 500개의 제약식 수와 2,000개의 변수 수를 가진 문제를 풀수 있는 프로그램에서 부터 2,000개의 제약식 수와 5,000개의 변수 수를 가진 문제를 풀 수 있는 프로그램까지 다양하게 개발 되었다. 또한, 개인용 컴퓨터에서 수행할 수 있는 선형계획법 프로그램은 대형 전산기의 선형계획법 프로그램 보다는 사용자 편의성을 강조하고 있다. 
그런데 이러한 상업용 선형계획법 프로그램은 대부분 선형계획법의 여러 알고리듬중 하나의 특정 알고리듬으로 개발되었으므로 선형계획법의 모든 해법들에 대한 교육지원 도구로는 미흡한 실정이다.  따라서 선형계획법의 여러 해법들에 대해 교육지원 가능한 교육용 선형계획법 프로그램의 개발이 필요하다. 

  3. 선형계획법 교육 지원시스템의 설계

 3.1. 기능 및 특성

선형계획법 교육 지원시스템은 선형계획법의 비전문가에 대한 교육을 목적으로 선형계획법의 모형과 다양한 해법을 이해할 수 있도록 하는 환경을 제공하여야 한다. 그러기 위해 선형계획법 교육 지원시스템이 갖추어야 할 교육 기능은 다음과 같다.
1. 선형계획법 모형에 대한 교육 기능 
2. 선형계획법 입력자료에 대한 교육 기능 
3. 선형계획법 해법에 대한 교육 기능
4. 선형계획법 프로그램 수행에 대한 교육 기능
선형계획법 모형에 대한 교육은 선형최적화 모형들간의 연관관계에 대한 교육과 주어진 문제가 선형최적화 모형 중 어느 모형인지를 파악하는 교육이 필요하다. 그래서 선형계획법 교육 지원시스템에서는 선형최적화 모형들을 표현할 수 있는 지식베이스가 있어야 하며, 선형최적화 모형들의 연관관계를 파악하는 기능과 주어진 문제가 선형최적화 모형 중 어느 모형에 속하는 지를 파악하는 추론기관이 필요하다. 
선형계획법 입력자료에 대한 교육에서는 입력자료의 형태와 입력자료를 형성하는 방법에 대한 교육이 필요하다. 선형계획법 교육 지원시스템에서는 여러가지 형식의 입력자료를 생성시킬 수 있는 기능과 이들 입력자료들 간의 변형이 가능하도록 하여야 한다. 
선형계획법 해법에 대한 교육은 선형계획법의 여러가지 해법의 구조와 방법들에 대한 교육이 필요하다. 그러므로 선형계획법 교육 지원시스템에서는 선형계획법의 해법 구조를 가지고 있는 지식베이스가 있어야 하며 여러가지의 해법을 실험해 볼 수 있는 교육용 선형계획법 프로그램이 있어야 한다.
선형계획법 프로그램 수행에 대한 교육에서는 선형계획법의 각 단계에서 변형된 알고리즘들의 실험과 입력자료의 규모화 및 허용오차 등의 프로그램 환경 설정에 따른 선형계획법 수행결과를 비교 분석할 수 있어야 한다. 이를 위해서 선형계획법 교육 지원시스템에서는 선형계획법 프로그램들을 실험해 볼 수 있는 안정적인 선형계획법 프로그램과 실험용 선형계획법 문제를 생성하는 기능을 갖추어야 한다.
그런데 선형계획법 교육 지원시스템이 선형계획법 비전문가에 대하여 위와 같은 교육 기능을 원활히 하기 위해서는 기본적으로 다음과 같은 기능을 갖추어야 한다.
1. 선형계획법 모형과 다양한 해법을 교육할 수 있는 통합환경의 구축
2. 사용자 편의성(User-friendliness)의 강조
3. 다양한 수준의 교육 정보 제공 기능
통합환경의 구축은 선형계획법 교육 지원시스템이 갖추어야 할 네 가지 교육기능을 하나의 프로그램 환경에서 수행할 수 있는 기능을 의미한다. 
사용자 편의성은 선형계획법 교육 지원시스템의 사용자가 비전문가이므로 사용자가 선형계획법 교육 지원시스템에 보다 쉽게 접근할 수 있도록 하는 기능이다. 
다양한 수준의 선형계획법 교육정보 제공기능은 선형계획법 비전문가의 수준에 맞게 선형계획법의 수행과정을 표현할 수 있어야 한다는 것이다.
그러므로 선형계획법 교육 지원시스템의 설계시에는 네가지 교육 기능과 세가지 기능적인 면에 중점을 두어 설계 및 구축하여야 한다.

 3.2. 선형계획법 교육 지원시스템 구조

선형계획법 모형, 입력자료, 해법 및 프로그램 수행 등에 관한 교육을 지원하는 선형계획법 교육 지원시스템의 기본구조는 [그림 3-1]과 같다.

                  선형계획법 교육 지원시스템
                              |
    +----------+--------------+---------------+------------------+

입력자료    모형인식    선형계획법    실험용 문제생성 및     환경설정
  관리       시스템        해법       입력자료형식 변경        

              [그림 3-1] 선형계획법 교육 지원시스템 구조

입력자료 관리에서는 사용자가 자료를 쉽게 새로 만들거나 수정을 할 수 있도록 몇가지 형태의 입력자료 편집기 기능을 갖추고 있어야 한다.  즉, 스프레드 쉬트(Spread Sheet) 형태의 입력자료 편집기 또는 도표(Table)형태의 입력자료 편집기 등으로 사용자 편의성을 강조시켜야 한다.모형인식시스템에서는 각 모형들간의 연관관계와 주어진 문제를 선형최적화 모형 중 어느 모형과 일치하는가를 판별하는 기능을 가지고 있다. 여기서는 선형최적화 모형들을 표현하기 위한 지식베이스와 대상문제가 선형최적화 모형 중 어느 모형인지를 파악하기 위한 추론기관으로 구성된다. 
선형계획법 해법에서는 해법(Algorithm)들의 구조와 선형계획법 문제의 풀이를 위한 선택지원 기능을 가지고 있으며, 여러가지 선형계획법 해법들을 안정적으로 수행할 수 있는 선형계획법 프로그램으로 구성된다.
실험용 문제 생성 및 입력자료 형식 변경에서는 문제의 크기, 밀집도, 변수들의 종류, 최적해에서의 상태 등을 설정함으로서 사용자가 원하는 형태의 최적해를 가진 선형계획법 문제로 생성할 수 있는 기능과 각 입력자료 형식에 따라 형식을 변형시켜 주는 기능을 가지고 있다. 입력자료의 형식에는 가장 일반적인 MPS형태와 열위주의 보관방식, 행위주의 보관방식의 3가지 형태가 있다.
환경설정에서는 선형계획법의 출력정보에 대한 출력기준 선택과 선형계획법 교육 지원시스템의 여러가지 환경들을 제어할 수 있는 기능들을 포함한다.

 3.3. LIPED

선형계획법 교육 지원시스템은 LIPED(LINear Programming EDucational Package)란 이름으로 개발되었다. LIPED는 선형계획법 교육 지원시스템의 기능을 하나의 통합환경으로 구조화시켜 개발되었다. LIPED의 로고화면은 [그림 3-2]와 같다.

+--------------------------------------------------------------------------------+
|     FILE  EDIT  MODEL  ALGORITHM  DATA  OPTIONS                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                   +--------------------------------------+                     |
|                   |                                      |                     |
|                   |            LIPED ver 1.2             |                     |
|                   |                                      |                     |
|                   | LINear Programming EDucational pack. |                     |
|                   |                                      |                     |
|                   |      Systems Analysis Laboratory     |                     |
|                   | Department of Industrial Engineering |                     |
|                   |       Seoul National University      |                     |
|                   |                                      |                     |
|                   +--------------------------------------+                     |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
+--------------------------------------------------------------------------------+


 [그림 3-2] LIPED 로고 화면

[그림 3-2]에서 FILE은 여러가지 편집을 위해 화일을 열고 저장하는 기능과 몇가지 유틸리티를 가지고 있다. EDIT는 스프레드 쉬트형태와 MPS의 도표형태 입력자료를 작성할 수 있는 편집기를 가지고 있다. MODEL은 선형계획법 모형인식시스템의 기능을 보유하고 있다. ALGORITHM은 선형계획법 해법을 선택할 수 있도록 지원하여 주고 각 해법에 대한 단계별 설명을 지원하여주는 기능을 가지고 있다. 또한, 선형계획법 프로그램과 연결되어 해를 제공하는 기능을 가지고 있다. 여기서는 교육용 선형계획법 프로그램의 유지 및 보수의 편의성을 증대시킬 수 있도록 교육용 선형계획법 프로그램에 독립적으로 개발되었다. DATA는 주어진 조건을 만족하는 실험용 선형계획법 문제를 생성하는 프로그램과 입력자료의 형식을 변경시키는 프로그램으로 구성된다. OPTIONS는 화면색상의 조절과 각 선형계획법 프로그램에서 출력하는 정보의 수준을 선택할 수 있는 기능을 가지고 있다.
또한, LIPED는 사용자 편의성을 강조하여 각 메뉴상에서 [그림 3-3]와 같이 풀다운 메뉴가 나타난다. 그리고 사용자의 접근성이 용이하도록 단축키를 사용할 수 있는 기능을 가지고 있다.


+--------------------------------------------------------------------------------+
|     FILE  EDIT  MODEL  ALGORITHM  DATA  OPTIONS                                |
|   +--------------+                                                             |
|   | View      @V |                                                             |
|   | Print     @P |                                                             |
|   | Dos shell @D |                                                             |
|   | Exit      @X |                                                             |
|   +--------------+                                                             |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
+--------------------------------------------------------------------------------+

 [그림 3-3] 풀다운 메뉴와 단축키

 3.4. 입력자료관리

LIPED는 선형계획법 입력자료에 대한 교육을 지원하기 위해 몇가지 형태의 입력자료를 사용자가 용이하게 작성할 수 있도록 입력자료에 대한 관리기능을 가지고 있다.
LIPED에서는 스프레드 쉬트(Spread Sheet) 형태의 입력자료 편집기와 MPS 형태의 입력자료를 지원할 수 있도록 도표(Table)화 시킨 편집기를 가지고 있다.
(1) 스프레드 쉬트 편집기

스프레드 쉬트 편집기는 입력자료를 스프레드 쉬트 형태로 편집할 수 있도록 지원하여 입력자료의 편집시 사용자에 대한 편의성이 강조된 입력자료 편집기이다.  
스프레드 쉬트 편집기에서는 [그림 3-4]와 같은 스프레드 쉬트에 들어가서 셀 단위로 옮겨 가면서 입력자료를 편집할 수 있다.

+--------------------------------------------------------------------------------+
|C:\LIPED\LP1.DAT                                                                |
|                                                                                |
|MAX         40.0    50.0    80.0   110.0                                        |
|s.t.    COL1    COL2    COL3    COL4                             RHS            |
|ROW1         1.0     1.0     1.0     1.0                             15.0       |
|ROW2         3.0     5.0    10.0    15.0                            105.0       |
|ROW3         7.0     5.0     3.0     2.0                            120.0       |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|                                                                                |
|F1 Help  Alt-O Open  Alt-S Save  Alt-N New                                      |
+--------------------------------------------------------------------------------+

 [그림 3-4] 스프레드 쉬트 편집기

스프레드 쉬트 편집기는 현재 작업중인 화일의 이름과 목적함수의 형태 및 목적함수의 계수를 관리할 수 있는 행과 각각의 변수와 제약식의 이름을 표시할 수 있는 행과 열이 있다. 그리고 행렬계수와 우변상수 그리고 제약식의 형태를 셀 단위로 입력할 수 있다. [그림 3-4]와 같이 행렬계수, 우변상수, 목적함수계수 등을 블럭(Block)화시켜 사용자 편의성을 증대시켰다.
또한, 스프레드 쉬트 하단부에는 도움말 기능과 입력자료를 파일로 관리할 수 있는 기능들을 단축키 기능으로 가지고 있다.

(2) MPS 자료 도표 편집기

입력자료를 MPS형태로 작성하기 위해 이를 도표상태로 지원하여 준다. MPS 자료 도표 편집기는 MPS 입력자료의 작성시 칸수를 고려해야 하는 불편을 제거할 수 있다. 또한, 입력자료의 일관성(Integrity)을 유지하기 위해 행이름이 바뀌면 각각의 행렬요소에서의 모든 행이름이 바뀌게 되도록 작성되어 있으며 열이름이 수정될 경우에도 상하한에 있는 변수 이름을 함께 바꾸어 준다. MPS 자료 편집기는 [그림 3-5]와 같이 나타나며 NAMES, COLUMNS, RHS, BOUNDS 등 모두 4개의 도표가 한 화면에 존재한다.

+--------------------------------------------------------------------------------+
|C:\LIPED\LP1.DAT                                                                |
|                                                                                |
|+ NAMES --------------------------++ COLUMNS ---------------------------------+ |
|| i    row name    j    var name  ||  row name     var name     column value  | |
|+---+------------+---+------------++------------+------------+----------------+ |
||  0|  OBJECT    |  1|  COL1      ||  ROW1      |  COL1      |          1.00  | |
||  1|  ROW1      |  2|  COL2      ||  ROW1      |  COL2      |          1.00  | |
||  2|  ROW2      |  3|  COL3      ||  ROW1      |  COL3      |          1.00  | |
||  3|  ROW3      |  4|  COL4      ||  ROW1      |  COL4      |          1.00  | |
||   |            |   |            ||            |            |                | |
||   |            |   |            ||            |            |                | |
||   |            |   |            ||            |            |                | |
|+---+------------+---+------------++------------+------------+----------------+ |
|+ RHS ------------------------++ BOUNDS --------------------------------------+ |
|| row name        RHS value   ||  var name     lower bound      upper bound   | |
|+-----------+-+---------------++------------+----------------+----------------+ |
|| OBJECT    |=|          MAX  ||  COL1      |           0.0  |          +INF  | |
|| ROW1      | |         15.0  ||  COL2      |           0.0  |          +INF  | |
|| ROW2      | |        105.0  ||  COL3      |           0.0  |          +INF  | |
|| ROW3      | |        120.0  ||  COL4      |           0.0  |          +INF  | |
||           | |               ||            |                |                | |
||           | |               ||            |                |                | |
||           | |               ||            |                |                | |
|+-----------+-+---------------++------------+----------------+----------------+ |
|F1 Help  Alt-O Open  Alt-S Save                                                 |
+--------------------------------------------------------------------------------+

 [그림 3-5] MPS 자료 편집기

NAMES에서는 변수의 이름과 제약식의 이름을 표현할 수 있다. COLUMNS에서는 NAMES에서 커서가 위치한 제약식에서의 행렬계수를 나타낸다. RHS에서는 목적함수의 형태, 제약식의 형태, 우변상수의 값을 나타낸다. 그리고 BOUNDS에서는 각 변수의 상하한 값을 입력할 수 있다. 또한, MPS 자료 편집기에서는 도움말 기능과 입력자료를 파일로 관리할 수 있는 기능들을 단축키 기능으로 가지고 있다.
  4. 모형인식시스템과 풀이지원시스템

 4.1. 모형인식시스템

 4.1.1. 개요

선형최적화 모형은 수리계획모형중 선형성질을 갖는 모형이다. 이러한 선형최적화 모형 분야에서는 특수한 형태의 문제들에 잘 적용될 수 있는 해법들이 많이 개발되어 왔다. 예를 들면, 수송문제를 풀기 위한 해법, 정수계획법 문제를 풀기 위한 해법, 네트워크 형태의 문제를 풀기 위한 해법들이 잘 발달되어 왔다. 그리고 일반적인 선형계획법 문제에서의 해법들도 단체법, 내부점 기법등으로 발전되어 왔다. 
따라서 주어진 문제가 선형최적화 모형중 어느 형태의 문제인가를 파악하게 되면, 그 모형에 적합한 해법을 선택할 수 있어 보다 효율적으로 문제를 해결할 수 있게 된다. 그러므로 이러한 모형을 인식하는 방법에 대한 모형인식시스템을 구축하게 되면, 선형계획법의 비전문가에게 선형계획법 모형에 대한 교육을 지원할 수 있게 된다. 
그런데 이러한 모형 인식에 대한 연구는 의사결정지원시스템의 하나인 모형관리 시스템(Model Management System)에서 연구되어 왔다. 지금까지의 연구는 개념적 수준이거나 입력자료가 정형화 식으로 주어질 때의 모형인식에 관한 연구였다. 그런데 실제로 문제를 풀기 위해서는 입력자료가 데이타 형태로 주어지는 경우가 많으므로, 이 경우에 대상 문제가 어떠한 모형에 적합한가에 대한 연구가 필요하다.
본 연구에서는 선형최적화 모형의 정형화 과정을 거쳐 행렬계수, 우변상수 그리고 목적함수의 계수가 구해졌을 때, 대상 문제가 선형최적화 모형의 여러 모형중 어느 형태의 문제인가를 인식하는 문제에 대해 연구하였다.
모형인식시스템은 [그림 4-1]과 같은 구조를 가진다.

   +-----------------------------------------------------------------------+
   |  +----------+   +----------+    +-----------------+   +------------+  |
   |  | 입력자료 +---+ 입력자료 |    | 선형최적화 모형 +-+-+ 지식베이스 |  |
   |  +----------+   |   분석   |    |   지식베이스    | | | 관리시스템 |  |
   |                 +-----+----+    +---------+-------+ | +------------+  |
   |                       +---------+---------+         |                 |
   |                                 |              +----+-----+           |
   |                                 +--------------+ 탐색공간 |           |
   |                                 |              +----------+           |
   |                      +----------+-----------+                         |
   |                      |      추론 기관       |                         |
   |                      +----------+-----------+                         |
   |                      +----------+-----------+                         |
   |                      |      모형 인식       |                         |
   |                      +----------------------+                         |
   +-----------------------------------------------------------------------+
                 [그림 4-1] 모형인식시스템 구조

모형인식시스템에서는 주어진 문제를 분석한 후, 이것을 선형최적화 모형의 지식베이스와 추론기관에 의하여 패턴비교선택(Pattern matching)을 실시함으로서 모형인식을 한다. 선형최적화 모형 지식베이스 관리시스템에서는 모형들의 입력, 삭제, 수정 등을 관리하고 입력, 삭제, 수정시 변경되는 선형최적화 모형들의 연관관계를 수정하고 탐색공간을 구성한다.
본 연구에서는 모형인식을 위해 먼저 선형최적화 모형을 표현하기 위한 지식베이스(Knowledge) 를 설계하고, 선형최적화 모형의 연관관계를 조사한다. 그리고 각각의 모형을 인식하는 방법인 추론방법에 대해 연구한다.

 4.1.2. 선형최적화 모형의 표현

선형최적화 모형이란 수리계획 모형중 제약식과 목적함수가 선형형태를 가지는 모형으로 다음과 같은 형태를 가진다.

    
                $   {  , =,   } 

목적함수는 최대 또는 최소 형태를 취할 수 있으며, 제약식의 연산자(Operator)인 $ 는 {  , =,   } 중 하나를 취할 수 있다.
그런데 일반적으로 모형을 정의하는데는 모형관리시스템(Model Management System) 분야에서 여러가지 방법으로 정의되었다. 그 중 모형을 정의하는 가장 일반적인 방법은 다음과 같다.

정의 4-1 : 모형
M = < I, O, A >
M : 모형, I : 입력요소, O: 출력요소,  A:알고리즘

그러면 식 (4.1)의 선형최적화 모형은 입력요소와 출력요소를 다시 여러가지의 속성(Attribute)으로 구분함으로서 정의할 수 있다.
즉, 식(4.1)에서와 같이 선형최적화 모형에서의 입력요소는 A, b, c, l, u, $, Min(Max)로 규정할 수 있으며, 출력요소는 X로 결정된다. 따라서, 선형최적화 모형에서의 입력요소, 출력요소, 알고리즘을 정의하는 요소들은 [표 4-1]과 같이 구성된다.
[표 4-1]과 같이 선형최적화 모형의 입력요소는 목적함수계수, 행렬계수, 우변상수, 변수의 상하한, 목적함수 및 제약식의 6 가지 속성으로 구성되며, 출력요소는 결정변수로 표현된다. 그리고 알고리즘은 그 모형을 풀 수 있는 해법으로 표현된다.


 
    [표 4-1] 선형최적화 모형에서 입력요소, 출력요소, 알고리즘의 속성




다음으로 하나의 선형최적화 모형은 입력요소의 속성과 출력요소의 속성들이 어떠한 특징을 갖는가에 따라 결정한다. 따라서 선형최적화 모형에서의 입력요소와 출력요소 및 알고리즘에 대한 속성들은 그 속성을 특징짓는 몇개의 필드(Field)로 세분화하여야 한다.
즉, 선형최적화 모형의 입력요소는 다음과 같이 세분화된다. 목적함수계수는 목적함수계수가 정의될 수 있는 영역(Domain)과 특정변수가 가지는 목적함수계수의 조건으로 정의될 수 있다. 행렬계수는 행렬계수의 영역과 특정 행 또는 열이 가지는 조건과 행렬계수들이 가지는 구조에 의해 정의된다. 우변상수는 목적함수계수와 마찬가지로 우변상수의 영역과 부가조건으로 정의될 수 있다. 그리고 변수의 상하한은 상하한의 유무에 따라 선형최적화 모형이 달라지므로 속성만으로도 선형최적화 모형의 특성을 유지할 수 있다. 목적함수는 목적함수의 형태로 정의되며, 제약식의 형태는 제약식이 갖는 연산자와 부가조건으로 정의된다.
선형계획법에서 하나의 문제는 입력요소와 출력요소의 속성에 의해 결정된다. 따라서 각각의 속성을 특정 짓는 요소를 필드(Field)로 세분하여 정의하면 [표 4-2]와 같이 구성된다.

                [표 4-2] 선형최적화 모형에서의 속성과 필드




[표 4-2]에서 행렬계수의 구조, 목적함수의 형태, 제약식 형태의 연산자를 나타내는 필드들은 선형최적화 모형의 구조 및 형태를 나타내는 필드이므로 이들 필드를 합쳐 구조형태필드라 정의하자. 그러면 선형최적화 모형에서의 필드는 크게 영역필드, 부가조건필드, 구조형태필드의 3가지로 분류된다. 
영역필드는 입력요소와 출력요소의 각 속성들에 관련된 값의 범위를 의미 한다. 예를 들면, 정수계획법의 경우 출력요소의 영역 필드는 정수 영역을 가지게 되며, 배정문제의 경우 우변상수의 영역필드는 {1}의 영역을 가진다. 
부가조건필드는 특정 선형최적화 모형을 나타낼 때, 각 속성들이 가져야할 조건을 의미한다. 예를 들면, 최단경로문제에서의 우변상수에 대한 부가조건은 제약식중 1 또는 -1을 갖는 제약식의 갯수는 반드시 1개 이어야 한다는 조건이 부가조건필드 값이 된다.
구조형태필드는 각각 특정한 방식으로 표현되어진다. 행렬계수의 필드인 구조필드는 행렬계수가 가지는 구조적 특징을 나타낸다. 행렬계수구조 필드에는 행렬계수가 특정한 구조를 가지지 않는 일반형과 특정구조형이 있다. 예를 들면, 행렬계수의 특정구조형에는 네트워크 구조, 이분할성(Bipatite) 구조등이 이에 속할 수 있다. 목적함수 형태에는 최대형태와 최소형태 및 최대, 최소의 어떠한 형태를 취할 수 있는 일반형태가 있다. 제약식 형태의 연산자는 적거나 같거나형(Less than or equal:LE), 등식형(Equal:EQ), 크거나 같거나형(Greater than or equal:GE) 과 일반형이 있다.
이러한 입력요소, 출력요소, 알고리즘의 속성과 필드들로 선형최적화 모형은 다음과 같이 정의할 수 있다.

정의 4-2 : 선형최적화 모형 ( LOM )
LOM = < ( OC, MC, RC, BD, F(O), T(C) ), DV, SM >
OC = < Domain, Condition >
MC = < Domain, Structure, Condition >
RC = < Domain, Condition >
F(O) = < Type >
T(C) = < Operator, Condition >
DV = < Domain >
SM = < Algorithm name, Package name >
Type : General | Max | Min
Operator : General | LE | EQ | GE
Structure : General | Special Structure

 4.1.3. 선형최적화 모형의 연관관계와 지식베이스

(1) 선형최적화 모형의 연관관계

선형최적화 모형들은 각 속성들의 유사성 또는 차이성에 따라 서로 연관관계를 가진다. 즉, 특정한 선형최적화 모형은 상위 모형에서는 표현할 수 없는 특정한 문제구조를 가질 때 새로운 모형으로 분류될 수 있고, 상위 모형의 해법보다 더 효율적으로 풀 수 있는 해법을 가질 경우 새로운 선형최적화 모형으로 분류될 수 있다.
선형최적화 모형들의 연관관계를 파악하게 되면 선형최적화 모형들에 대한 인식을 효율적으로 할 수 있다. 즉, 먼저 대상문제가 상위 모형과 일치하는 가를 조사한다. 그런다음 대상문제가 상위 모형과 일치하지 않으면 하위 모형들과도 일치하지 않게 되므로 효율적인 탐색을 할 수 있다. 또한, 하위 모형은 지식베이스로 표현할 때 상위 모형의 표현 방법을 사용하여 하위모형을 표현할 수 있으므로 지식베이스를 효율적으로 관리할 수 있다. 따라서 지식베이스와 추론기관의 효율적 관리를 위해서는 선형최적화 모형들의 연관관계를 정의하는 것이 필요하다. 
그러면 선형최적화 모형들간의 연관관계를 정의하기 전에 먼저 속성우선, 영역우선, 조건우선, 구조형태우선들을 정의한다.
모델 M 에서 정의된 속성의 집합을 A, 모델 M' 에서 정의된 속성의 집합을 A' 라 하자. 그러면 속성우선관계는 다음과 같이 정의된다.

정의 4-3 : 속성우선

   모델 M 은 모델 M' 의 속성우선이다.

즉, 한 모델을 정의하는 속성이 다른 모델을 정의하는 속성보다 더 필요한 경우, 두 모델은 속성우선관계에 있게 된다.
다음, 필드에서의 우선관계를 정의한다. 필드에서의 우선관계는 영역우선, 조건우선, 구조형태우선이 있다.
모델 M 의 특정속성을 Ai, 모델 M' 의 특정속성을 Ai' 라 하자. 그리고 속성 Ai 와 속성 Ai' 의 영역을 각각 D(Ai) 와  D(Ai') 라 하자. 그러면 영역우선관계는 다음과 같이 정의된다.

정의 4-4 : 영역우선
D(Ai)   D(Ai') ,    i 
   모델 M 은 모델 M' 의 영역우선이다.

즉, 속성 A 의 영역이 속성 A' 의 영역을 포함할 경우, 모델 M 은 모델 M' 의 영역우선관계에 있다고 한다.
다음, 모델 M 의 특정속성 Ai 에 대한 부가조건을 Ci 라 하고, 모델 M' 의 특정속성 Ai' 에 대한 부가조건을 Ci' 라 하자. 그리고 부가조건 Ci 보다 부가조건 Ci' 의 조건이 보다 완화되었을 경우를 Ci   Ci' 로 표현하자. 그러면 조건우선관계는 다음과 같이 정의된다.

정의 4-5 : 조건우선
Ci   Ci' ,    i 
   모델 M 은 모델 M' 의 조건우선이다.

즉, 조건우선은 각각의 속성에 부과되는 조건들의 완화여부에 따라 정의된다. 예를들면, 모델 M 의 행렬계수의 부가조건은 없고, 모델 M' 의 행렬계수의 부가조건은 모든 계수가 비음(非陰)이어야 하는 경우, 모델 M 은 모델 M' 의 조건우선관계에 있다고 한다. 
다음으로 모델 M 의 특정속성을 Ai 라 하고 그 속성의 구조형태필드들을 Sij 라 하자. 또한, 모델 M' 의 특정속성을 Ai' 라 하고 그 속성의 구조형태필드를 Sij' 라 하자. 그리고 필드 Sij 가 필드 Sij' 보다 더 제한적인 경우를 Sij   Sij' 로 표현하자. 그러면 구조형태우선관계는 다음과 같이 정의된다.

정의 4-6 : 구조형태우선
 ,   i, j 
   모델 M 은 모델 M' 의 구조형태우선이다.

즉, 구조형태우선은 각 구조형태필드들이 취하여야할 값에 따라 정의된다. 예를들면, 모델 M 의 행렬구조가 일반형태이고 모델 M' 의 행렬구조가 네트워크구조 일때, 모델 M 은 모델 M' 의 구조형태우선관계에 있다고 한다. 그리고 모델 M 의 제약식 형태의 연산자가 일반형태이고 모델 M' 의 제약식 형태의 연산자가 등식형 일때, 모델 M 은 모델 M' 의 구조형태우선관계에 있다고 한다. 

그러면 이제 속성우선, 영역우선, 조건우선 및 구조형태우선의 정의에 의해 선형최적화 모형들의 연관관계를 정의할 수 있게 된다.
상위 선형최적화 모형에 대한 하위 선형최적화 모형은 다음과 같이 정의된다.

정의 4-7 : 하위 선형최적화 모형

D(Ai)   D(Ai') ,    i 
Ci   Ci' ,    i 
 ,   i, j 
   모델 M' 은 모델 M 의 하위 선형최적화 모형이다.

즉, 모델 M 이 모델 M' 의 속성우선관계, 영역우선관계, 조건우선관계 및 구조형태우선관계를 만족하면, 모델 M' 는 모델 M 의 하위 선형최적화 모형이 된다. 
정의 4-7에 의해 하나의 선형최적화 모형들에 대한 연관관계를 다음의 연관관계 판별 알고리즘에 의해 판별할 수 있다.

■ 연관관계 판별 알고리즘

단계 1.  초기화
각 모형의 상위모형집합 : P[Mi] ← { }
모형집합 : MS ← { }
조사대상집합 : SS ← { }
단계 2.  종료와 새로운 모형
연관관계를 파악하기 위한 새로운 모형이 없으면 끝.
있으면 새로운 모형을 NM으로 두고 MS ← MS + {NM}으로 둔다.
만약 SS ← { } 이면 SS ← SS   {NM}로 하고 단계 2로 간다.
아니면 단계 3으로 간다.
단계 3.  검색대상모형의 선정
SS에서 하나를 선택하여 SM으로 둔다. 
만약 SM = NULL 이면 현재의 모형 집합 MS에서 하위모형을 가지지 않는 모형들을 SS에 추가하고 단계 2로 간다.
아니면 단계 4로 간다.
단계 4.  검색
만약 SM   P[NM] 이면 이미 조사되었으므로 SS ← SS - {SM} 으로 두고 단계 3으로 간다.
아니면 다음을 조사한다.
① NM이 SM의 상위모형일 경우
(i) P[SM] = { } 일 때 
P[SM] ← P[SM]   {NM},
SS ← SS - {SM} - {SM의 하위모형} 로 둔다.
단계 3으로 간다.
(ii) P[SM]   { } 일 때 
Temp_descendent = SM,
SS ← SS - {SM} - {SM의 하위모형} 로 둔다.
SM의 상위모형중의 하나를 SM으로 한다.
단계 4으로 간다.
② NM이 SM의 하위모형일 경우
(i) temp_descendent = NULL 이면
P[NM] ← P[NM]   {SM},
SS ← SS - {SM} 로 둔다.
단계 3으로 간다.
(ii) temp_descendent   NULL 이면 
P[NM] ← P[NM]   {SM},
P[temp_descendent] ← P[temp_descendent]   {NM},
SS ← SS - {SM} - {temp_descendent의 하위모형} 로 둔다.
단계 3으로 간다.
③ NM와 SM이 아무 관계가 아닐 경우
(i) temp_descendent = NULL 이면
SS ← SS - {SM} 로 둔다.
SM의 P[SM]들에 대해 다음을 조사한다.
P[SM]에 속한 임의의 모형이 NM과 같거나 그 모형의 하위모형이 조사대상집합에 있으면 P[SM]의 다른 모형에 대해 조사하고
아니면 SS에 그 모형을 추가하고 단계 3으로 간다.
(ii) temp_descendent   NULL 이면 
temp_descendent의 조사되지 않은 상위모형이 
있으면 그 모형을 SM으로 둔다. 
그리고 SS ← SS - {SM} 로 둔다.
단계 4로 간다.
없으면 P[temp_descendent] ← P[temp_descendent]   {NM},
SS ← SS - {SM} 로 둔다.
단계 3으로 간다.

지식베이스 관리시스템(Knowledge base management system)에서는 새로운 모형의 입력시에 위와 같은 연관관계 판별 알고리즘에 의해 지식베이스를 추가적으로 구성할 수 있다.

(2) 선형최적화모형의 지식베이스

선형최적화모형의 지식베이스(Knowledge Base)를 효율적으로 구성하기 위해 객체지향시스템의 상속의 개념을 도입한다. 객체지향시스템(Object Oriented Programming) 에서 정의하는 상속의 정의는 다음과 같다.

정의 4-8 : 상속(Inheritance)
하나의 집합(Class)이 다른 집합(Class)의 부분집합일 때, 다른 집합으로부터 속성(Attribute) 이나 방법(Method) 에 대한 정의를 물려받는것을 상속(Inheritance)이라 한다.

그러면 정의 4-7과 정의 4-8에 의해 하위 선형최적화 모형은 상위 선형최적화 모형의 속성과 필드를 상속 받을 수 있게 된다.

정리 4-1 : 하위 선형최적화 모형은 상위 선형최적화 모형의 속성과 필드를 상속 받을 수 있다.
(증명)   하위 선형최적화 모형을 M' 라 하고 상위 선형최적화 모형을 M 이라고 하자.
그러면 상위 선형최적화 모형은 속성우선관계를 만족하므로  가 된다. 
따라서 하위 선형최적화 모형을 표현하는데 필요한 속성은 상위선형최적화 모형의 속성을 포함하므로, 하위 선형최적화 모형을 표현하는데 필요한 속성은 상위 선형최적화 모형의 속성 보다 더 제한적 형태이다. 
그리고 필드의 관계에서는 영역우선관계, 조건우선관계, 구조영역우선관계를 만족하므로 
D(Ai)   D(Ai') ,    i 
Ci   Ci' ,    i 
 ,   i, j   가 된다.
영역우선관계를 만족하므로 하위 선형최적화 모형의 영역은 더 축소되었으며, 조건우선관계를 만족하므로 하위 선형최적화 모형의 부가조건은 더 제한적이다. 또한, 구조형태우선관계를 만족하므로 하위 선형최적화 모형은 특정한 구조 및 형태를 가진다. 
그러므로 하위 선형최적화 모형을 표현하는데 필요한 필드가 상위 선형최적화 모형의 필드 보다 더 제한적 형태이다. 
따라서 하위 선형최적화 모형이 상위 선형최적화 모형 보다 더 제한적인 형태이므로,  하위 선형최적화 모형은 상위 선형최적화 모형의 속성과 필드를 그대로 물려받을 수 있다.            ■

정리 4-1에 의해 선형최적화 모형의 표현 방법에서 상속의 개념을 도입하게 되면, 이미 구성되어 있는 집합의 속성이나 방법을 그대로 물려받고 필요한 부분만을 추가적으로 재구성할 수 있다. 즉, 하위 선형최적화 모형을 표현할 때는 상위 선형최적화 모형의 속성과 필드를 그대로 물려 받고, 상위 선형최적화 모형에서 표현할 수 없는 부분만을 새로이 필드값을 변경하거나 새로운 속성을 첨가하여 표현할 수 있다.
그러므로 선형최적화 모형을 지식베이스로 나타내기 위해서는 상속의 개념을 잘 표현할 수 있는 지식의 표현방법인 프레임 기반 방법(Frame based Method) 으로 표현하는 것이 유리하다.
선형최적화 모형을 프레임 기반 방법(Frame based Method) 으로 표현하면 다음과 같은 장점이 있다.
1. 상위 선형최적화 모형의 구조를 그대로 물려 받고 필요한 부분만을 재구성하므로 선형최적화 모형의 기본 틀(Frame)에 대한 재사용성이 용이하다. 
2. 하나의 선형최적화 모형에 대한 필요한 부분만을 재구성하므로 하나의 선형최적화 모형을 표현하는데 필요한 기억용량을 크게 줄일 수 있어 지식베이스의 규모가 축소된다. 
3. 새로운 모형을 지식베이스에 추가할 때, 모형정의에 필요한 부분만 추가하면 되므로 지식베이스의 확장이 용이하다.
4. 어떠한 모형이 적합한 모형인지를 파악하는 추론과정에서도 상위 모형에서 정의되지않는 부분에 대해서만 패턴 비교인식을 하게 되므로 탐색의 시간을 줄일 수 있다. 
그러므로 하위 선형최적화 모형은 속성과 필드를 상속 받게 될 상위 선형최적화 모형을 명시하고, 하위 선형최적화 모형을 표현하는데 필요한 새로운 요소만을 정의하면된다.

 4.1.4. 추론기관

(1) 비교검색방법

대상 문제가 선형최적화 모형중 어느 모형에 속하는지를 알기 위해서는, 문제에 대한 입력자료분석을 통하여 선형최적화 모형의 형태를 보관하는 지식베이스와 비교하여 일치하는가를 확인하여야 한다. 즉, 대상 문제의 형태가 선형최적화 모형의 지식베이스와 일치하는가를 알아보기 위해서는 각각의 속성과 필드들이 일치하는가를 확인하여야 한다.
대상 문제와 지식베이스의 속성과 필드를 비교하는 방법은 첫째, 패턴 비교선택(Pattern Matching)과 행렬계수의 구조를 인식하는 알고리즘과 부가조건의 만족여부를 확인하는 몇가지 알고리즘이 사용된다.
패턴 비교선택시에는 먼저 속성에 대한 패턴을 비교하고, 다음으로 필드에 대한 패턴을 비교한다.
필드에서는 비교적 비교하기가 쉬운 필드부터 검색한다. 즉, 영역필드는 단순한 패턴 비교만으로 비교가능하지만 부가조건필드와 구조형태필드를 비교하기 위해서는 대상문제의 자료에 대해 알고리즘적 비교를 해야 한다. 그러므로 영역필드를 우선 검색한다. 다음에는 부가조건필드 비교시의 알고리즘이 구조형태필드 비교시의 알고리즘보다 간단하므로 부가조건필드에 대해 검색한다. 그리고 마지막으로 구조형태필드에 대해 비교한다. 패턴비교우선순위는 다음과 같다.

■ 패턴비교우선순위
1. 속성 비교
2. 영역필드 비교
3. 부가조건필드 비교
4. 구조형태필드 비교

속성비교와 영역필드비교는 패턴 비교 선택 방법으로 비교 가능하다.
부가조건에 대한 만족여부는 간단한 입력자료의 검색방법에 의해 알수 있다.
행렬계수의 구조를 확인하는 알고리즘은 네트워크구조 판별알고리즘[SCH 86] 과 이분할성구조 판별알고리즘[MUR 92] 이 있다. 네트워크구조 판별알고리즘은 대상 문제가 네트워크형태인가를 파악하기 위해 사용되며, 이분할성구조 판별알고리즘은 대상 문제가 수송문제형태 또는 배정문제형태인가를 파악하기 위해 사용된다. 수송문제와 배정문제는 행렬구조가 네트워크 구조이고 이분할성 구조이어야 한다. 네트워크구조 판별 알고리즘과 이분할성구조 판별 알고리즘을 요약하면 다음과 같다.

■ 네트워크구조 판별 알고리즘

A를 m n {0, 1} 행렬이라 할 때 이 A의 네트워크행렬 여부를 결정하는 다항시간 알고리즘이 존재한다. 
특히, 여기서는 A의 자료가 정형화된 입력자료이므로 네트워크일 경우 각 열이 많아야 2개의 0이 아닌 성분만 포함하게 된다. 그러므로 A의 각 열이 많아야 2개의 0이 아닌 성분만을 포함할 경우 네트워크행렬 판별 알고리즘은 다음과 같다.
A의 행번호 집합(row index set)을 R로 둔다. 여기서 R을 R1과 R2로 분할하여 R2에 속한 모든 행에 -1을 곱하여 만들어진 행렬의 각 열이 +1과 -1을 포함하게 되면 A는 네트워크행렬이 된다.
그러므로 위의 성질을 만족하도록 R1과 R2를 분할하게 되면 A는 네트워크행렬이 된다. R을 R1과 R2로 분할하는 방법은 다음과 같다.

단계 1.  무방향그래프
G = (V,E)를 정의한다.
V =
   A의 열중 i번째 성분과 j번째 성분이 모두 0이 아니고 부호가 같은 열이 존재한다.
A의 열중 i성분과 j성분이 모두 0이 아니고 서로 다르면 를 길이 2인 경로로 연결한다. (중간에 임의의 새로운 하나의 노드를 도입하여 이를 경유하게 한다.)
단계 2.  이분할성여부
G가 이분할형(Bipatite)이 되는지 확인한다. 
이때 이분할집합을 각각 R1과 R2로 둔다.

■ 이분할성구조 판별 알고리즘

G = (N,A)에서 X를 포함되고 조사되지 않은 노드집합이라 하고, Y를 포함되지 않은 노드집합이라 하자.

단계 1.  초기화

N1 = {1}, N2 = { }
X = {1}, Y = N\{1} 으로 둔다.
단계 2.  조사할 노드의 선택
X = { } 이면 단계 4로 간다.
아니면 X로부터 조사할 노드를 선택한다.
단계 3.  조사
i 를 조사되는 노드라 하자.
X로부터 i 를 삭제한다.
N'을 N1 또는 N2 중 i 노드를 포함하는 집합으로 두고
N''를 나머지 집합으로 둔다.
J를 i 노드에 연결된 Y에 있는 모든 노드들의 집합이라 하자. 
만약, J { }면 J에 있는 임의의 노드와 N''에 있는 임의의 노드가 A에서 연결되는지 조사한다. 만약 그러면 단계 5로 간다.
아니면 Y로부터 J에 있는 모든 노드를 삭제하고 X와 N''에 그 노드들을 포함시킨다. 그리고 단계 2로 간다. 
단계 4.  이분할성
N1, N2가 G에 이분할성이면 끝난다.
단계 5.  비이분할성
G가 이분할성이 아니다.

(2) 탐색전략과 탐색공간

대상 문제가 어느 선형최적화 모형과 일치하는가를 효율적으로 인식하기 위해 지식베이스에 있는 선형계획법 모형들에 대한 탐색공간(Search Space)과 탐색공간을 검색하기 위한 탐색전략을 수립한다.

① 탐색공간
탐색공간은 대상문제와 지식베이스에 있는 선형계획법 모형들과 패턴비교선택할 때 비교되는 경우를 줄일 수 있도록 하기 위해 수립된다.
그러기 위해 탐색공간을 선형최적화 모형나무(Tree)로 구성한다. 즉, 선형최적화 모형들의 탐색을 효율적으로 하기 위해 탐색공간을 축소시킨다.
탐색공간을 구성하는 원칙은 다음과 같다.

1. 하나의 모형이 두개 이상의 상위 모형을 가질 경우 탐색우선순위가 높은 모형과 연결시켜 선형최적화 모형 나무를 구성한다. 이는 모형을 탐색할 탐색공간을 나무 형태로 유지함으로서 일관성을 부여하기 위함이다.
2. 동일한 상위 모형을 가지는 하위 모형- 형제 모형(Sibling Model) - 들의 순서는 모형의 사용빈도가 높은 것을 탐색우선순위가 높은 곳에 위치시킨다. 이는 모형의 사용빈도가 높은 모형을 우선적으로 검색함으로서 대상문제와 일치하는 모형을 빨리 인식하기 위함이다. 
선형최적화 모형들에 대해 연관관계 판별 알고리즘에 의해 분석된 각 모형들간의 연관관계를 위의 2가지 원칙에 의해 선형최적화 모형 나무를 구성하여 탐색공간을 형성한다.

② 탐색전략
선형최적화 모형 나무에서의 탐색은 깊이우선탐색(Depth First Search) 방법을 사용한다. 이는 하위모형의 지식베이스는 상위모형의 지식베이스에서 추가되는 요소만을 가지고 있으므로 패턴비교선택시 추가적인 요소만을 확인하면 되므로 탐색의 일관성을 유지하며 보다 효율적으로 탐색할 수 있기 때문이다. 그러므로 탐색공간의 구성시 형제노드들에 대해 모형의 사용빈도가 높은 것을 탐색우선순위가 높은 곳에 위치시킨다는 것은 탐색공간상에서 왼쪽에 위치시킨다는 것과 동일하게 된다.
그리고 추론기관에서는 탐색공간을 줄이기 위해 부분 나무(Subtree)에 대한 탐색을 피할 수 있는 제거전략(Pruning Strategy)를 도입한다. 
제거전략은 탐색시 하나의 모형과 일치하지 않으면 모형의 하위 모형에 대해서는 조사할 필요가 없다는 것이다.

정리 4-2 : 대상 문제가 선형최적화 모형 나무상의 한 모형과 일치하지 않으면 그 모형의 하위 모형과도 일치하지 않는다.
(증명)  먼저 속성이 다른 경우를 고려하자.
       대상 문제의 속성집합을 AI 라 하고, 지식베이스에서 이 문제와 
       일치하지 않는 모형의 속성집합을 AM 이라 하자.  그리고 이 모
       형에 대한 하위 모형의 속성집합을 AM' 라 하자.
       그러면 대상 문제와 모형은 속성이 다르므로
       AM\AI    { } 가 된다. 
       그런데 AM     AM' 이므로  
       AM'\AI    { } 가 된다. 
       다음 필드가 다른 경우를 고려하자.
       대상 문제의 각각의 필드값을 FijI 라 하고, 지식베이스에서 이 문
       제와 일치하지 않는 모형의 필드값을 FijM 라 하자.  그리고 이 
       모형에 대한 하위 모형의 필드값을 FijM' 라 하자.
       그러면 대상 문제와 모형은 필드가 다르므로
       FijI   FijM 가 된다. 
       그런데 FijM   FijM'이므로 하위 모형의 필드값이 더 제한적이다. 
       그러므로 FijI   FijM'  가 된다. 
       그러므로 하위 모형과 일치하지 않는다.                   ■

선형최적화 모형 인식 시스템의 추론기관에서 대상 문제와 하나의 선형최적화 모형과 비교시에는, 패턴 비교선택(Pattern Matching), 행렬구조 판별 알고리즘, 부가조건 만족 여부 확인 알고리즘으로 비교한다. 그리고 선형최적화 모형들에 대한 연관관계를 선형최적화 모형 나무로 구성하고 정리 4-2의 제거전략과 깊이우선탐색(Depth First Search) 전략을 사용하여 차례로 비교하는 탐색전략을 사용한다. 그리고 추론기관에서는 대상문제가 지식베이스 내에 존재하게 되면 일치하는 선형최적화모형과 여기에 적합한 해법을 제시한다. 그리고 어떠한 연유에서 현재의 선형최적화모형과 일치하는가에 대한 설명기능을 제공한다. 즉, 탐색시의 정보들을 출력정보로 제공하여 선형최적화모형들의 연관관계에 대한 이해를 도모할 수 있게 한다.
한편, 대상문제가 지식베이스내에 존재하지 않은 다른 모형일 경우에는 대상문제와 일치하였던 모든 상위모형들에 대해 정보를 제시하여, 대상문제의 문제해결에 필요한 정보를 제공하게 된다.

 4.1.5. 예제 

본 절에서는 선형최적화 모형중 일부 모형들에 대한 연관관계 및 지식베이스를 구성한다.
여기서는 다음과 같은 선형최적화 모형들을 고려하였다.
  선형계획법 모형              일반한계 선형계획법 모형
  네트워크 모형                최대유통문제 모형
  최소비용문제 모형            최단경로문제 모형
  수송문제 모형                배정문제 모형
  혼합정수계획법모형           전정수계획법 모형
  0/1 계획법 모형              배낭문제 모형

이들 모형들에 대한 지식베이스는 다음과 같다.
Linear Program
superclass : class
objective coefficient : < real, general >
decision variable : < real >
matrix coefficient : < real, general, general >
righthandside : < real, general >
objective function : < general >
constraint : < general, general >
solver : < simplex, interior >

Network Problem
superclass : Linear Program
matrix coefficient : < ___, Network structure, ___ >
solver : < Primal Network simplex >

Maxflow Problem
superclass : Network Problem
bound variable : < lower bound, upper bound >
objective coefficient : < {0,1}, condition1 >
matrix coefficient : < ___, ___, condition2 >
righthandside : < {0}, ___ >
objective function : < max >
constraint : < equality, ___ >
solver : < Labeling method, Dinic's Algorithm >
condition1: 하나의 변수만 1을 가지고 나머지는 모두 0이다.
condition2: 목적함수계수를 +1로 가지는 변수의 행렬계수가 +1인 행에서는 계수가 모두 0 또는 -1이고,  -1인 행에서는 계수가 모두 0 또는 +1이다.

Mincost Problem
superclass : Network Problem
bound variable : < lower bound, upper bound >
righthandside : < {v,0,-v}, condition3 >
constraint : < equility, ___ >
objective function : < min >
solver : < Klein, Out-of-kilter >
condition3: 행에서 양의 부호만 가진 행의 우변상수는 +v 이고, 음의 부호만 가진 행의 우변상수는 -v 이다.

Shortest Path Problem
superclass : Mincost Problem
bound variable : < 0, 1 >
decision variable : < {0,1} >
righthandside : < {0,1,-1}, condition4 >
solver : < Dijkstra >
condition4: 제약식중 1또는 -1을 갖는 제약식의 갯수는 반드시 1개이다.

Transportation Problem
superclass : Network Problem
matrix coefficient : < ___, TP Structure, ___ >
constraint : < ___, condition5 >
solver : < stepping stone, primal-dual >
condition5: 분할 집합에서의 제약식들은 같은 연산자를 가진다.

Assignment Problem
superclass : Transportation Problem
decision variable : < {0,1} >
righthandside : < {1}, ___ >
constraint : < equailty, ___ >
solver : < Hungarian, Primal-dual >

Mixed Integer Program
superclass : Linear Program
decision variable : < {Real, Integer} >
solver : < Branch and Bound, Cutting Plane >

All Integer Program
superclass : Mixed Integer Program
decision variable : < {Integer} >

0/1 Integer Program
superclass : All Integer Program
bound variable : < 0, 1 >
decistion variable : < {0,1} >
solver : < Branch and Bound, Cutting Plane, 0/1 Balas >

Knapsack Problem
superclass : 0/1 Integer Program
objective coefficient : < {0,positive}, ___ >
matrix coefficient : < {0,positive}, ___, ___ >
righthandside : < {0,positive}, ___ >
objective function : < max >
constraint : < less-than-equility >
solver : < Branch and Bound, Cutting Plane, Heuristic >

위의 모형틀을 기초로 선형최적화모형들의 연관관계 판별 알고리즘에 의해 모형들을 분류하면 [그림 4-2]와 같이 선형최적화 모형의 연관관계가 형성된다.

                          +------------+
                          | 선형계획법 |
                          +------------+
    

                     
             +----------+            +------------+      +--------+
             | 네트워크 |            |  일반한계  |      |혼합정수|
             +----------+            | 선형계획법 |      | 계획법 |
                                     +------------+      +--------+

 

  +--------+  +--------+  +--------+                     +-------+
  |수송문제|  |최대유통|  |최소비용|                     |전정수 |
  +--------+  |  문제  |  |  문제  |                     |계획법 |
              +--------+  +--------+                     +-------+



  +--------+              +--------+                    +----------+
  |배정문제|              |최단경로|                    |0/1 계획법|
  +--------+              |  문제  |                    +----------+
                          +--------+


                                                        +----------+
                                                        | 배낭문제 | 
                                                        +----------+

              [그림 4-2] 대상 모형들간의 연관관계

또한, 탐색공간형성원칙 1,2를 적용하여 선형최적화 모형나무를 구성하면 [그림 4-3] 과 같이 탐색공간이 구성된다.
[그림 4-3]의 탐색공간에서 수송문제를 모형인식시스템에서 인식하는 출력예는 [그림 4-4]와 같다.
[그림 4-4]와 같이 모형인식시스템에서는 하나의 모형을 인식하는 과정을 단계별로 세분화된 정보를 제공한다. 그러므로 모형인식시스템에서의 이러한 정보를 이용하여 선형계획법의 비전문가에 대한 선형최적화 모형의 교육시 각각의 모형들이 갖추어야할 특성들을 교육하는 도구로 사용할 할 수 있다.

                          +------------+
                          | 선형계획법 |
                          +------------+


                         
             +----------+            +------------+      +--------+
             | 네트워크 |            |  일반한계  |      |혼합정수|
             +----------+            | 선형계획법 |      | 계획법 |
                                     +------------+      +--------+



  +--------+  +--------+  +--------+                     +-------+
  |수송문제|  |최대유통|  |최소비용|                     |전정수 |
  +--------+  |  문제  |  |  문제  |                     |계획법 |
              +--------+  +--------+                     +-------+



  +--------+              +--------+                    +----------+
  |배정문제|              |최단경로|                    |0/1 계획법|
  +--------+              |  문제  |                    +----------+
                          +--------+


                                                        +----------+
                                                        | 배낭문제 | 
                                                        +----------+

              [그림 4-3] 대상 모형들의 탐색공간

 *** Visiting LP node ***

 Checking DOMAIN OF OBJ. COEFFICIENT :
 Checking CONDITION OF OBJ. COEFFICIENT :
 Checking DOMAIN OF DECISION VAR :
 Checking DOMAIN OF MATRIX :
 Checking STRUCTURE OF MATRIX :
 Checking CONDITION OF MATRIX :
 Checking DOMAIN OF RHS :
 Checking CONDITION OF RHS :
 Checking LOWER BOUND OF VAR :
 Checking UPPER BOUND OF VAR :
 Checking PROBLEM TYPE :
 Checking CONSTRAINT TYPE :
 Checking CONDITION OF CONSTRAINT :

 -> SUCCESS

 *** Visiting NETWORK node ***

 Checking STRUCTURE OF MATRIX :
   The matrix has the property of network structure

 -> SUCCESS

 *** Visiting MAXFLOW node ***

 Checking DOMAIN OF OBJ. COEFFICIENT :
   OBJ. FTN must be 0 or 1.

 -> FAILURE

 *** Visiting MINCOST node ***

 Checking DOMAIN OF RHS :
   Rhs values must be v and -v

 -> FAILURE

 *** Visiting TRANSPORTATION node ***

 Checking STRUCTURE OF MATRIX :
   The matrix has the property of bipartite structure
 Checking CONDITION OF CONSTRAINT :
   Condition 5 is satisfied

 -> SUCCESS

 *** Visiting ASSIGNMENT node ***

 Checking DOMAIN OF RHS :
   Rhs values must be 1

 -> FAILURE


==> This Problem is TRANSPORTATION Model


                    [그림 4-4] 모형인식시스템 수행 결과

 
4.2. 풀이지원시스템

 4.2.1. 개요

선형계획법 교육 지원시스템에서 선형계획법의 해법에 대한 교육을 실시하기 위해서는 선형계획법 해법 구조와 해법의 단계별 방법에 대한 교육이 필요하다. 풀이지원시스템에서는 해법 구조에 대한 교육을 담당하고, 해법 구조를 보여 주며 여러가지 선형계획법 해법을 선택적으로 수행할 수 있도록 지원한다.
그런데 선형계획법 해법에 대한 전반적인 구조를 분석하여 각각의 해법들의 구성요소를 하나의 틀(Frame)로 규격화하게 되면 각 해법들에 대한 선택을 체계적으로 할 수 있으며, 해법 선택시 도움 기능을 표준화시켜 제공할 수 있게 된다. 또한, 하나의 해법 틀 안에서 구성요소만을 다른 요소들로 바꿔가면서 해법의 차이를 실험해 볼 수 있게 된다.
따라서 본 연구에서는 선형계획법 해법에 대한 전반적인 구조를 분석하고 각각의 해법들을 구성하는 틀(Frame)을 설계한다. 그리고 선형계획법의 비전문가가 원활하게 해법들을 선택하여 프로그램들을 수행할 수 있도록 풀이지원시스템에 대한 설계를 한다.
풀이지원시스템은 해법선택과 환경설정을 지원하는 시스템으로 전반적인 구조는 [그림 4-5]와 같다.
풀이지원시스템은 자료분석기, 대화관리기, 추론기관, 과거 데이타베이스, 지식베이스등으로 형성되어 해법선택과 환경설정을 지원한다.
자료분석기는 입력된 자료화일(Input Data File)을 분석하여 선형계획법 문제에 대한 특성을 파악한다. 즉, 문제의 크기, 제약식의 수, 자료화일의 밀집도(Density) 그리고 각 활동과 제약식의 특성들이 파악된다.  대화관리기에서는 자료분석기에서 얻을 수 없는 선형계획법 문제에 대한 구조 및 특성을 파악하기 위해 사용된다. 이는 사용자와 Interface 되어 선형계획법 문제에 대한 정보들을 파악한다. 
                                        +-------------------+
      +---------------------------------+ Recommendation of |
      |                                 |  Selected Method  |
      |                                 +-------------------+
      |                                           ↑
      ↓                                            | 
  +------+ Interface +----------+            +-----+-----+    
  | User +--------→ | Dialogue +----------→| Inference |    
  +------+           | Manager  |  ↑        |  Engine   |
                     +----------+   |        +-----------+
  +-------+          +----------+   |             ↑       
  | Input |          | Data     +---+    +---------+--------+
  | Data  +--------→| Analyzer |        ↓                 ↓
  | File  |          +----------+  +------------+  +----------------------+
  +-------+                        | Historical |  |  Knowledge Base      |
                                   | Database   |  +----------------------+
                                   +-----+------+  |                      |
                                         |         |  해법구조지식베이스  |
                                     +---+----+    |  Meta Rule           |
                                     |  DBMS  |    |  해법선택지식베이스  |
                                     +--------+    |  프로그램 환경설정   |
                                                   |   지식베이스         |
                                                   +----------------------+
                                                     

               [그림 4-5] 풀이지원시스템의 전반적인 구조

자료분석기와 대화관리기는 추론기관과 연관되어 선형계획법 문제에 적합한 해법을 선택하기 위한 기본 정보를 형성한다. 
과거 데이타베이스에서는 과거에 문제를 풀었던 결과를 보관하고 있다. 즉, 각각의 문제 특성별로 수행시간 또는 수행 횟수(Iteration 수)들을 보관하고 있다. 과거 자료베이스는 새로운 문제에 대한 경험을 계속적으로 추가하면서 학습 효과(Learning Effect)를 가질 수 있다. 이러한 새로운 사실에 대한 추가 및 변경은 데이타베이스 관리 시스템을 통하여 가능하다. 
지식베이스는 선형계획법 해법 구조 지식베이스, 해법 선택 지식베이스, Meta-Rule, 프로그램 환경설정 지식베이스등으로 구성된다. 선형계획법 해법 구조 지식베이스는 선형계획법 해법 구조에 관한 정보를 보관하고 있으며, 해법 선택 지식베이스에서는 선형계획법의 각 해법이 어떠한 문제 특성을 가지는 문제에 적절하게 사용되는가에 대한 기준들을 가지고 있다. Meta-Rule은 각 규칙(Rule)들에 대한 관계 및 일관성(Consistency)을 유지하기 위해 사용된다. 프로그램 환경설정 지식베이스는 각 선형계획법 프로그램을 수행할 때 문제 특성에 적절한 환경설정을 하는 지식들을 포함한다.
추론기관은 자료분석기와 대화관리기를 통해 분석된 선형계획법 문제의 특성을 가지고 과거 자료베이스와 지식베이스를 기준으로 적합한 해법을 선택하기 위한 추론과정을 제어한다. 추론기관에서는 선형계획법 해법 구조상에서 계층적으로 상위 수준의 사항을 결정하고 하위 수준의 사항을 결정하게 된다. 또한 현재의 조건을 가지고 목표를 찾는 전방추론법(Forward Chaining)이 사용된다. 
풀이지원시스템에서는 자료분석기와 대화관리기를 통해 분석된 선형계획법 문제의 특성을 가지고 과거 자료베이스와 지식베이스를 사용하여 최종적으로 선형계획법 문제에 적합한 해법을 제시하게 된다. 

 4.2.2. 선형계획법 해법 구조

선형계획법의 해법은 크게 분류하여 단체법형과 내부점 기법형이 있다. 
단체법형의 해법은 원단체법, 쌍대단체법, 원-쌍대단체법, 가능방향법으로 구성된다. 내부점기법형의 해법은 Karmarkar의 Projective Scaling method, Affine Primal method, Affine Dual method, Affine Primal Dual method, Barrier method 등으로 분류된다.
한편, 단체법형의 알고리즘은 기저역행렬의 보관법, 진입변수의 선택방법, 초기기저의 설정방법 등으로 구성된다.
기저역행렬의 보관법은 명시형, 적산형, 상하분해형으로 나뉘어질 수 있으며, 상하분해형은 다시 Bartels-Golub, Forrest-Tomlin, Cholesky 방법들로 분류된다. 진입변수의 선택방법은 최대경사법, 최대향상법, 브랑법, 최대능선법 등이 있다. 초기기저의 설정방법에는 대수법(Big M method), 2국면법 등이 있다.
단체법은 이러한 구성요소가 어떠한 요소를 가지는 지에 따라 서로 다른 변형된 알고리즘을 생성한다. 그리고 내부점 기법도 역행렬의 계산방법에 따라 여러가지 변형된 알고리즘이 도출된다. 
선형계획법의 해법 구조는 [그림 4-6]과 같다.

Simplex 형   +- Primal +- 기저역행렬
            |         |    (명시형,적산형,Batels-Golub,Forrest-Tomlin,Cholesky)
            |         +- 진입변수
            |         |    (최대경사법, 최대향상법, 브랑법, 최대능선법)
            |         +- 초기기저
            |              (Big M법, 2국면법) 
            +- Dual   +- 기저역행렬
            |          |    (명시형,적산형,Batels-Golub,Forrest-Tomlin,Cholesky)
            |          +- 진입변수
            |          |    (최대경사법, 최대향상법, 브랑법, 최대능선법)
            |          |  초기기저
            |          +-   (Big M법, 2국면법) 
            +- Feasible  +- 진입변수
            |             |    (2개, 모두)
            |             +- 축소과정
            +- Primal-Dual        

Interior 형   +- Projective - 역행렬 계산법
            |  Scaling       (Gauss 소거법,QR분해법,Cholesky분해법)
            +- Affine ---- 역행렬 계산법     
            |  Primal        (Gauss 소거법,QR분해법,Cholesky분해법)
            +- Affine ---- 역행렬 계산법     
            |  Dual          (Gauss 소거법,QR분해법,Cholesky분해법)
            +- Affine ---- 역행렬 계산법     
            |  Primal-Dual   (Gauss 소거법,QR분해법,Cholesky분해법)
            +- Barrier --- 역행렬 계산법     
                             (Gauss 소거법,QR분해법,Cholesky분해법)

                 [그림 4-6] 선형계획법 해법 구조

[그림 4-6]과 같이 선형계획법 해법 구조는 단체법형과 내부점기법형 그리고 원단체법, 쌍대단체법, 가능방향법 등의 해법의 기본적인 형태와 그 해법을 구성하는 구성요소로 나눌 수 있다. 
즉, 해법 구조를 기본적인 해법 형태와 그 해법을 구성하는 구성요소로 계층적으로 분석할 수 있다. 
그런데 하나의 선형계획법 해법은 기본적인 해법 형태와 그 해법을 구성하는 구성요소들을 규정지음으로써 완벽하게 구성된다.
따라서 하나의 선형계획법 해법의 선택은 기본적인 해법을 선택한 후 그 해법을 구성하는 구성요소들을 선택하는 계층적 방법에 의해 이루어질 수 있다.

 4.2.3. 해법선택지원시스템

선형계획법의 비전문가가 선형계획법 해법에 대한 해법 구조를 이해 하면서, 프로그램을 수행하기 위한 해법 선택을 지원하기 위해서는 해법에 대한 설명 기능과 해법 선택 기능을 사용자 편의성이 강조되도록 설계하여야 한다.
그러므로 선형계획법 교육 지원시스템에서는 해법 선택을 계층적으로 수행하도록 설계한다. 즉, 기본적인 해법을 선택하고 선택된 해법에서 구성요소들을 선택하여 하나의 선형계획법 해법을 선택하도록 설계한다. 그리고 선택된 해법에 대한 간단한 설명 기능을 보유하도록 설계한다.
기본해법선택은 풀다운 메뉴에 의해 선택되도록 하여 사용자 편의성을 강조한다. 구성요소의 선택은 풀다운 메뉴에서 선택된 해법에 따라 서로 다른 형태의 해법 구성 요소의 틀(Frame)에 따라 적절한 선택 기능을 제공한다.
단체법에서 구성요소의 틀에서 원단체법과 쌍대단체법의 해법 구성 요소는 기저역행렬 보관법, 진입변수 선택, 평가전략, 초기해 선정등의 속성(Attribute)으로 구성된다. 가능방향법은 기저역행렬 보관법, 평가전략, 축소전략, 초기해 선정의 속성으로 구성된다. 그리고 내부점 기법형의 구성요소에는 역행렬 계산법의 속성이 있다. 
각 기본 해법에 대한 구성요소 속성은 [표 4-3]과 같다.

            [표 4-3] 기본 해법의 구성요소 속성

각 해법에 대한 도움 기능을 제공할 때에도 단계별 수행과정을 표준화시키고 틀(Frame)로서 규정화하여 도움 기능을 제공한다.
각 해법에서 단계별로 도움 기능을 제공하기 위한 틀(Frame)에서 속성들은 [표 4-4]와 같다.
              [표 4-4] 해법 단계 속성

  5. 교육용 단체법 프로그램의 개발

 5.1. 개요

선형계획법 교육 지원시스템에서는 선형계획법을 안정적으로 수행하는 프로그램이 있어야 한다. 또한, 선형계획법 문제를 실험하기 위한 실험용 선형계획법 문제를 생성하는 프로그램이 있어야 한다. 본 연구에서는 선형계획법 중 단체법으로 선형계획법 문제를 푸는 교육용 단체법 프로그램과 실험용 선형계획법 문제 생성 프로그램을 개발한다. 
교육용 단체법 프로그램은 단체법의 교육에 부합되도록 단체법의 여러 가지 해법들을 다룰 수 있어야 하며, 단체법의 변형들도 실험할 수 있도록 구성되어야 한다. 즉, 진입변수의 선택, 초기기저의 구성, 탈락변수의 선정, 기저역행렬의 보관법 등을 여러가지 방법들로 구성할 수 있어야 한다. 또한, 대형문제에 대해서도 정확한 해를 제공할 수 있도록 안정성 측면이 강조되어야 한다. 
실험용 선형계획법 문제 생성 프로그램은 가능해(Feasible Solution)를 가진 문제를 제공하여야 하며, 최적해와 최적값을 제공할 수 있어야 한다. 그리고 사용자가 원하는 형태의 문제를 생성하여야 한다.
따라서 본 연구에서는 안정성이 강조되고 단체법의 여러 가지 변형들을 다룰 수 있는 교육용 단체법 프로그램과 실험용 선형계획법 문제 생성 프로그램의 설계와 구축을 목적으로 한다.
단체법 프로그램들은 각 단계별로 분석해 보면 [표 5-1]과 같이 여러가지의 함수들을 공유할 수 있다. 즉, [표 5-1]과 같이 입력자료, 평가벡터, 열수정, 기저역행렬 및 재역산 방법은 원단체법, 쌍대단체법, 가능방향법에서 모두 공유할 수 있다. 그러므로 각 함수들을 통합하면 단체법의 모든 해법들을 하나의 통합환경으로 구성할 수 있게 되어 선형계획법 교육 지원시스템에서의 교육용 단체법 프로그램을 구성할 수 있게 된다. 

            [표 5-1] 단체법 프로그램의 구성


단체법의 기본 해법의 구성요소들의 통합은 각 부함수(Subroutine)내에서 제어변수(Control Variable)를 도입하여 통합할 수 있다. 각 단계별 부함수의 구성요소들의 통합은 [표5-2]와 같다.
[표 5-2]에서와 같이 기저역행렬의 변형에 의한 하부함수들을 부함수이름의 뒤에 문자 하나를 추가하여 구별하고, 부함수를 대체하여야 할 하부함수들은 부함수 이름 앞에 문자 하나를 추가하여 구별한다. 예를 들면, 평가벡터에서 뒤에 N이 붙으면 명시형인 경우이고, P는 적산형, BF는 Bartels-Galub형과 Forret-Tomlin형, C는 Cholesky형으로 구분된다. 그리고 진입변수에서 앞에 P가 붙으면 원단체법형, D가 붙으면 쌍대단체법형, F가 붙으면 가능방향법을 의미한다.

             [표 5-2] 단체법 기본해법 구성요소의 통합



[표 5-1]과 [표 5-2]의 통합방안으로 단체법의 여러 해법들을 하나의 교육용 선형계획법 프로그램으로 통합할 수 있다.

 5.2. 입력자료의 규모화

다음과 같이 입력자료에 대한 규모화(Scaling)를 실시한다.

즉, 주어진 문제 P에 대해 입력 자료의 규모화를 실시한 문제를 SP라 하자. 그러면 A', b', c', l', u'는 다음의 관계를 갖는다.

여기서 D1은 열규모화요소(Column Scaling Factor)의 대각행렬(Diagonal Matrix)이고, D2는 행규모화요소(Row Scaling Factor)의 대각행렬이다.
그런데 원문제 P와 입력자료에 대한 규모화를 실시한 문제인 SP는 서로 동치이다. 따라서 P를 SP로 변형하여 문제를 푼 후 역변환에 의해 원문제의 해를 구할 수 있다.
P를 SP와 같이 입력자료에 대해 규모화(Scaling)을 실시하는 이유는 첫째, 변수의 상하한을 보다 축약적으로 보관할 수 있고, 둘째, 전체적인 수행횟수를 줄일 수 있으며, 그리고 무엇보다도 주어진 문제에 대한 수치적 안정을 도모할 수 있기 때문이다.
일반적인 입력자료의 규모화 방법에서는 원시자료의 특성을 유지하기 위해 지수부에 대해서만 규모화를 실시하고 가수부는 그대로 유지하고 있다. 그러므로 입력자료의 규모화에서는 입력자료의 지수(Digit)에 대해서만 관리하게 된다. 
지금까지 실용적으로 많이 사용하고 있는 입력자료의 규모화 방법으로는 다음과 같이 세 가지 방법이 있다.

■ 평형법(Equilibration Method)
행렬계수의 각 열과 행에 대해 각 열과 행의 가장 큰 수로 나누는 방법이다.
■ 산술평균기법(Arithmetic Mean Method)
행렬계수의 각 열과 행에 대해 각 열과 행의 산술평균을 구한 후 그것으로 나누는 방법이다.
■ 기하평균기법(Geometric Mean Method)
행렬계수의 각 열과 행에 대해 를 구한 후 그것으로 나누어 주는 방법이다.

일반적으로 입력자료의 규모화가 잘 되었는지는 입력자료의 지수부(Digit)의 가장 큰 요소와 가장 작은 요소의 차이가 작고 표준편차가 작을수록 잘 되었다고 판단된다.

(1) 발견적 기법

기존의 세 가지 경험적 방법보다는 지수부의 차이와 표준편차를 줄일 수 있는 새로운 발견적 기법(Heuristic Method)를 개발한다.
새로운 발견적 기법의 기본적 개념(Idea)은 각 열과 각 행에서의 지수부의 차이중 가장 큰 열 또는 행을 주거리(Critical distance)로 관리하여 이를 차례로 줄여나가게 되면 전체적인 차이(Diffrence)와 표준편차(Standard Deviation)를 줄일 수 있을 것이라는 것이다. 
그러면 새로운 발견적 기법의 절차는 다음과 같다.

  CRIDIS(Critical Distance Scaling)

먼저 행렬계수의 지수부를 eij라 두자.

단계 1.  각 행과 열의 차이
 
     를 구한다.
단계 2.  Critical Distance
 가장 큰 차이를 구한다.
 
     만약 가장 큰 차이가 행에서 발생하면 단계 3으로, 열에서 발생하면 단계 5로 
     간다.
단계 3. 열 규모화(Column Scaling)
 1) CRIDIS가 발생한 행의 가장 작은 지수를 가지는 열(s)에 규모화를 하는 경우
 
 2) CRIDIS가 발생한 행의 가장 큰 지수를 가지는 열(s)에 규모화를 하는 경우
 
 열규모화 요소는 로 두고 단계 4로 간다.
단계 4.  2단계 열규모화
 만약, 이면 단계 7로 간다.
 그렇지 않으면 다음을 조사한다.
 V1=0을 이루는 행에 대해 최소의 를 구한다.
 V2=0을 이루는 행에 대해 최소의 를 구한다.
 V는 위의 두 값 중 최대값을 취한다. 
 만약, V=0이면 끝난다. 
 아니면 단계 7로 간다.
단계 5.  행규모화(Row Scaling)
 1) CRIDIS가 발생한 열의 가장 작은 지수를 가지는 행(r)에 규모화를 하는 경우
 
 2) CRIDIS가 발생한 열의 가장 큰 지수를 가지는 행(r)에 규모화를 하는 경우

 
 행규모화 요소는 로 두고 단계 6으로 간다.
단계 6.  2단계 행규모화
 만약, 이면 단계 7로 간다.
 그렇지 않으면 다음을 조사한다.
 U1=0을 이루는 행에 대해 최소의 를 구한다.
 U2=0을 이루는 행에 대해 최소의 를 구한다.
 U는 위의 두 값 중 최대값을 취한다. 
 만약, U=0이면 끝난다. 
 아니면 단계 7로 간다.
단계 7.  개선
 이면 열규모화 요소 Vi = Vi + V로 둔다.
 DISROWi를 수정하고 단계 2로 간다.
 이면 열규모화 요소 Ui = Ui + U로 둔다.
 DISCOLj를 수정하고 단계 2로 간다.

(2) 실험 결과

입력자료의 규모화(Scaling)방법에 따라 NETLIB의 문제들을 실험한 결과를 보면 [표 5-3]과 같다.
[표 5-3]에서와 같이 발견적 기법이 다른 방법에 비해 입력자료의 지수 차이를 줄일 수 있었다. 그리고 단정도(float)로는 해를 구할 수 없었던 CAPRI(271 353), ETAMACRO(400 688), AGG(488 163)을 입력자료의 규모화를 실시한 후에 단체법을 수행하였더니 각각 510회, 1087회, 130회만에 해를 구할 수 있었다.
           [표 5-3] 입력자료 규모화 후의 지수 차이
                                                   (단위 : Digit Difference)

 
5.3. 초기 기저

단체법에서는 기저가능해(feasible basis)를 요구하고 있다. 만약 기저가능해를 쉽게 구할 수 없을 때에는 1국면 또는 부가적인 문제를 수행하여야 한다. 
이러한 초기 기저 가능해를 구하는 방법으로는 대수법(Big M Method), 2단계법(Two Phase Method) 등이 있다. 또한, 쌍대단체법의 초기기저를 구하기 위한 방법이 있다. 
그런데 초기기저를 구성할 때 될 수 있으면 인공변수를 줄일 수 있는 방향으로 구성하게 되면, 전체적인 수행 횟수를 줄일 수 있으며, 이에 따라 프로그램의 안정도는 증가될 것으로 기대된다.
주어진 문제가 다음과 같다고 하자.

식 (5.1)에 여유변수, 잉여변수 및 인공변수를 도입하면 다음 식 (5.2)와 같이 된다.

(1) 발견적 기법

식 (5.2)에서 인공변수 Y를 될 수 있으면 도입하지 않고 X3의 변수 중에서 초기기저를 잡게 되면 인공변수를 제거하는 작업을 줄일 수 있게 된다. 또한, 목적함수의 계수를 기준으로 초기기저를 선택하게 되면 1단계 종료시 또는 대수(Big M) 제거시의 목적함수의 값을 최적값에 근사시킬 수 있게 되므로 전체적인 수행 횟수를 줄일 수 있을 것으로 기대된다.
그러므로 인공변수를 적게 도입하는 초기기저설정방법은 다음과 같다.

단계 1.  정열
 목적함수계수를 기준으로 지수를 정열한다.
단계 2.  초기기저
 j = 1,2,......,n 에 대해 다음을 조사한다.
 i'=를 가지는 index i'를 선택한다.
 B   B { j }
 dk   1        k,  Akj  0
 Ri'   1
 만약, j = n이면 단계 3으로 간다.
 아니면 j = j + 1로 두고 단계 2로 간다.
단계 3.  인공변수
 만약, Ri=0이고 그 제약식이 등식인 행이 존재하면 인공변수를 도입하여 기저로 둔다.

(2) 실험결과

발견적 기법을 사용한 경우와 식 (5.2)를 사용한 경우의 NETLIB 문제에 대한 실험결과는 [표 5-4]와 같다.
[표 5-2]에서 볼 수 있듯이 인공변수를 제거하는 방법이 finnis의 경우를 제외하고는 수행횟수가 모두 감소한 것으로 나타났다. 평균적으로 약 32.8%의 수행 횟수가 감소하였다. 그러나 오차측면에서는 유리한 경우도 있었으나 (*)를 한 경우와 같이 오히려 오차가 증가하는 경우도 있어 크게 개선된 효과는 없는 것으로 나타났다.








                          [표 5-4] 초기기저 실험결과




 5.4. 평가벡터의 계산

평가벡터 또는 단체승수(Simplex Multiplier) π는 π=CBB-1로 계산되어진다. 평가벡터는 기저역행렬의 보관방법에 따라 다르게 계산된다. 즉, 기저역행렬이 명시형이면 평가벡터 π는 로 바로 구해지며, 적산형인 경우에 평가벡터 π는 π= CB E1 E2 … En 로 구해진다. 그리고 상하분해법에서의 평가벡터 π는 π= CBB-1=CB(LU)-1=CBU-1L-1에서 후치환과 전치환을 사용하여 평가벡터를 구할 수 있다.
그런데 평가벡터는 한 번의 선회연산 이후에 모든 요소가 바뀌어지는 것이 아니고 일부분만 변한다. 따라서 평가벡터를 새로이 바뀌어진 기저역행렬에 의해 모든 요소를 새로 구하는 것 보다 바뀌어진 부분만을 수정한다면, 단위연산의 수행을 적게 하므로 계산상의 효율이 높아질 뿐만 아니라 해의 안정성에 있어서도 큰 기여를 할 수 있다.

(1) 평가벡터 개선법

기존의 평가벡터와 한 번의 선회연산 이후의 평가벡터의 관계를 구하기 위해 다음과 같이 변수를 설정하자.
이전 단계의 평가벡터를 π, 기저역행렬을 B-1, 기저변수의 목적함수계수를 CB라 두자. 여기서 선회연산시의 진입변수를 s, 탈락변수를 k, 기저에서의 탈락변수의 위치를 r이라 하자. 그리고 선회연산 이후의 평가벡터, 기저역행렬 및 기저변수의 목적함수계수를 각각 π', B'-1, CB'라 두자. 
그러면 기존의 평가벡터와 선회연산 이후의 평가벡터는 정리 5-1과 같은 관계가 있다.

정리 5-1 :

   (증명) CB'와 B'-1는 다음과 같다.
   
   그러면 F는 다시 F = I - Er + Fr 로 표현할 수 있다.
 단, 
그러면



(2) 실험결과

기존의 평가벡터를 이용하여 평가벡터를 개선하는 방법과 새로운 기저역행렬에 의해 평가벡터를 다시 계산하는 방법의 NETLIB 문제에 대한 실험결과는 [표 5-5]와 같다.
[표 5-5]와 같이 기존의 평가벡터를 이용하는 방법이 (*)를 한 경우를 제외하고는 전체적으로 오차측면에서 새로운 기저역행렬을 이용하는 방법보다 보다 더 정밀한 것으로 나타났다.

 
 

                     [표 5-5] 평가벡터의 실험결과




5.5. 진입변수 선택

단체법에서 진입변수의 결정에 따라 수행횟수가 큰 차이가 날 수 있다. 이에 따라 진입변수의 결정 방법에 대한 연구가 많이 이루어져 왔다. 
선형계획법 교육 지원시스템에서 고려한 진입변수의 선정방법은 다음과 같다.

■ 최대경사법(Steepest Descent Edge Rule)
주어진 기저에 대한 비기저변수 중 할인가가 가장 작은 변수를 진입변수로 선택한다.
■ 최대향상법(Most Improvement Edge Rule)
진입가능한 변수 중 진입시 목적함수의 값을 가장 많이 향상시키는 변수를 진입변수로 선택한다.
■ 브랑법(Bland's Rule)
모든 변수에 알고리즘 중에 변하지 않는 일정한 순서를 부여하고 진입가능 변수들 중에 그 순서가 가장 빠른 변수를 진입변수로 선택한다.
■ 최대능선법(Steepest Edge Rule)
음의 할인가를 갖는 비기저변수 중 할인가와 열수정벡터의 크기(Norm)의 비율이 가장 큰 변수를 진입변수로 선택한다. 
이것은 목적함수의 변화되는 양에 대한 해의 변화되는 양의 비율을 크게 하는 진입변수 선택방식이다.

다음으로 진입변수의 선정시 비기저변수에 대한 평가전략으로 다종평가와 부분평가의 전략이 있다.

■ 다종평가
진입변수를 선택하는 과정에서 한 번에 여러 개의 지입변수 후보자를 선택하여 그 중에서 가장 작은 것을 선택하고 이들 후보자의 할인가가 모두 비음이 되어 진입될 수 없을 때 다시 후보자를 선택하는 방법이다.
■ 부분평가
변수의 전체집합을 여러 부분집합으로 구분한 뒤 매번 모든 변수에 대해 할인가를 구하는 대신 미리 선택된 부분집합에 대해서 진입변수를 선택시키는 방법이다.

그런데 실제문제에서 퇴화현상이 발생할 수 있는데, 퇴화현상이 자주 발생하면 프로그램의 안정성에 영향을 미칠 수 있게 된다. 따라서 퇴화시 적절한 진입변수 선정방법을 연구하였다.

(1) 해의 정체 현상을 방지하기 위한 방법

실제 문제의 경우에는 초기부터 해를 개선하지 못하고 계속해서 머무는 경우가 많이 발생한다. 예를 들면 사료배합문제에서 342 1,125 문제의 경우에는 초기에 시작하여 920회 동안 해를 개선시키지 못하고 있으며 1,108 3,477 문제의 경우에는 18,679회 동안 정체현상을 나타낸다. 그리고 NETLIB의 문제 중에서도 grow7은 1,132회 동안 해를 개선시키지 못하고 있다.
따라서 이런 경우에는 불필요한 단체법의 수행을 계속 하게 되는데 이러한 퇴화현상을 줄이는 진입변수 선정 방안을 고려하였다.
먼저 일반한계선형계획법 문제에서 정체현상을 일으키는 퇴화의 조건은 다음 정리 5-2로 나타난다.

정리 5-2 : 일반한계단체법의 수행과정에서 진입변수를 s라 하자. 그러면 다음과 같은 i 가 존재하면 다음 단계에서 해는 정체한다.

</tdmsfiletext>
