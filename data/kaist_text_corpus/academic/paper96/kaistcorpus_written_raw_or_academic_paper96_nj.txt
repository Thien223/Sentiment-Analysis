<language> Korean </language>
<textcode> KSC-5601-1988 </textcode>
<process> raw </process>
<version> 2001(or)</version>
<filename> kaistcorpus_written_raw_or_academic_paper96_nj.txt </filename>
<title> GPH 분포를 이용한 대기네트워크에서의 체류시간 분포에 관한 연구 </title>
<author> 박광우 </author>
<date> 1993</date>
<publisher> 서울대학교 </publisher>
<kdc> TM530.05 </kdc>
<tdmsfiletext>
초  록

  본 논문에서는 개방형 대기 네트워크에서의 네트워크 체류시간에 대해연구하였다.  네트워크 체류시간은 고객이 네트워크 내부로 진입한 순간부터 네트워크를 떠나는  순간까지의 시간을 의미한다. 기존의  대부분의 연구는 네트워크 체류시간의 평균과 분산만을 구하였다.   그러나, 본 알고리즘은 체류시간의 분포를 구하였다.
  본 논문에서는  모든 분포를 GPH(Generalized Phase  Type) 분포로 변환시킨  후, 각  노드를 도착과  서비스가  각각 GPH  분포를 따르는 GPH/GPH/1 대기 시스팀으로 분해하였다.  분해된 각 노드의 대기시간을 구한다음, 대기  네트워크를 흡수 노드를 가지는 세미 마코프  체인으로 모형화  시킨다.  결국,  마코프 체인에서의 임의의  시간동안의 상태 전이 확률을 이용하여 체류시간의 분포를 구한다.  
  알고리즘의 정확도는 시뮬레이션을  통해 검증하였다.  본  알고리즘은 트래픽 밀도가 낮은  경우에 작은 오차율을 나타내었고, 외부 도착  트래픽이나 전이확률의 대칭성은 오차율에 영향을 미치지 않았다.  

     주요어 : 대기 네트워크, 네트워크 체류시간, GPH 분포, 세미 마코프 체인

 1.  서 론

 1. 1  대기 네트워크 시스팀 

대기 네트워크 시스팀(Queueing Network System)에는 외부에서의 도착과 외부로의 이탈이 가능한 개방형 대기 네트워크 시스팀(Open Queueing Network System)과 외부와의 교류가 허용되지 않는 폐쇄형 대기 네트워크 시스팀(Closed Queueing Network System)이 있다.  이  두가지 대기 네트워크 시스팀중에서, 본 논문에서 다루는 네트워크는 개방형 대기 네트워크이다.  
대기 네트워크는, 서비스 스테이션(Service Station)을 나타내는 노드(Node)들의 집합과 그 노드들 사이의 아크(Arc)로써 나태내어 진다.  고객은 네트워크 시스팀의 임의의 한 노드에 도착해서, 몇개의 노드를 방문하면서 각 노드에서 서비스를 받고 임의의 한 노드로부터 결국 시스팀을 떠나게 된다.  네트워크에 도착한 고객은 경로를 확률적으로 선택해서 이동한다.  그리고, 모든 고객이 같은 이동 확률을 갖는다.   단, 연속적으로 한 노드를 두 번씩 방문하는 순환상황(feedback)은 발생하지 않는다고 가정한다.  일반적으로 다음의 세가지 파라미터로써 하나의 대기 네트워크를 정의한다.  

(ⅰ) 각 노드별로 네트워크 외부에서의 도착 간격 시간 
(ⅱ) 각 노드별 서비스 시간 
(ⅲ) 노드  전이확률
이상 설명한 네트워크를 그림으로 표현하면, [그림 1-1]과 같이 나타낼 수 있다. 


 

                    [그림 1-1] 대기 네트워크 시스팀 모형     


[그림 1-1]에서 는 네트워크 외부에서 노드 i로 들어오는 트래픽의 간격 시간의 분포를 나타낸다.   그리고, out은 네트워크 외부를 나타낸다.  그리고, 그림에서 표시는 되지 않았지만 각 노드의 서비스 분포는 일반분포를 따른다.  
 
1. 2  네트워크 체류시간  

일반적으로 대기 네트워크의 성능 평가를 위해 분석할 때, 두 가지 분석 대상이 있다.  하나는 각 노드별 대기 고객 수를 구하는 것이고, 다른 하나는 네트워크 체류시간(Passage Time)(본 논문에서는 고객이 외부에서 네트워크에 도착하는 순간부터 네트워크를 떠나는 순간까지의 시간으로 정의함)을 구하는 것이다.  이 중, 본 논문은 네트워크 체류시간을 구하는 것을 목적으로 하였다.  
그런데, 이제까지 네트워크 체류시간 연구의 대부분은 평균의 계산에 머물러 있었다.  그 이유는 대기 네트워크 시스팀의 특성상 정확한 체류시간을 구하는 것이 불가능하기 때문이다.  본 논문은 GPH(Generalized Phase Type)라는 편리한 성질을 가진 분포의 개념을 도입하여, 네트워크 체류시간의 분포를 구하는 것을 목적으로 한다.  



 1. 3  연구의 필요성

현실적으로 많은 시스팀은 대기 네트워크로 모형화되어서 분석되어 진다.  예를 들면, 개별 생산 시스팀(job shop)과 ISDN 교환기가 대표적인 경우이다.


■ 개별 생산 시스팀

개별 생산 시스팀에서는 작업이 단속적으로 발생한다.  그리고, 개별 생산 시스팀은 각각 특수한 작업을 수행하는 서비스 센터의 집합체이다.  대기 네트워크에서는 이 서비스 센터는 노드로, 이동 라인은 노드 사이의 아크로 표현된다[11, 12].  모형화된 네트워크에서의 체류시간은 개별생산 시스팀의 작업 완료 시간이 되는데, 이 작업 완료 시간에 대한 분석은 개별 생산 시스팀의 스케쥴링에 있어서 매우 중요하다.  

■ ISDN 교환기 

ISDN 교환기에서 메시지가 각 프로세서를 거쳐서 전달될 때, 이 메시지의 전달 지연시간을 구한다고 하자.  이 경우에도 이 교환기에서 메시지의 전달 상황은 대기 네트워크로 모형화 될 수 있고, 모형화된 네트워크를 분석함으로써 원하는 지연시간을 구해낼 수 있다[17].

그 외에도 여러 분야에서 실제 시스팀의 대기 네트워크로의 모형화를 통한 체류시간 분석은 시스팀의 성능 분석에 있어 매우 중요한 척도(measure)가 된다.  그러나, 체류시간의 평균은 시스팀 분석에 있어서 많은 한계가 존재한다.  즉, 실제 시스팀에서 체류시간이 주어진 제한 시간을 준수하는지 여부를 분석할 때, 평균값은 제한값보다 작더라도 부분적으로는 제한값을 초과하는 경우가 발생한다.  이 때,  어느 정도의 확률로 이 제한 시간을 준수하는지를 알기 위해서는 체류시간의 분포를 알아야만 한다.  그러므로,  네트워크 체류시간의 분포를 구하는 것은 시스팀의 정확한 성능평가를 위해 많이 요구되어 진다. 

정리하면 본 논문에서는, 각 노드별로 외부 도착 고객의 도착간격시간, 각 노드 사이의 전이 확률(Transition Probability), 그리고 각 노드의 서비스 시간이 주어져 있을 때, 주어진 한 노드로 들어온 고객의 네트워크 체류시간의 분포를 구하는 효과적인 방법을 개발한다.

 2. 연구 현황 

대기 네트워크에서 체류시간에 대한 연구는 크게 두가지로 나누어 진다.  하나는 전체 네트워크 체류시간이 각 노드에서의 지연시간의 곱의 형태로 나타내어지면서 정확한 체류시간의 계산이 가능한 곱의 형태(Product Form)네트워크에 대한 연구가 있고, 다른 하나는 체류시간이 각 노드 지연시간의 곱의 형태가 되지 않고, 따라서 체류시간의 근사적인 계산만 가능한 네트워크에 관한 연구가 있다. 

 2. 1  곱의 형태  네트워크

대기 네트워크 중에서 매우 간단하며 분석에 편리한 특성을 가지는 특수한 네트워크로써, 다음과 같이 전체 확률이 각 노드의 확률값의 곱으로 표현이 되는 네트워크이다[2].

                                                  (1)  
     J : 네트워크에 있는 노드의 수
    는 i번 째 노드의 상태 집합
     : 네트워크의 상태
     : i번째 노드의 상태에만 의존하는 확률값
위와같은 곱의 조건을 만족하는 경우는, 각 노드의 상태 확률만 독립적으로 계산하면 전체 상태 확률이 구해지기 때문에 정확한 해를 계산할 수 있다.  네트워크 체류시간이 곱의 성질을 만족하는 가장 기본적인 네트워크는, 다음과 같은 비추월 경로를 가지는 네트워크이다.  

■  비추월 경로

경로 을 지나는 고객 A, B가 있을 때, 경로 에서 A가 B보다 먼저 서비스를 받았다고 하자. 이 때 모든 경로를 거쳐 까지 가는 동안에 고객 B가 A를 추월하지도 못하고 각 노드에서의 A의 지연시간에 영향을 미치지도 못할 때, 이 경로를 비추월 경로라고 한다.

임의의 경로가 비추월 경로인 경우와 비추월 경로가 아닌 경우의 간단한 예는  [그림 2-1]과 같다.

     +--------------------------------------------------------------+
     |                                                              |
     |      +-----+  p                               +-----+        |
     |      |  1  +--------------------------------->|  4  |        |
     |      +--+--+                                  +--+--+        | 
     |     1-p |                                        |           | 
     |         |      +-----+            +-----+        |           | 
     |         +----->+  2  +----------->+  3  +--------+           | 
     |                +-----+            +-----+                    | 
     |                                                              | 
     +--------------------------------------------------------------+      
         [그림 2-1] 추월 경로와 비추월 경로를 가지는 네트워크
이 그림에서 경로 14는 비추월경로이고, 경로 1 2  3  4는 비추월경로가 아니다.  1 2  3  4가 비추월경로가 아닌 이유는, 노드 1에서 고객 A가 고객 B보다 먼저 서비스를 받았더라도, A가 노드 2로 가고 B가 노드 4로 가면 A는 B에 추월당할 수도 있기 때문이다.  
Walrand와 Varaiya(1980)는 외부 도착이 포아송 프로세스를 따르고 각 서비스 노드의 서비스 분포가 지수분포를 따르는 네트워크에서, 위의 비추월 조건을 만족시키는 경로에 있는 각 노드의 대기시간은 지수 분포를 따르고, 각 노드사이의 대기시간은 서로 독립이기 때문에 전체 체류시간은 각 노드 대기 시간의 곱이 됨을 보였다[2].  


 2. 2  근사적 해법

현실적인 대부분의 네트워크 시스팀은 곱의 형태의 조건을 만족시키지 못한다.  이런 경우에는 근사화 방법을 통해 네트워크 체류시간을 계산한다.  그러나, 네트워크 시스팀의 특성상 절대적으로 모든 경우에 정확한 근사화 방법이 존재하지 않는다.  현째까지의 근사화에 대한 여러가지 방법중 대표적인 것은, 각 노드를 분해(Decomposition)시켜 간단한 파라미터를 이용하여 체류시간의 평균을 주로 구하는 방법인 QNA(Queueing Network Analyzer)방법과, 네트워크를 세미 마코프 체인(semi-Markov Chain)으로 근사화시키는 방법이 있다.

 2. 2. 1  분해에 의한 파라미터 근사화 방법

각 노드를 독립적으로 분해시켜서 체류시간을 구하는 대표적인 방법은 QNA 방법이다[15].  QNA는 1983년에 Bell 연구소에서 개발한 알고리즘이다.  이 방법은 네트워크 체류시간의 평균과 분산을 근사적으로 구하는 것을 목적으로 하고 있다.  이 근사화 방법에서 입력 자료는 전이 확률 , 각 노드별로 외부로부터의 도착 간격 시간의 평균과 제곱 변동계수(squared coefficient of variation;분산/평균제곱), 그리고 각 노드별 서비스 시간의 평균과 제곱 변동계수이다.  이 방법의 핵심은 네트워크를 분해하는 데 있다.  즉, 각 노드를 독립된 하나의 GI/G/1 시스팀으로 보고, 독립된 노드의 시스팀의 대기시간을 구한 다음 전체 네트워크의 체류시간을 구해낸다.  결국, QNA 알고리즘의 특징은 주어진 최소한의 자료를 가지고 각 노드를 분해하여 근사화 시키는 방법이라고 할 수 있다.  그리고, 주로 네트워크 체류시간의 평균을 구할 때 이용된다.

 2. 2. 2  세미 마코프 체인으로의 근사화에 의한 방법

네트워크가 마코프 전이(Markov Transition)를 한다는 가정을 하고, 네트워크 체류시간을 구한는 방법으로  Shanthikumar와 Buzacott(1984)에 의해 처음 연구되었다[12].  네트워크 시스팀에서 네트워크 체류시간(T)은 다음과 같이 나타낼 수 있다. 

                                                       (2) 
            J : 노드의 총 갯수
            Ni : i노드 방문 횟수
            Tir :  i노드를 r번째 방문 했을 때의 대기시간

여기서,  노드별 입력 프로세스를 포아송으로 가정하면 각 노드는 M/G/1으로 근사화되고, Tir의 평균과 분산을 구할  수 있다.  Shanthikumar와 Buzacott는 구해진 평균과 분산값을 이용하여,  마코프 전이를 하는 네트워크에서의 체류시간 T의 평균과 분산을 계산해 내었다. 

 3. 네트워크 체류시간 연구

3. 1  GPH 분포의 도입

본 논문에서는 1. 2절에서 언급한 것처럼, 연산에 아주 편리한 성질을 가지고 있는 GPH 분포를 이용하여 모든 분포함수를 GPH 분포로 변환시킨다음, 네트워크 체류시간의 분포를 근사적으로 계산하는 방법을 개발한다.  

 3. 1. 1  GPH 분포의 정의와 성질

GPH 분포는 지수 분포를 따르는 i.i.d. (independent identically distributed) 확률 변수를, 임의의 수 만큼 더한 확률 변수의 분포이다[9].  이 때, 을 평균이 인 지수 분포를 따르는 변수열(sequence)이라고 하고(단, =0 ), 더하는 갯수 을 분포함수 를 따르는 이산 확률 변수라고 하면, GPH 분포를 따르는 확률 변수 는
  
                                                   (3)  
가 된다.  그리고, 이것의 분포 함수 는 다음과 같이 쓸 수 있다. 

        ,    x>0                         (4)
그런데 이 GPH 분포는, GPH 분포를 따르는 확률 변수를 더하면 그 합 X도 GPH 분포를 따르는 아주 편리한 성질을 가진다.  GPH 분포의 이런  편리한 성질은 다음 장에서 대기네트워크 시스팀의 체류시간 분석에 이용되어, 체류시간의 분포 계산을 가능하게 한다.  

 3. 1. 2  일반 분포의 GPH 분포로의 근사화

에서 정의된 임의의 분포는 다음과 같이 GPH 분포로 나타낼 수 있다[16].
유계함수(Bounded funtion) F에 대해,
      
         ,                        (15)
단,
 ,  
이다.  그리고, 의 k 콘볼루션은 

                           (16) 
 가 된다.  여기서,
     
이다.  식 (16)을 이용하여, 최종적으로 m(t)를 다음과 같이 계산해낸다. 

                                         (17)
단, 
   
이다.

이렇게 구해진 m(t)를 (12)에 대입하면 결국,

    
                                     (20) 
가 나온다. 이 식에는 더이상 적분식이 존재하지 않으므로 계산이 가능하다.  결국, 한 노드 i에 들어온 고객의 네트워크 체류시간의 분포가 계산된다[16].              


 3. 4  실험 예제    

체류시간 근사화의 정확도를 여러가지 경우에 대해 비교해 보았다.  본예제에서의 체류시간은 1번 노드의 진입한 고객이 네트워크를 떠나는 시간으로 하였다.  본 예제에서는 네트워크 모형의 노드수를 6개로 고정을 시키고, 여러가지 파라미터 변화값의 변화에 대한 근사화의 정확도를 실험하였다.  변화시키는 파라미터는 다음과 같이 외부도착 고객의 도착률, 노드들간의 전이 확률, 노드별 트래픽 밀도의 3가지로 하였다. 

■  외부 도착률

외부 도착률에 따른 근사화의 정확도를 실험하기 위해, 모든 노드로의 외부 도착률이 같은 대칭인 경우와, 노드별로 서로 다른 비대칭인 경우의 두 가지로 나누어서 실험을 수행하였다.  본 실험 예제의 외부 도착률은 [표 3-1]과 같다.

               
                  [표 3-1] 노드별 외부 도착률


■  전이 확률

노드사이의 전이확률의 값이 근사화의 정확도에 미치는 영향을 실험하기 위해, 각 노드에서 다른 노드로의 전이확률이 대칭인 경우와, 비대칭인 경우로 나누었다. 여기서, 전이확률이 비대칭인 경우는 비대칭성의 정도에 따라 다시 두가지로 나누어서 실험을 진행하였다.  본 실험 예제의 전이 확률은 [표 3-2][표 3-4]와 같다.


                [표 3-2] 노드별 전이확률(대칭)

            [표 3-3] 노드별 전이 확률(비대칭(1))
   
  
            [표 3-4] 노드별 전이확률(비대칭(2))

■  트래픽 밀도

트래픽 밀도가 근사화의 정도에 미치는 영향을 실험하기 위해서 [표 3-5]과 같이 각 노드의 트래픽 밀도( )를 0.4, 0.6, 0.8로 변화시키면서 실험을 수행하였다.  

              [표 3-5] 노드의 트래픽 밀도
       
이상과 같은 총 세가지 파라미터의 변화에 의해 총 18가지의 근사화 예제가 만들어 졌다.  이 18가지 실험 예제에 있어, 본 논문의 근사화 방법에 의해 구한 분포를 시뮬레이션(simulation)에 의해 구한 값과 비교해 보았다.  이 때 각 노드의 서비스 분포는 지수 분포와 Er-2 분포를 채택하였다.  각 홀수 번호의 노드는 지수 분포 서비스를 수행하고, 짝수 번호 노드는 Er-2 분포 서비스를 수행하도록 하였다.  그리고, 명확한 수치 대비에 의한 비교를 위해, 두 가지 방법에 의해 각각 구한 값의 평균과 표준편차값을 비교하였다.  트래픽 밀도별로 근사값과 시물레이션값과의 비교결과는 [표 3-6][표 3-8]과 같다.  여기서 오차율은 다음과 같이 정의하였다.
    오차율 =
    [표 3-6] 체류시간의 근사값과 시뮬레이션값의 비교( =0.4)


   [표 3-7] 체류시간의 근사값과 시뮬레이션값의 비교( =0.6)
    
   [표 3-8] 체류시간의 근사값과 시뮬레이션값의 비교( =0.8)

결과를 보면, 노드별 트래픽 밀도가 본 논문의 근사화에 큰 영향을 미치고 있음을 알 수 있다.  각 트래픽 밀도별로 근사적으로 구한 체류시간과 시뮬레이션에 의해 구해진 체류시간의 평균과 표준편차의 평균 오차율은 [표 3-9]와 같다.

        [표 3-9]  트래픽 밀도에 따른 오차율의 변화
     
표를 보면, 트래픽 밀도가 낮거나( =0.4), 높지 않은 경우( =0.6)에는 비교적 정확한 근사화가 이루어져 평균값의 오차가 거의 없으나, 트래픽 밀도가 매우 높아지면( =0.8) 오차가 매우 커짐을 알 수 있다.  
그러나, 본 논문의 근사화 방법에 의한 오차의 크기는 노드별 전이확률의 대칭성 여부에는 영향을 받지 않고 있다. 또한, 외부 도착의 도착률의 대칭성 여부도 오차율에 별로 영향을 미치지 않고 있다.  
한편, 본 논문에서 구한 체류시간의 분포와 시뮬레이션에 의한 체류시간의 분포의 분포 함수를 비교해 보았다. 트래픽 밀도만이 오차율에 민감한 영향을 미치기 때문에 다른 변수들은 고정시키고 트래픽 밀도만을 변화시켰다. 각각의 분포함수의 개형은 [그림 3-4][그림 3-6]과 같다.











[그림 3-4] 근사 분포함수와 시뮬레이션 분포함수의 비교
(전이확률 : 대칭, 트래픽 밀도 = 0.4)








[그림 3-5] 근사 분포함수와 시뮬레이션 분포함수의 비교
(전이확률 : 대칭, 트래픽 밀도 = 0.6)
      










[그림 3-6] 근사 분포함수와 시뮬레이션 분포함수의 비교
(전이확률 : 대칭, 트래픽 밀도 = 0.8)
분포함수의 개형을 보면, 트래픽 밀도가 0.4와 0.6인 경우에는 분포함수가 상당히 근접한 형태를 보인다.  그러나, 트래픽 밀도가 0.8인 경우에는 많은 오차가 생긴다.  트래픽 밀도가 0.8인 경우에 오차가 많이 생기는 이유는 근사화 요소   때문인 것으로 추측된다.  즉, 트래픽 밀도가 커지면, 대기시간이 길어진다.  그러면, 같은 메모리 크기로 대기시간의 분포를 모두 표현하기 위해서는  값을 작게해야 한다.   값이 작아지면  3. 1. 2절에서 언급했듯이 근사화의 오차율이 커지게 된다.  그러나, 트래픽 밀도가 어느 정도까지는 오차에 큰 영향을 미치고 있지 않음을 알 수 있다.  그리고, 세가지 경우에 공통적으로 본 논문의 근사적 방법이 체류시간을 실제보다 크게 계산하고 있음을 알 수 있다.    
 4. 결론 및 추후 연구 방향

본 논문의 근사화 방법에 의한 오차율은 트래픽 밀도에 의해 민감한 영향을 받았다.  트래픽 밀도가 높지 않은 경우에는 비교적 정확한 근사화가 이루어지나, 매우 높은 경우는 큰 오차가 생겼다.  이유는 노드별 지연시간이 커지면 메모리의 한계로 인해 근사화 요소  의 값을 작게 해야하고, 따라서 오차가 증가되기 때문으로 추정된다.  그러나, 노드별 전이확률이나 외부 도착 트래픽의 대칭성은 근사화의 정확도에 별로 영향을 미치지 않았다.  

본 근사화방법에서 문제점들은 다음과 같다.

본 연구에서는 근사화 요소  를 임의로 결정을 하였다.  그러나,   값의 결정이 오차율에 영향을 미치기 때문에 값의 합리적인 결정방법에 대한 연구가 더 진행되어야 할 것이다.  
본 연구에서는 노드별 입력 트래픽을 포아송으로 근사화시켰다.  그러나, 현실적으로 입력은 포아송 프로세스를 따른다고 할 수 없다.  따라서, 현실적인 입력 프로세스 모형에 대한 연구도 진행되어야 할 것이다.  
그리고, 본 논문의 근사화 방법으로 계산한 체류시간은 실제 시간보다 길게 나타나는 경향을 보였다.  이것의 원인에 대한 정확한 분석과 개선 방안에 대한 연구도 진행되어야 할 것이다. 

</tdmsfiletext>
