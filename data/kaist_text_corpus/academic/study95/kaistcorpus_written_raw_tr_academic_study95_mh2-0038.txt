<language> Korean </language>
<textcode> KSC-5601-1988 </textcode>
<process> raw </process>
<version> 2001(tr)</version>
<filename> kaistcorpus_written_raw_tr_academic_study95_mh2-0038.txt </filename>
<title> 지식처리의 응용 : 지식 공학과 차세대 컴퓨터</title>
<author> 오스카 세쯔오 저 ;  홍성수 역 </author>
<date> 1993 </date>
<publisher> 성안당 </publisher>
<kdc> 580.11 </kdc>
<tdmsfiletext>
제1장 서론
 설계와 제조는 원래 인간의 대표적이 지적 활동이지만 오늘날과 같이 기술이 전반적으로 고도화되고 신기술의 개발 경쟁이 더욱 격심해 짐에 따라 단기간에 질 좋은 제품의 설게·제조가 요구되는 시대에는, 컴퓨터에게 그것을 지원하는 CAD/CAM 시스템에 사람의 창조적 활동을 지원할 수 있는 보다 높은 고도의 기능이 요구되느 것은 당연한 것이다. 
 그런데 이와 같은 설계측으로부터의 요구 중에는 현재까지의 컴퓨터 기술 범위 내에서느 대처할 수 없는 고도의 기능이 많이 포함되어 있다. 따라서 현재의 컴퓨터 기술의 범위에서 실현되는 CAD/CAM 스스템의 효과도 언젠가는 한계에 달하여 질적으로 그것 이사의 설계·제조 프로세스의 개량은 기대할 수 없게 되는 것은 아닐까, 또는 이대로 가면 CAD/CAM의 소프트웨어 시스템이 팽대해져서 그 관리가 곤란하게 되고 결과적으로 지원 능력에 한계점이 보이는 것은 아닐까 하느 의구심을 갖게 되었다. 
 그 결과 설계·제조 지원이라고 하는 것에 대한 새로운 사고방식과 방법론의 필요성을 노의하게 되었다. 그 가운데 기술면에서 가장 가능성이 높은 것은 인공지능 연구에 있다고 하는 인식이 높아져, 설계 분야에서의 인공지능 기술 도입의 필요성이 일찍부터 일부에서 논의되고 있었다. 그러나 이 두 기술을 어떻게 결합시켜 갈 것인가, 그리고 인공지능 여구의 성과를 어떻게 CAD/CAM에 추가시켜 새로운 시스템을 구축하면 좋겠는가 등등, 보다 구체적인 차원의 논의가 되면 다양한 사고 방식이 제기되겠지만 아직 아무도 명확한 방법론이나 시스템을 확립할 수 없다고 하는 것이 현 상황이다. 
 이에는 여러 가지 이유가 있다. 첫째는 설계에 있어서 창조성처럼 현실적임과 동시에 극히 고도의 종합적인 지적 활동을 전재하고 있는 측으로부터의 요구는 당연히 그 지원 시스템에 대해서도 고도듸 기술을 요구하겠지만 그 요구는 이제까지의 컴퓨터 기술을 넘어서 있을뿐만 아니라, 종래의 인공지능 분야에서 지향한 연구 목표와도 일치하지 않는 새로운 문제를 제기하는 것이기 때문이다. 즉, CAD/CAM으로부터의 요구라고 하는 관점에서는 인공지능 기술은 반드시 충분한 수준에 도달해 있지 않기 때문이다. 이러한 장해를 제거하기 위해서는 인공지능 기술 그 자체를 더욱 추진시킬 필요가 있는 것이 현 상황이다. 
 둘째는 설계·제조와 인공지능이라고 하는 두 가지의 기술이 각각 다른 영역을 형성하고 있어, 이 두 분야에 정통한 전문가가 적음을 지적할 수 있겠다. 이것은 CAD/CAM 과 인공지능의 경우에만 한정된 것이 아니고 일반적으로 두 가지 이상의 다른 기성 연구 영역에서 신기술을 개발할 때 예외없이 생기는 문제이다. 특히 설계와 인공지능의 조합인 경우, 전자는 역사도 깊고 기성의 방법론이 확립되어 있어 극히 현실적인 면을 갖고 그 형태로 일을 전개하고 있는 사람들이 대부분인 것에 대해서, 후자는 인간의 사고 메커니즘을 주로 소프트웨어에 의해 모델화하여 해명해 간다고 하는 어떤 의미에서는 현실로부터 유리되어 있는 것으로 보이기 쉬운 성격의 것이다. 따라서 이 두 분야에 관계하는 사람들의 사고 방식에는 큰 차이가 있다. 이것이 양자의 결합을 더욱 곤란하게 하고 있다. 사고방식의 차이는 때로은 실제면에서 설계·제조 분야에 종사하고 있는 사람들로부터 인공지능적 방법론에 대한 거부 반응이라고 하는 형태로 나타나 상화을 더욱 복잡하게 하고 있다. 
 이와 같은 상황이기 때문에 현 상황에서는 아직 인공지능 연구를 CAD/CAM 기술에 어떻게 이용할 것인가하는 방법론이 확립되어 있지 않은 것이다. 따라서 다음에서 서술하는 것은 문제에 대한 필자의 사고방식을 나타낸 것임을 미리 말해 둔다. 
 CAD/CAM과 인공지능을 논의하는 데는 이 두 분야의 기술에 관한 지식이 필요하다. 다음에서는 먼저 인공지능 분야의 현화응ㄹ 간단하게 서술하고, 이어서 그 기술을 어떻게 CAD/CAM에 적용할 것인가에 대해서 고찰해 본다. 단 한마디로 인공지능이라 해도 여러분야에 걸쳐서 그 전모를 상세하게 서술할 여유가없다. 여기에서는 CAD/CAM의 이용이라고 하는 입장에서 필요한 부분만을 서술하기로 한다. 인공지능 그 자체에 흥미가 있는 독자는 본권 말미의 참고 문헌을 참고해 주기 바란다. 
1.1 인공지능
1.1.1. 인공지능 연구의 목적
 인공지능 연구는 인간이 지능 또는 사고 과정의 분석을 통해서 그것과 유사한 기능을 기계적으로 실현하느 것을 목저으로 한다. 인간의 사고법을 분석하느 것 자체는 인공지능 더 나아가서느 그것을 포함하는 정보처리 기술 이전에 심리학 그 밖의 분양의 연구 목표이기도 하다. 물론 인간의 지능 작용은 아주 복잡하여 그것을 분석하고 더 나아가서 인공적으로 실현하는 것은 매우 어려운 것이다. 
 그러나 인간의 머릿속에 초장연적인 자굥을 가진 누군가가 존재하여 지능의 자굥을 담당하고 있을 리는 없기 때문에 인간의 사고도 최종적으로느 정보처리 메커니즘으로 전개될 것이 확실하며, 사실 이제까지의 연구를 통해서 많은 지식을 얻을 수 있었다. 그러나 현재까지 우리가 도달할 수 있었던 것은 대개 인간이 일상적으로 발휘하고 있는 지적 기능의 극히 일부이다. "대개"라고 표현한 것은 오늘날의 우리에게는 인간의 적 기능의 전모가 파악되어 있지 않기 때문이고, "일부"라고 한 것은 적어도 현재 우리가 기계적으로 실현할 수 있는 범위의 지식으로는 충분히 설명할 수 없는 기능이 많아 보이기 때문이다. 
 우리가 현재까지 얻은 사실에 대해서는 다음에서 서술하겠지만 CAD/CAM과의 관련에서 중요한 것은 이미 알고 있는 종래의 기술에는 포함되어 있지 않은 새로운 기능이 어느 정도 CAD/CAM 시스템의 향상에 도움이 될 것인가 하는 것이다. 결론을 먼저 말하면 이 기능을 도입함으로써 CAD/CAM 시스템의 능력은 확실하게 향상될 것이다. 이와 동시에 설계·제조라고 하는 일의 본질에 근접한 개선을 가능하게 하기 위해서는, 이 신기술을 보다 더 향상시키는 것이 필요하다. 따라서 이 문제와 관려하여 앞으로도
  (1) 인간의 지적 기능의 미지 부분에 대한 해명을 서둘러 보다 높은 고도의 지적 기능을 실현하느 일과 동시에, 
  (2) 이미 알고 있는 여러 기능을 컴퓨터 기술로 완성시켜 그것을 CAD/CAM 기능에 적합하도록 하는 노력이 필요하다. 
 새로운 지적 기능을 기술면에서 실현하는 데는 그 기능을 순수한 형태로 추출하여 명확하게 정의를 부여하고 그 작용을 분석하여 이론화하는 순서가 필요하지만, 이제까지의 경과로 보더라도 그것에는 상당히 긴 시간이 걸리기 때문에 (1)에 대해서느 장기적으로 생각할 수밖에 없다. 오히려 가까운 장래에 CAD/CAM과의 관련에서 중요한 것은 (2)의 노력에 의해 이제까지 얻어진 결과를 최대한 이용하는 것이다. 그래도 여전히 부족한 부분은 인간에게 맡기는 수밖에 없다. 이러한 의미에서 맨 머신 커뮤니케이션 기술은 앞으로도 매우 중요한 것이다. 
1.1.2 인공지능 연구의 경과
 인공지능 연구의 역사는 이미 오래되어 20년 이상이나 앞으로 거슬러 올라갈 수 있다. 앞에서 설명한 바와 같이 인공지능의 본래의 모습은 인간의 지적 기능을 분석하고 그것을 기계적으로 실현하는 순서르 밟아야만 하는데, 이와 같은 계통적인 순서를 밟을 수 있게 된 것은 그 분야에 대한 지식이 어느 정도 얻어진 후의 얘기다. 인공지능 분야에 대한 연구도 당초에느 인간의 정보 활동 중에서 지적이라고 생각되는 것을 첫번째로 받아들여, 그것을 종래의 컴퓨터상에서 어떻게 실현할 것인가가 중심 과제로 되어 있었다. 이렇게 해서 받아 들여져 왔던 것이 서양 장기, 그리고 새롭게는 바둑 등의 게임이명 문자 인식·형상 인식·음성 인식 등의 넓으 의미의 패턴 이식, 그리고 기계 번역이나 자연 언어 이해 등의 언어 처리이고 또한 이에 수식 처리나 편집을 포함하는 기호 처리 등과 같은 방식이다. 
 인공지능 연구의 대부분은 오늘날에도 중요한 연구 과제임에는 변함 없으나, 근래에는 그 방법론이 크게 변화하고 있다. 위의 여러 분제가 지적이라고 생각되는 이유는 무엇일까. 물론 지적이라고 하는 것의 의미를 바르게 설명하는 것은 쉬운 일이 아니다. 정보처리 기술에 있어서 지적이라고 하는 의미는 다음의 설명에서 조금은 분명해질 것이다. 여기에서 이 문제느(인공지능 연구의 초기 단계의) 컴퓨터 프로그램 기법이라고 하는 관점에서 이질적이었던 것만을 지적해 두겠다. 위의 문제가 특별한 종류의 것으로서 다른 것과 구별되는 데는 이것으로 충분하다. 
 소위 폰 노이만(von Neumann)방식이라고 하느 현재의 컴퓨터에서는 주어진 문제를 미리 풀어 그의 수치해를 구하는 프로그램을 써서 컴퓨터에 준다. 컴퓨터는 수치 계산을 고속으로 실행하는 점에 최애의 효과를 발휘했다. 
 그러나 위의 문제는 반드시 이와 같이 단순한 것은 아니다. 이들 문제에 예외 없이 적용되는 것은 다루어지는 정보가 수치뿐만 아니라 오히려 주체가 되는 문자나 기호같은 좀더 일반적이 형식의 것이다. 또한 문제의 해를 미리 구할 수 없어 해를 찾아내는 기능을 필요로 하는 경우가 많다. 
 현재로서는 이러한 지적인 기능을 가능하게 하는 정보처리 기술과 종래의 컴퓨터상에서 실현된 정보처리 기술과 종래의 컴퓨터상에서 실현된 정보처리 기술과의 사이에 큰 격차가 있으며, 그 사이에는 우리가 추론·학습 등의 언어로 표현하고있는 기능이나, 그들 기능과 관련하여 통상 우리가 지식이라고 부르는 정보가 있다는 것을 알 수 있다. 이러한 기능이야말로 지적 활동의 본질이며, 이 개념을 명백하게 함으로써 비로소 앞서 서술한 바와 같이 밖으로 드러나는 지적 기능을 설명할 수 있다. 이것이 이해됨으로써 인공지능 연구도 겨우 새로운 시대로 들어갔다고 말할 수 있는데, 이것에 대해서는 차츰 설명해 가기로 한다. 그러나 추론과 같은기능은 추상적인 것이기 때문에 용이하게 이해되지 않고 당초에는 앞서 설명한 문제들을 직접 컴퓨터의 알고리즘으로서 실현하고자 했던 것이다. 이와 같은 방법으로느 특정한 문제마다 알고리즘을 만들 수밖에 없다. 
 이것을 패턴 인식 분야의 문제에 대해서 나타내 보자. 예를 들면, 세포내 염색체의 현미경 사진상으로부터 암에 의한 이상 형태의 여색체 유무를 찾아내느 문제가 주어졌다고 핮. 염색체의 수는 유한인 동시에 소수이고, 종(種)에 따라, 그 수나 형태도 미리 알고 있는 점. 또한 그 형상이 단순한 점, 염색체 상과 배경과의 경계가 비교적 판정하기 쉬운 점 등의 이유에서 취급하기 쉬운 문제 중 하나이다. 
 기본적으로는 사진의 상 안에 있는 개개의 유전자를 식별하고 미리 주어진 표준형과 비교하는 프로그램을 절차로 쓰게 된다. 이와 같은 표준 형태를 템플릿이락 부르고, 이것과의 직접 비교에 의해서 판정하느 방법을 템플릿 매칭이라고 한다. 이 순서르 그림 1-2(a)에 나타내고 있다. 
 인식해야 할 대상이 좀더 복잡한 형태의 것에서는 비교 전에 전처리르 하여 특징량을 추출한 뒤 이 특징량의 비교에 의해서 인식하느 그림 1-2(b)의 방식을 취하게 되었다. 이 때의 특징량은 대상 패턴과 다른 패턴과의 차이르 가장 잘 표현하고 있는 것을 선택한다. 
 좀더 진보된 방식으로 그림 1-2(c)와 같이 표준 패턴과 부분 매칭하여 표준 부분을 먼저 인식하고, 다시 구조체가 이들 요소로부터 어떻게 해서 조립되고 있는가 하는 정보를 이요하여 단순한 구조체의 인식을 전개하는 것이 있다. 
 또한 지금까지는 입력에서부터 결론까지의 처리 흐름이 일방적이었으나, 인식될 대상의 부류가 미리 정해져 있는 경우 그림 1-2(d)와 같이 처리 결과에 따라 모델을 선택하고 그 모델에 의거해서 보다 정확한 특징을 추출하여 결과의 정밀도를 높이느 방법도 있다. 
 이렇게 해서 앞에서 설망한 염색체 인식 문제와 같은 단순한 것에서부터 활자 문자 인식, 손으로 쓴 우편 번호 인식, 얼굴 사진 인식등이 취급되게 되었다. 
 이상의 방법을 조금 주의해서 보녀, 인식 대상에 관한 성질을 미리 알고 있고, 이것이 인식 알고리즘으로 들어가 있기 때문에 만들어진 프로그램의 범용성이 결여되어 있다느 것을 알 수 있다. 그러므로 인식 대상은 다른 것에 대한 적용이 곤란히진다. 
 만약 비교되는 표준 정보(템플릿과 표준 패턴의 특징량)와 윤곽의 추출, 표준 정보를 비교하는 절차 부분을 완전하게 분리하여 절차 부분은 취급할 패턴에는 저혀 의존하지 않도록 작성한다. 동시에, 표준정보가 순수한 데이터로 바꿔 끼울 수 있게 된다면 이 데이터를 변경함에 따라 동일 시스템을 많은 종류의 응용 문제에 사용할 수 있다. 
 예를 들면, 문자 인식의 경우 영어의 알파벳, 한국어의 가나다라, 한자 등 각종 언어에 적응하는 것이 원리적으로 가능한 것이다. 사실 음성 인식과 같이 표준 패턴에 상당하는 음성의 스펙트럼 분포가 사람에 따라 다르기 때문에 인식 대상으로 할 사람의 음성을 미리 입력하고, 이것을 그 사람의 표준 패턴으로 이후의 입력을 처리하는 방식형태를 취하고 있는 것도 있다. 
 그러나 실제로느 이와 같이 인식이라고 하는 기능을 직접 알고리즘화하는 방법으로 실현할 수 있는 것은 단순한 경우에 한정되며, 일반화는 곤란하다는 것이 이해되게 되었다. 그 이유는 우선 이 방식으로는 처리 절차오 ㅏ표준 데이터를 분리하여 광범위한 응용을 갖춘 범용 시스템을 실현하는 것이 곤란한 것임을 들 수 있다. 음성 인식의 경우 확실하게 표준 패텬이 대상마다 바뀔 수 있게 되어 있지만 , 이 차이도 음성 스펙트럼이라고 하는 일정한 구조 내에서의 작은 변경이고 절차는 이 전체의 구조에 의거해서 만들어지고 있다. 만약 이것이 사람에 따라 구조적으로도 다른 만큼의 큰 변하를 나타낸다고 한다면 그 처리계를 만드느 것은 곤란하게 된다. 
 또한 위의 몇 가지 예에서처럼 인식 대상이 단순한 경우느 어쨌든 대상이 기본 요소에서부터 복잡하게 편성된 구조체와 같은 경우나, 요소 자체도 환경과의 관계로 패턴이 변화하는 경우에느 입력 정보를 한정하는 것이 어렵고, 이와 같은 방법을 취하는 것이 한층 곤란해진다. 
 환경과의 간섭의 예로 대상이 직방체, 원뿔형, 기둥형과 같이 극히 단순한 3차원 형상의 경우를 생각해 보자. TV 카메라와 같은 화상입력 장치를 사용한다고 하면, 입력은 이러한 3차원 형상을 2차원으로 투용한 것이 되는데, 이 투영상도 복잡한 것으 아니기 때문에 염색체의 경우와 동일하게 생각할 수 있다. 
 그러나 만약 이 대상군에 닿는 빛의 방향과 강함이 일정하지 않으면 빛의 가감으로 그늘이 변화하기도 하고 다른 물체의 그림자가 비치기도 하여 센서로부터 입력되는 대상사의 윤곽선이 원형과는 다르다. 때로는 인식 가능한 범위를 넘어 버린다(그림 1-3). 또 하나의 예를 들어 보자. 그림 1-3은 "팽이"가 인식 대상일 경우이다. 팽이가 회전하고 있을 때는 직립해 있지만(그림 1-4(a))회전을 멈추면 쓰러져버린다(그림 1-4(b)). 그러면 인식 대상으로서의 팽이와 그 배경인 마루나 기둥과의 관계가 달라지며, 쓰러진 방향에 따라 입력 패턴은 전혀 다른 것이 된다(그림 1-4(c)).
 패턴 인식 기술은 CAD/CAM에 있어서도 촉망되고 있는 것 중 하나로, CAD/CAM과 관련지어 생각해 보면 도면에 대한 이해나 부품의 자동 조립 등의 응용이 곧 머리에 떠오른다. 그러나 설계에는 원래 단순한 요소로 구성된 구조물을 만든다고 하는 것이 포함되어 있으며, 조립 작업에 있어서도 위에서 설명한 팽이의 예와 같이 환경과의 간계와 부품 그 자체의 특성상의 영향이 들어가는 등 여러 가지 문제점이 있다. 
 물론 위 에는 설명을 위한 것으로 현실적으로는 이러한 곤란을 극복하느 노력이 이루어지고 있다. 이러한 노력을 대별하면
  (1) 환경을 제어하여 입력상이 가능한 한 동일하도록 한다. 
  (2) 일어날 수 있는 상화응ㄹ 염두에 두고 그것을 포함한 인식 방식으로 한다는 식의 조합이다.
  (1)은 종래부터 취해 온 방법이지만 환경의 제어는 대규모가 되는 경우가 많고, 인식을 포함하느 유연성 있는 시스템에 기대되는 것은 그것을 가능한 한 적게 하는 것이며, (2)의 기술로서 보다 유연성이 높은 인식 기술의 개발에 기대가 모아지고 있는 것은 당연한 것이다. 
 이 연구가 추진됨에 따라 위에서 설명한 문제를 해결하는 데는 패턴 인식을 단순히 형태의 식별로 생각하는 것이 아니 패턴이 표현하는 의미를 이해하는 것이다라고 하느 식으로 사고방식이 변화해 왔다. 형으로서의 패턴은 대상이 가끔 인간의 망막이나 사진의 필름또는 종이 위에 떨어뜨려진 하나의 사상(寫像), 그것도 일어날 수 있는 다수의 사상(寫像) 중 하나의 예에 불과하다. 따라서 이 패턴에 의거해서 인식하고자 한다면 생길 수 있는 모든 패턴에 대해서 인식 순서를 만들어 두지 않으면 안될 것이다. 
 그러나 대상 그 자체는 실체로서 하나이기 때문에 우선 그것을 옳게 파악하고, 입력으로서 패턴이 그 실체로부터 실제로 생긴 것인지 어떤지를 조사하는 순서에 의한 것이 옳은 방법이 아닐까(그림 102(d)의 방법은 실으 이렇나 사고방식에 바탕을 두고 있다.)한다. 또한 패턴 인식 그 자체가 목적이 아니고 그것에 의해서 실체를 식별하고 그 실체에 대해서 정보를 처리하기 위한 하나의 과정인 점에서 생가하더라도 위에서 설명한 사고방식은 이치에 맞는 것이다.  
 이상은 패턴 인식을 예로 들어 이야기를 전개해 왔으나, 이러한 사고방식은 인공지능 기술 전반에 걸쳐 있다. 예를 들면, 자연 언어 처리에 있어서 당초 언어는 문법 규칙에 의해 해석할 수 있는 것이라고 생각하며 문법을 해석하는 프로그램을 개발하느 데 노력이 집중되었다. 확실히 문법은 문장 해석에서 빠질 수 없는 것이다. 
 그러나 사람이 언어르 사용하는 것은 언어에 의해서 어떤 일인가를 표현하고자 하는 것이다. 동일한 것을 표현하는 데도 사람에 따라 문장의 사용법, 표현도 다르다. 특히 다른 나라 언어의 경우 언어 구조는 전혀 다르다. 그러나 실체는 이것에 의해 변하느 것이 아니다. 따라서 언어로 표현하고자 하는 실체를 바르게 이해하는 것이 중요하다. 이것이 말의 의미를 보다 바르게 이해한다고 하는 것이다. 
 패턴으로 표현하는 실체는 반드시 형태로표현되는 거뿐만 아니라 그 개념의 경우도 많다. 그러나 이 경우에도 그것이 정보를 부가하기도 하고 정보르 꺼내기도하는(예를 들면, 그것에 대해서 논의가 이루어진다. )하나의 대상이 된다는 점에서 형태가 있는 것과 본질적인 차이는 없다. 다만 그 표현법은 형태가 있는 것과는 다른 의미에서의 어려움을 가지고 있다. 
 이상을 요약하면 인공지능 연구는 초기에 있어서는 직접 감지할 수 있는 표면적인 정보를 그대로 처리하려고 해 왔다. 그러나 현재로서 이와 같은 정보는 우리가 목적으로 하는 대상의 일면에 불가하기 때문에 이 표면 정보를 통해서 속에 있는 대상 그 잧를 파악하자고 하는 식으로 변화하고 있다. 
 이와 같은 실대상은 고유한 성질ㅇ을 갖고 물리 법칙 등을 자연스럽게 이요하고 있다. 그러나 컴퓨터에 이것을 적용하는 데는, 그에 적합한 메커니즘(하드웨어 또는 소프트웨어에 의존한다. )을 주지 않으면 안되며, 새로운 기술이 필요하게 된다. 대상에 관한 이러한 정보는 보통 우리가 지식이라고 부르고 있는 것이다. 
 이 점에서부터 컴퓨터에도 지식을 기억시키고 이것을 정보처리에 유용하게 쓰자고 하느 사고방식이 나타나, 이제는 사고방식의 주류르 이루려 하고 있다. 지식을 베이스를 갖춘 시스템을 지식 베이스 시스템이라고 부른다. 또한 이것을 다루는 기술은 지식 공학이라고 불릴 수 있게 되었다. 
 이상의 문제 해결 방법론이라고하는 입장에서인공지능에 대한 연구 경과를 서술해 왔다. 근래의 인공지능에 대한 관심의 고조는 이와 같은 인공지능의 기초적인 연구 노력이 꽃피운 것이라느 것은 말할 필요도없지만, 동시에 그것을 지탱하는 것으로써 하드웨어 기술의 눈부신 발전이 있다고 하는 배경을 간과할 수 없다. 역으로 말하면 


인공지능이라고 하는 정보처리 자원 소비형 기술이 이제까지 용이하게 실현되지 않았던 것은 하드웨어 자원면에서의 제약이 있었기 때문이기도 하다. 이러한 상황이 변화한 현재 인공지능 기술은 앞으로 더욱 급속히 전개되어 갈 것이 확실히 말할 수 있다.
제 2 장 지식공학
 한마디로 지식이라고하는 개념은 추상적이고도 이해하기 어려운 것이며, 이것을 컴퓨터에서 다루기에는 아직 문제점이 많기 때문에 대부분은 기초 연구 단계이지만, 한편에서는 이것을 일찍부터 응요기술로 발전시키는 노려곧이루어졌다. 최근에는 이와 같은 지식을 다루느 응용 분야를 지식 공학이라고 하여 인공지능과는 다른, 하나의 연구 분야를 형성하자고 하는 움직임이 있다. 본장에서는 이와 같은 지식 공학의 본질을 알아보자. 
2. 1 기억의 효과
 인간의 사고나 동작에는 언뜻 보기에 기계적인 것에서부터 지적인껏까지 매우 복잡한 요소를 포함하고 있다. 기계적이라든가 지적이라고 하는 말의 의미는 매우 애매하지만, 하나의 견해로서 다음과 같이 생각해 보자. 기계적 동작이라는 것은 자극에 댛나 반응, 원인에 대한 결과(이후 이것을 일반적으로 입력에 대한 출력이라고 부른다.)를 언제나 예측할 수 있는 것이다. 즉, 입력에서부터 출력까지의 코스가 정해져 있어 동일 자극에 대해서 언제라도 같은 동작을 하는 것을 기계적 이라고 부르고 있다. 이것으로 입력과 출력 사이의 관계를 알기는 어렵지만 타당한 겨로가르 만들어내는 사고 또는 동작은 지적으로 보인다. 알고리즘이 보이는 것은 기계적으로 보이고, 그렇지 않은 것은 지적으로 보인다고 해도 좋다. 
 입력과 출력 사이의 코스가 보이는 것은 그것을 새로 써서, 쓰여진대로 충실하게 실행하는 기계를 만든다면 실ㅈ의 기계로 실현할 수 있지마, 알고리즘이 보이지 않는 것은 기계로 실현하기 어렵다.
 이와 같이 정의하면 기계적 이라는 쪽의 의미는 어느 정도 분명한 것처럼 보이지만, 지적 이라는 쪽은 어떤 것일까. 인간의 사고가 지적으로 봉니다 해도 인간 개개인 속에 신비가 존재할 리는 없을 것이다. 그렇다고 하면 인간의 사고도 실제로는 기계적이 것으로 분해할 수 있을 것이다. 
 이것은 인공지능뿐만 아니라 심리 학과 생리학 등 인간과 관련되는 그대 과학 여러 분야의 입장이다. 그렇게 되면, 기계적, 지적에 관계없이 어느 것이나 알고리즘이 조재하게 된다. 그 차이는 이 알고리즘이 보이는가 보이지 않는가에 지나지 않으며, 보는 사람의 입장에서 달라진다. 예르르 드면, 아마추어 환자에게는 지적인 진단을 하고 있는 것처럼 보이는 젊은 의사도 베테랑급 의사의 눈에는 틀에 맞춘(순서가 정해진)판단을 하고 있는 것으로 비치는 경우도 있다. 
 알고리즘이 보이지 않는 한 이유로 복잡성을 들 수 있다. 여기엔ㄴ 입력으로부터 출력을 생성해 갈 때의 놀리 또는 순서 자체가 복잡한 것과 기억에 의해 외관의 복잡함이 증가하는 것이 있다. 절차의 복잡함은 말하자면 이해하기 어려운 프로그램과 같은 것으로, 대부분의 경우 알기 쉽고 좁더 단순하게(그러나 어쩌면 좀더 긴) 쓰는 법이 있으며, 본질적인 아닌 경우가 많다. 이에 대해서 기억이 있고, 그것이 입출력간의 변환에 간계될 경우 입출력 관계는 갑자기 복잡해진다. 
 놀리 회로를 배운 사람은 기억이 없는 조합 회로에대해서 기억을 포함하는 수차 회로의 동작이 매우 복잡하게 도니 것을 알 고 있다. 
 그림 2-1은 이의 가장 단순한 예이다. 그림 2-1(a)는 단순한 3입력의 AND 회로로 이 회로느 입력이 모두 1일때만 출력에 1을 내다. 한편. 그림 2-1(b)는 1단위 시간 


전의 결과(1또는0)를 기억하고 다음 입력과 합께 AND회로의 제 3 입력에 그의 부정을 보내는 기억이 붙은 회로로 바꾼 것이다.
 그림 2-1(c)는 그림 2-1(a)의 회로에 시각 t의 입력란에 쓰여진 것과 같은 입력이 들어갔을 때의 출력 (X)를 표시한 것이다.  X는 그때 그때의 입력에 따라 하나의 의미로 정해지고 이 때의 입출력 관계는 매우 단순하고 이해하기 쉽다. 
 예를 들며, 입력이 (A, B, C)=(1, 1, 0)일 때의 출력 X는 언제나 0이다. 한편. 그림2-1(b)의 회로에 A,B에 관해서느 그림 2-1(a)와 같은 입력을 더하였을 때의 출력을 나타낸 것이 그림 2-1(c)이다. 이 때 출력은 기억 장치의 초기값이 1이었는가. 0이었는가에 따라 달라질 뿐만 아니라 동일 입력에 대해서도 다를 경우가 있다. (예르 들면, 그림2-1, 3의 시점 입력과 2의 시점 입력은 같지만 출력이 다르다.) 따라서 입력과 출력과의 관계를 파악하기 어렵게 된다.
 초기값에 따라 동일 입력에 대한 결론이 다른 것은 선입관에 따라 판단이 다르다고 하는 것에 대응하고, 또 기억 때문에 동일 입력에 대해서 다른 결과가 나오는 것은 가지고 있는 지식에 따라 판단이 다른것과 대응한다고 해도 좋다. 
 물론 이 예는 너무 단순하므로 이러한 해석도 다소 억지같은 감이 있지만, 기억량이 더욱 많아지면 이렇나 해석이 그다지 부자연스럽지 않게 될 것이다. 어쨌든 이것은 기억이 들어가면 입출력 관계가 복잡화되는 예이다.
 이상의 것을 좀더 일반화하면 기억을 가진 계에서느 여기에 기억된 정보의 패턴에 따라, 입출력 관계에 대한 영향이 다르다. 위의 예에서는 기억이 1비트뿐이지만 내용이1인가 0인가에 따라 영향이 변한다. 이 때 시스템은 2개의 상태, 즉S0 (=0)와 S1(=1)을 갖는다고 한다. 
 만약 기억 장치가 2개이며, 각각 0 또는 1을 기억한다면 시스템의 상태는 이의 조합으로서 (0,0), (0,1), (1,0), (1,1)등 4가지가 있다. 다음 1개의 기억 장치에 1개의 변수르 배다하고 기억 정보를 변수로 표현한다. 각 변수가 갖느 값의 변역은 벼수마다 다르다. 지금 번수의 변역이 모두 (0,1)이고 변수가 N이면 상태수는 이 된다.
 만약 알파벳을 취급하느 시스템에서 기억도 알파벳 단위로 이루어진다면 N문자를 기억할 수 있는 시스템의 상태수는 이된다. 또, 입출력 관계에 대한 상태의 연관 방법도 그대로 있기 때문에 동일 입력에 대해서도 터무니 없는 수의 다른 출력이 일어나다. 이것이 앞에서 설명한 기억에 의한 복잡함이다. N이 고작 몇 개 되지 않는다 하더라도 거의 취급하기어려운 크기가 된다. 
 인간의 사고로 되돌아가 보면 인간의 뇌에는 100억이 넘는 기억소자가 있다고 한다. 이 일부를 사용하는 것만으로도 인간이 얼마나 복잡한 행동가 사로르 할 수 있는 구조로 되어 있는가르 알 수 있다. 인간의 경우 오히려 이 다양성의 제어쪽이 때때로 중요하다. 예를 들면, 대세가 공동 사회를 유지하느 데에는 동일 입력에 대해서 동일한 반등을 하는 것이 필요하다. 커뮤니케이션이 이거세 의해 비로소 성립되기 때문이다. 
 기억은 한편으로는 입출력 관계의 다양성을 증가시키지만, 다른 한편으로는 입출력 관계를 제어하는 것도 가능하다(다양성의 하나로서). 그림 2-1(b)의 회로에서 기억이 0에서 출발하여 어느 사이 거기에 1이 들어간 뒤 기억 장치는 1로 유지되는 회로를 만들 수 있다(그림 2-2). 그 후에 이 회로는 입력에 관계 없이 동일한 출력 (0)을 계속해서 내보낸다. 
 이것은 특수한 예이다. 앞에서도 서술한 바와 같이 인간의 사고를 이와 같은 단순한 예로 서술하는 것은 폭론(暴論)에 가깝다.본 내용의 취지느 기억이라고 하는 기능이 지적으로 보이는 행위나 사고에 깊게 관여하고 있는 점. 따라서 컴퓨터에 지적인 처리르 부여하고자 한다면 기억을 어떻게 사용할 것인가가 중요한 일임을 나타내려는 것이다. 
2.2 자동 장치와 지식 정보
 지적인 처리를 전개하는 데 있어서 기억이 중욯나 역할을 갖는 점을 서술하엿는데, 기억이 있는 것만으로는 충분치 않다. 기억 장치에 저장된 정보가 입출력간의 변화넹 관여하는 것이 필요하다. 그림2-1(b)의 예에서 b점을 분리해 버리면, 아무리 기억이 있어도 동작은 그림 2-1(a)의 예와 동일하게 된다. 
 좀더 실제에 근접한 경우르 생각해 보자. 컴퓨터의 대량 기억능력을 이용하는 것은 지식 공학 이전에 정보 검색이라든가 데이터 베이스라고 하느 형식으로 실용화되고 있다. 이것을 지적 시스템을 볼 것인가 말 것인가는 사람에 따라 다르지만, 일반적으로 이들은 지적이라고는 생각되지 않는다. 그것은 대량 기억을 사용하고는 있지만, 기억 정보와 이억을 검색하는 처리 부분과는 부리되어 있고, 기억 내용에 따라 처리계가 영향을 받는 일이 없기 때문이다. 
 그림 2-3에 나타난 바와같이 이 시스템의 입력은 노리적으로는 검색 지령과, 검색해야만 하는 기억 정보를 위한 키 또는 인덱스로 이루어진다. 처리 절차는 이 키를 그것에 의해 표현되는 정보 내용으로 바꾸어서 출력한다. 키나 검색되는 정보는 이디까지나 절차 부분과는 직접 관계되지 않는 처리 대상으로서의 데이터이다. 그림 2-1의 경우 기억 내용이 처리계(AND 게이트)로 들어가 결과에 직접적인 영향을 주었으나, 그림 2-3에서는 기억 내용이 그대로출력될 뿐이다. 
 이와 같이 기억 정보를 갖느 외관상의 동작이 복잡한 것이다. 기억을 갖는 계의 이론으로서 자동 장치 이론이 있다. 이 이론에서는 위에서 설명한 입출력 관계의 문젤르 시스템 상태의 개념을 사용하여 수학적으로 논하는 것이다. 
 자동 장치 이론에서는 입출력 관계에 영향을 주는 기억 부분을 시스템의 내부 상태로 표현한다. 
 내부 상태를 갖고 그것이 처리 결과에 영향을 미치게 하는 기구를 갖는 시스템은 구성 방법에 따라 매우 다양한 처리 양식을 표현하고, 따라서 여러 가지 시스템의 동작을 이것으로 표현할 수 있다. 바꾸어 말하면, 여러 가지 시스템의 동작 모델로 사용할 수 있다. 이 안에는 전혀 무의미한 거솓 있고 또한 희망하는 시스템의 우수한 모델로 되어 있는 것도 포함되어 있다. 문제는 이와 같은 바람직한 구성의 것을 어떻게 발견할 것인가, 또는 이러한 시스템을 어떻게 설계할 것인가, 또 그것을 이용 가능한 수단으로써 어떻게 실현할 것인가이다. 
 자동 장치 이론은 이러한 체계를 논의하는 하나의 이론적 방법이다. 뒤에 서술할 지식 공학적 방법에 대한 성격을 보다 명백하게 하기 위해(이것과 대비한는 것으로 하여) 자동 장치 이론에 대해서 좀 더 부언해 두겠다. 
 앞에서 설명한 대로 자동 장치는 시스템이 식별할 수 있는 내부 상태를 정의하고 있다. 내부 상태와 입력에 의해 출력이 정해지는데 동시에 내부 상태도 변화한다. 따라서 자동 장치 동작은 모든 상태와 입력 패턴에 대해서 출력과 다음 상태가 어떻게 정해지는가를 정의하면 결정된다. n시점의 상태를 입력을 출력을 으로 하면 이것은
과 같이 함수형으로 표현할 수 있으며, 이 관계를 모든 에 대하여 설명할 수 있다. 이것에는 통상 그림 2-4와 같은 상태 천이도나 그림 2-5와 같은 천이표가 사용된다. 그림 2-4에서 동그라미 표시는 상태를 표현하고 그 사이의 화살표는 천이를 표현한다. 
 화살표에 붙여진 1/0같은 기호는 을 표시하고, 입력 일때 화살표의 천이가 생겨 출력 을 일으키는 것을 표현한다. 그림 2-5는 그림 2-4를 표의 형식으로 나타낸 것이다


또 자동 장치에는 이와 같은 각 천이에 대응하여 출력을 일으키는 거솩 상태에 고유의 출력을 일으키는 것이 있다. 
 후자를 그림 2-6과 같이 표현한다. 화살표에는 만이 붙여지고, 출력은 각 상태마다 으로 나타내 있다 이후는 그림 2-6과 같은 형식의 것을 상징한다. 
 자동 장치는 이와 같이 시스템의 전상태를 모두 정의하고, 그것을 바탕으로 동작을 정의하고 있다. 따라서, 시스템의 동작은 완전히 정의되어 입력 계열이 주어지면 장래에 출력 및 내부 상태의 계열을 구할 수 있게 된다. 원칙적으로, 목적에 맞춰 필요한 동작을 전개하는 시스템을 설계하는 　이가능하고, 모순이 생기거나 불필요한 동작, 무의미한 동작 등을 배제할 수 있다. 이들은 시스템을 설계하는데 있어서 매우 중요한 성질이다. 
 하나의 예로서, 다음 3변수 t,b,a를 갖는 시스템에 대해 생각해 보자. 각 변수의 의미와 값은 다음과 같이 정의한다. 
t : 환자의 체온 
b : 세균 검사 결과
a : 식욕
 이 계의 상태수는 등 12개이다. 한편, 환자에 대한 처리는 입력으로써
어떤 조치도 취하지 않음.
해열제를 투여
힝셍 물질을 투여
해열제와 항생 물질을 투여
로 한다. 각 상태마다 이들을입력한 겨로가 일정 시간 후에 어떤 상태로 천이하는가를 알면 이 의료 처리 시스템을 자동 장치로 표현할 수 있다. 
 이것을 컴퓨터로 나타낸다면 컴퓨터에 천이표를 줄 필요가 있다. 이에는 여러 가지 방식이 가능하지만 뒤의 설명과의 대응을 고려해서 약간 귀찮아도 다음과 같은 컴퓨터용 언어를 사용하기로 하자
 이 언어는 상태 일 때 입력 가 들어가면 다음 상태는 로 , 출력은 가 된다는 것을
if  S=Si and I=
then S  and O=O
라고 쓴다. 혹은 S가 n개의 변수  의 조합으로 표현될 때
와 같이 쓴다. 여기에서 등은 식별 번호이며if부분 및 then 부분의 각각 (1)∼(n+1)까지의 n+1개의 표현이 "AND"로 묶여져 있는 것으로 한다. 천이표를 표현하는 데는 이와 같은 표현이 (상태수*입력수)만큼 필요하다. 
 이와 같은 언어를 가진 컴퓨터에서 앞에서 설명한 의료 시스템을 기술하고 이 시스템에 의사가 진단에 의해서 얻은 환자의 상태(초기상태)와 목적으로 하는 상태(목표)를 주었다고 핮. 만약 컴퓨터가 패턴 매치 기능을 갖고 있고, 상반기의 천이표 안에서 주엊니 초기상태와 일치하는 것을 선출하여 결과가 목표에 도달하기까지 천이를 시행적으로 되풀이하는 기능이 주어져 있다면, 진단·치료 경로가 발견되어 어떠한 처치를 어떠한 순서로 할 것인가를 구하게 된다. 이 때 (2-3)과 같은 표현을 지식이라 부르고, 경로를 시험적으로 발견하느 기능을 추론이라 부르고 있다. 
 이상은 그히 단수한 예이므로 이와 같은 방법이 가능하지만, 실용적인 정도로 기억을 갖고, 따라서 상태수가 많은 시스템에세는 이와 같이 모든 상태에 관한 천이표를 완전하게 만드는 것은 곤란하다. 또한 만일 무리하게 그것을 했다고 하더라도 새로운 정보를 부가하거나 변경할 때마다 재차 전부를 수정하지않으면 안된다. 결구 여기에서는 사실상 실현이 불가능하다. 
 한편 변수가 많은 복잡한 시스템에서는 전변수가 서로 강한 관련을갖고 있는 경우는 드물고 변수간의 관련은 국지적이 된다. 이 경우 만약 상호 관련되는 범위를 알고 있으면 관련디는 부분만을 설명함으로써 시스ㅔ의 동작을 완전하게 기술할 수가 있다. 이 경우에는 여기에 적합한 기술법이 필요하게 된다. (2-3)에서 사용한 기술법은 이 경우에도 적합하다. 
 이에 대한 예로서 그림 (2-4a)와 같은 자동 장치를 생각해 보자. 이 그림은 각각  와 의 2가지 값을 취하는 2개의 변수 x,y의 조합으로 결정되느 4가지 상태  를 갖는다. 그림 2-7(a)의 시스템을 앞에서 설명한 if-then형식으로 표현하면 (출력 표현은 생략)
와 같이 표현된다. 그러나그림 2-7(a)를 주의해서 보년 변수 x와 y는 상호 무관하게 변화하고 있으며, 결구 그림 2-7(b)와 같이 독립된 2개의 계로서 표현되는 것을 알 수 있다. 이것들은 각각
와
로 표현된다. 이 경우 전시스템의 상태는 이와 같이 별개로 구하는 변수 x와 y의 조합(x,y)이다.
 (2-3)과 (2-4)를 비교하면 곧 알 수 있는 것처럼 (2-4)는 표현이 간단할 뿐 아니라 각 변수의 갑싱 다른 변수로 변하지 않고 표현할 수 있는 특색을 가지고 있다. 예를 들면, 앞에서 설명한 의료진단·치료 시스템에서 의료 기술의 진보에 따라 체온을 표현하는 별수의 값을 좀더 상세하게 취하여
과 같이 바꾸어 줌으로써, 좀더 상세한 진료를 할 수 있도록 체계를 개조한는 등의 변경으 (의료의 경우에 한정하지않고 어떠한 분야에서도) 일어날 수 있는 것이다. x의 값을  로부터  으로 바꾸면 (2-3)식에서는 모든 기술에 x가 들어가 있기 때문에 이것을 모두 바꿔 주지 않으면 안 된다. 이에 대해서 그림 2-7(b)  의 경우는 (2-4a)부분만의 변경으로 완료된다. 
 일반적으로 변수가   일 때 일반적 기술은 (출력 표현은 생략)
이지만, 대부분의 경우 변수의 상호 관계가 이전의 변수에 미치지 않고, 이전 변수 집합의 부분집합 범위로 제약되느 경우, 이와 관련된 부분만을 포함하는 형태르 만들 수 있다. 
  으로 하고,   를 X가 있느 부분집합에서 이 안의 변수 사이에만 의존 관계가 있는 것으로 한다. 이 때는
와 같이  내의 변수만을 빼내어 쓸 수 가 있다. 이와 같이 다른 부분집합   s가 s개 있는 경우 각 부분집합마다 위와 같이 기술하여 전시스템을 기술하게 된다. 예를 들면     에 대해서 의존 관계가 있다면 이  의 각각에 대해서 위와 같이 기술하면된다. 
 그림 2-7의 예는 시스템의 동작이 완전하게기술되어 있고 이 시스템의 행동이 구조적으로 변수 사이의 독립성을 보증하고있는 것으로, 원래의 천이 구조가 분리 가능 (decomposabble)한 경우이다. 한편, 현실 세계에서 생기는 문제는 특성(동작의 구조적 성질)이 완전하게 해명되지 않기 때문에 시스템에 전체를 기술할 수 없는 경우가 많다. 
 오히려 실제로는 어떤 문제의 체계(예를 들면, 앞에서 설명한 의료체계)를 기술한다 하더라도 미지의 부분이 많아 변수를 선택하는 방법(상태의 선택 방법)을 취하지만, 그 체계를 바르게 표현하는 데에 적합한 것이 무엇인지조차 모르는 경우가 많다. 만약 완전한 상태를 고집한다면 이와 같은 현상은 항상 대상에서 제외되어 버린다. 기술(技術)이나 학문의 진보란 이와 같은 불완전한 상태에서도 임시로 변수르 선택하여 (일종의 가설을 만들어) 이미 알고 있는 부분부터 시작해서 경험이나 연구를 통하여 그것을 진실한 자세로 접근하고 수정해가는 프로세스라고 할 수 있다. 
 이와같이 변수 자체가 임시로 선택된 시스템에서 변수 사이의 모든 관계를 모순되지 않게 완전히 기술하는 것은 곤란하다. 일반적으로는 관측된 현상이나 사실을 잘 설명할 수 있도록 소수 변수간의 관계를 표현하는 것이 행해진다. 이 때에 (2-6)의 표현법을 이용할 수도 있다. 이 때의 표현은 실제로는 존재하지 않을지도 모르는 변수 사이의 관계라 그것이 미지 (未知)라면 일체 무시하고, 보이는 것만을 기술하고 있는 점에서 어디까지나 외관상 변수의 독립성을 부여하고 있는 데 지나지 않기 때문에, (2-4)와 (2-3)이 완전한 등가(等價)인 것과는 다르다.
 그러나 이에 의해 완전하게 알지 못했던 체계라도 기술하여 의료의 예와 같이 그것을 이용할 수 잇게 된다. 미지의 부분은 무시하고 있기 때문에 시스템의 전체 형태나 변수(상태)의 총수르 특별히 고려하지 않아도 개개의 사실이나 관계를 기술할 수가 있다. 이러한 의미에서 사용 방법이 잘못되지 않는다면 (2-6)의 표현법은 편리할 것이다. 이런 표현법을 사용하여 기술한 것으 말하자면 우리가 갖고 있는 지식에 해당하는 것이다. (2-6)과 같은 표현을 지식이라고 부르는 것은 부자연스러운 것이 아니다. 이렇게 해서 이미 알고 있는 정보를 지식으로 기술하여 실제 문제해결에 이용하고자 한 것이 지식 공학이다. 그러나 앞에서 설명한 바와 같이 짓기 공확에서 개개의 기술을 짜맞추어 목표에 도달하기까지의 경로를 발견해 내는 추론 기능이 필요하다. 
  if∼then형식이 지식을 표현하기 위한 유일한 방법은 아니다. 이것과 같은 각종 방법이 제안되고 있다. 
 이상 지식 공학이라고하는 새로운 기술을 설명하기 위해 자동 장치라고 하는 기존의 개념을 이용하였다. 
 일반적으로 지식 공학을 자동 장치에 접목시키려는 시도가 별로 없었다. 지식 공학과 같은 분야에서 최대의 특징으로 삼고 있는 지적 기능이란 그러한 행동이 복잡한 점, 다시 말하면 외부로부터 그 지적 시스템의 입력과 출력을 관찰해 보아도 쉽게 관계를 파악하기 어려운 접, 이것이 주로 기억을 포함하여 일어나는 것들에 댛나 모델의 하나로서 이론적인 연구가 전개되어 온 자종 장치의 개념을 이용하여, 그것과의 대비로 지식공학의 위치 부여를 시도한 점이다. 이에 대한 시비는 뒤로 미루고이 방향으로 좀더 얘기를 진행시켜 보자. 
2. 3 복합 천이와 경로 탐색에 의한 문제 해결
 앞의 의료 시스템의 예에서느 변량 t,b,a값의 조합이 자동 장치의 상태를 저의하고 있으며 이것을표현하기위해 (상태×입력)→(상태×출력)의 천이 관계를 표현하는 언어를 정의했다. 이 언어를 이용할 때는 (상태×입력)의 각 값에 대하여 그의 각 천이르 1문장을 이용하여 표현했다. 따라서, 하나의 자동 장치를 완전하게 기술하는 데는 이와 같은 문장이 (상태수×입력수)개가 필요하다. 이 문장에 번호를 붙여   등으로 표현하고 이 집합을 Ｔ라고 하면 이 Ｔ가 천이표, 즉 자동 장치 그 자체를 나타내고 있다. 출력 Ｏ은 상태 Ｓ와 관련된 수로서 Ｓ가 정해지면 자동적으로 정해지기 때문에 이하에서는 특별히 필요하지 않는 한 생략한다. 
 앞의 의료 시스템의 예를 이용한 천이 문장을 예로 들면, 
  :"만약  환자이 체온이 38 이상
      세균 검사는 양성
      식욕이 없다.
   라는 상태에서
      항생 물질을 투여한다. 
   그렇다면 (일정 시간 후에)
      환자의 체온이 38  이상
      세균 검사는 음성
      식욕이 없다.
   고 하는 상태가 된다.
와 같은 형태인데, 통상 이러한 정보를 지식이라고 부르고 있다. 만약  와 함께 상태 천이 의 기술로
   "만약  환자의 체온이 38 이상
       세균 검사는 음성
       식욕이 없다.
    라는 상태에서
       해열제를 투여한다. 
    고 하면 (일정 시간 후에)
       환자의 체온은 37 이하
       세균 검사는 음성
       식욕이 있다.
    는 상태가 된다."고 하자.
 이 때 T로 기술된 처이표 중에서 이 와 를 선택하고 이것을 합성하여  2회의 천이를 하는 것으로 하고, 여기에서   는   순으로 천이를 계속해 가는 것을 표현한다. 이것은  의 결론부와 의 전제부가 같은 것이어서 가능하다. 이것을 복합 천이라고 부르고 라고 표현하자.  도 천이의 한 가지이다.
  : "만약 환자의 체온이 38 이상
       세균 검사는 양성
       식욕이 없다.
   라는 상태에서
       항생 물질을 투여하고 이어서(일정 시가 후에) 해열를 투여한다고 하면 (또 일정 시간 후에)
       환자의 체온이 37 이하
       세균 검사는 음성
       식욕이 있다.
   고 하는 상태가 된다."
는 등가가 성립된다. 이하는 간단하게 하기 위해 천이를
와 같이 표현하자. 그러면
라고 표현된다(그림2-8)
 이 자동 장치 T를 갖는 시스템은 초기 상태  와 목표 상태  가 주어졌을때, T가운데서 와  르 선출하여 복합형  를 만드느 기능을 갖는다면, 주어진 초기 상태에서 목표로 하는 상태에 도달하는 코스를 발견할 수 있다. 이것은 문제가 주어지고 스스로 그 해를 구하는 것이 된다. 이와 같은 기능은 주어진 상태(초기 상태 및 목표상태)를 천이 전후의 상태로 가지는 복합 천이를 발견함으로써 실현된다.
 일반적으로 사용자가 해결해야 할 문제를 가지고 있을 때, 종래 와 같이 그 해를 구하는 순서로 프로그램을 새로 써서 컴퓨터에 주지 않고, 그 문제를 직접(또는 모델화에 의해 문제로서의 형식을 정리하는 정도의 전처리로) 입력하는 것을 허용하여 컴퓨터 시스템 자신이 해를 발견하는 시스템을 문제 해결 시스템이라고 부른다.
 단순한 문제람녀 어떤 부류 내의 문제를 해결하는 일반 순서를 미리 정의하고 프로그램화하여 둘 수 있지만, 조금 문제가 복잡해지거나 해결법 자체를 바꾸어 가는식의 문제에서는 이것이 곤란히져 위에서 설명한 예와 같이 미리 주어진 지식을 바탕으로 하는 방식이 유망하다. 이것을 지식형 문제 해결 시스템이라고 부른다.
 이와 같은 시스템을 실현하는 데 있어서 불가결한 몇 가지의 기본기능이 있다.
【1】 패턴 매칭
 문제 해결 시스템은 문제에 따라 표현 방법도 다르지만, 일반적인 형식으로 입력(위의 예에서는 초기 상태/목표 상태)이 주어졌을 때 기존의 정보(지식)군 T내의 각 천이의 기술(일반적으로는 지식의 구성 요소)안에 이 입력을 천이 전/후에 갖는 천이 기술(지식 요소) 와  를 발견할 필요가 있다.
 즉 필요한 것은 의미의 일치이지만, 패턴 매칭에서느 형태(패턴)의 일치를 발견할 뿐이다. 선택되는 표현볍(지기 표현)에 의해, 위에서 설명한 예와 같이 의미적인 일치는 완전하게 형태가 일치할 경우에 한정되는 경우도있고, 또 표현 속에 변수를 포함하는 것이 허용되어 의미적인 일치는 형태 일부의 일치와 그에 따른 번수 등에 관한 특정 조건을 만족시키는 경우가 있다. 이러한 경우 패턴 매칭 기능과 함께 의미의 일치 또는 포함 관계의 검사 기능이 필요하다. 
 예를 들면, 시스템에 주어진 지식이 "모든 금속은 각각 고유한 융점 온도 이하에서 녹는다." 라고 하는 것이었다고 하자. 이에 대하여 입력이 "철은 어떤 융점 이하에서 녹는다."라고하는 것이었다면 전자는 후자의 의미도 포함하고 있으므로(이를 함축한다고 한다. )보다 일반적인 표현이지만 이것은 철  금속(철은 금속의 일종이다.)라고 하는 관계하에서만 성립된다. 다만 앞에서 설명한 것처럼 이러한 기능의 필요성은 표현법에 의존하며, 형태의 일치만으로 충분한 경우는 불필요하다. 
【3】 정보 변환
 앞에서 설명한예어서 초기 상태와 목표 상태는 2개의 천이 와 의 복합 천이 로 연결되었다.  와 도 천이 전, 후의 어느 쪽이든 한쭉의 상태가 입력으로 지정되어 있는 것과 일치하기 때문에 입력 정보를 키 정보로서 천이표 T속에서 발견할 수 있었다.
 그러나 좀더 일반적으로 3개 이상 천이가 관계될 경우 이렇게 간단하게 해를 구할 수 없다. 예를 들면, 3종(種)의 천이    의 복합형     에 의해서 비로소 초기 상태  와 목표  가 연결된다고 하자. 즉, 
이다. 와 는 입력으로 주어진 와 를 차례로(밑줄 부분과의 매칭으로)T속을 탐색하여 발견할 수 있다. 그러나  에 대해서는 그렇게 할 필요가 있다. 이 조작은 입력  의 어느 쪽인가를 변환하는 형식으로 반복 처리된다.
 예를 들면, 천이  느 "어떤 (미지의) 상태X로부터 천이  를 행함으로써 상태 에 도달할 수 있다."라는 것을 찾은 것이지만,  는  에 천이 를 실시함으로써 도달하는 것을 알았기 때문에 미지의 상태 X를 발견된 에 의거해서 로 고정할 수 있다. 이어서 이번 에는  를 새로운 목표로 설정하여 동일 조작을 반복한다. 즉,  를 키로 하여 가 발견된다.
 이와 같이 목표 상태 를 키로 천이 기술을 찾고, 거기에서 발견되는 새로운 상태에서 목표 상태를 치환하는 변환을 반복함으로써 초기 상태  에 이르면 그것이 해가 된다. 이와 반대로 초기상태 에서 출발하여   의 순으로 변환해서 목표에 도달하는 것도 가능하다. 
 일반적으로 별개로 주어지고 있는 정보(지식:위의 예는 천이 기술)를 일정한 규칙(위 예는 천이 기술)를 일정한 규칙(위 예의 경우, 상태의 일치)에 따라서 서로에게 퐌련을 부여하고, 주어진 정보를 순차 변횐히먄사 츨발점에서 목표 겨롸글 구하는 조작을 추론이라고 부른다. 초기 상태는 위의 예와 같이 그때마다 사람이 주는 경우 외에 미리 주어져 있는 경우도 있다. 후자의 전형적인 예는 수학의 정리를 증명하는 것과 같은 경우로, "미리 주어진 조합의 변역 공리에서만 어떤 정리를 증명한다."라는 형식이 취해진다.
 추론을 행할 때 출발점(위 예에서는 초기 상태)으로부터 시작하여 목표를향해 앞쪽으로 나아가는 방법과, 목표로부터 시작하여 그 목표에 달하는데 그 앞의 어디에 와 있으면 좋은가라고하는 후방(後方)으로 진보하는 방법이 있다. 전자를 전지 추론(Forward Reasoning), 후자를 후진 추론(Backward Reasoning)이라고 부른다. 어떤 것을 사용할 것인가는 이 시스템의 사용법에 따른다. 앞에서 설명한 의표의 예에서느 어느쪽이라도 거의 비슷하거나, 또는 이쌍방을 실행하는 것도 생각할 수 있다. 앞에서 언급한 수학적 증며의 예와 같이 출발점이 모두 소수의 공리 조합인 경우, 목표로부터 시작하여 후방(後方)으로 진행하고, 마지막으로 이 공리의 조합에 도달하는 식의
후진적 방법이 많이 사용된다.
【4】 back tracking
 의료의 예에서는 초기 상태에서 목표까지의 코스가 하나인 것처럼 서술하였다. 실제로 1개의 상태에서 다수의 다른 상태로 천이가 가능하다. 예를 들면 입력의 조합을 
으로 하고 상태  에 있을 때의 천이 가능한 상태는 에 의해
과 같이 정해져 있다고핮. 이경우 어떤  를 선택하면 목표에 능란하게 도달할 수 있는지를 처음에는 알 수 없다. 따라서 여러 가지 시도를 해 보고 그 안에서 도달할 길을 찾아내지 않으면 안되며, 이것을 조직적으로 행하는 탐색 방법을 실현해야 한다.
 이것을 그림 2-9의 예로 나타냈다. 그림 2-9는 의료 시스템의 자동 장치 천이도를 나타내고 있다. 시험 삼아 로 하고 있는데, 그림이 복잡해지기 때문에 일부만 나타내고 있다.
 초기 상태 에 있을 때 I의 각 요소 에 대응하여 다음과 같은 상태가 정해진다. 굵은 선으로 나타낸 것이 천이이다. 다음으로 이같이 각 도달한 상태에서 천이 회수 1, 2, 3, …으로 도달 가능한 상태의 조합을 차례차례 만들어내고 를 정점으로 하여 그림 2-10과 같이 표시한다. 그림 2-9, 그림 2-10에서 노드는 상태를 표현한다.
 그림 2-10에서 정상의 노드 로부터 아래 방향으로 n단째(n=1,2,…)의 노드는 상태 
를 나타낸다. 또 아래쪽의 노드로부터 위쪽 노드로의 화살표는 앞에 통과한 상태로 되돌아가느 것을 의미한다. 예를 들면 그림 2-9에서, 상태열 는 이와 같은 예이다.
 목표로 하는 상태가 나타났을 때, 일반적으로 같은 중간 상태를 1회 이상 통과하는 것은(특별한 지정이 없는 한) 쓸모없는 일이며 이와 같은 뤁를 만들 필요는 없다. 그래서 그림2-10에서 위쪽의 노드로 되돌아가는 처닝(이미 통과한 상태로 되돌아간다.)는 하지 않는 것으로 하며, 이것을 생략하기로 한다. 또한 그림 2-10에는 상태 로부터 로의 경로가 있는지 없는지 조사되기 때문에 중복한다. 그 때문에  로부터 로의 천이도 하지 않는 것으로 한다.
 이렇게 해서 불필요한 천이 경로를 제거한 것이 그림 2-10(b)(제거한 경로는 점선으로 나타나 있다.)로 이 나머지의 구조는 1개의 루트·노드(정상의 노드)로부터 아래쪽다. 이와 반대로 초기 상태 에서 출발하여    의 순으로 변환해서 목표에 도달하는 것도 가능하다. 
【1】패턴 매칭
 문제 해결 시스템은 묹에 따라 표현 방법도 다르지만, 일반적인 형식으로 입력(위의 예에서는 초기 상태/목표 상태)의 주어졌을 때 기존의 정보(지식)군 T내의 각 천이의 기술(일반적으로는 지식의 구성요서)안에 이 입력을 천이 저/후에 갖느 천이 기술(지식 요소) 와 를 발견할 필요가 있다. 
 상요자는 시스템 내에 어떠한 정보(지식)가 어떠한 형식으로 축적되어 있는지의 원칙을 모르더라도 이 시스템을 사용할 수 있는 것이 바람직하다. ㄸ라서 이때 와 를 발견하느 것은 이것이 존재하는 어드레스를 지정하는 것이 아니고 내용에 의한 일치를 취하는 것을 의미한다. 즉, 상태 표현(광의)의 패턴 일치에 의해 검색하는 것이 필요하다. 상황에 따라서 해싱과 같은 방법을 사용할 수 있는데 내용에 의한 검색이 필요하다. 
【2】함축성 판정
 이러한 종류의 시스템에서는 각 지식과 입력에 대한 표현을 어떻게 정할 것인지가 가장 기본적인 결정으로 전시스템의 설계에 영향을 미친다. 이것은 이빗ㄱ 표현이라 불려지며 뒤에서도 언급하겠지만, 표현 방법에 따라 단순한 패턴 매칭으로는 불충분한 경우가 있다.
 즉 필요한 것은 의미의 일치이지만, 패턴 매칭에서는 형테(패터)의 일치를 발견할 뿐이다. 선택되는 표현법(지식 표현)에 의해, 위에서 설명한예와 같이 의미적인 일치는 완전하게 형태가 일치할 경우에 한정되는 경우도 있고, 또 표현 속에 변수를 포함하는 것이 허용되어 의미적인 일치는 형태 일부의 일치와 그에 따를번수 등에 관한특정조건을 만족시키는경우가있다. 이러한 경우 패턴 ㄴ매칭기능과 함께 의미의 일치 또는 포함 관계의 검사 기능이 필요하다 
 예를 들면, 시스템에 주어진 지식이 "모든 금속은 각각 고유한 융점 온도 이하에서 녹는다."라고 하는 것이었다고 핮. 이에 대하여 입력이 "철은 어떤 융점 이하에서 녹는다."라고 하는 것이었다면 전자는 후자의 의미도 포함하고 있으므로 (이를 함축한다고 한다. )보다 일반적인 표현이지만 이것은 철 금속(철은 금속의 일종이다.)라고 하는 관계하에서만 성립된다. 다만 앞에서 설명한 것처럼 이러한 기능의 필요성은 표현법에 ㅇ ㅣ조하며, 형태의 일치만으로 충분한 경우는 불필요하다. 
【3】정보 변환
 앞에서 설명한 예에서 초기 상태와 목표 상태는 2개의 천이  와 의 복합 천이 로 연결되엇다. 와 도 천이 전, 후의 어느쪽이든 한쪽의 상태가 입력으로 지정되어 있는 것과 일치하기 때문에 입력 정보를 키 정보로서 친이표 속에서 발견할 수 있었다.
 그러나 좀도 일반적으로 3개 이상 천이가 관계될 경우 이렇게 간단하게 해를 구할 수 없다. 예를 들면, 3종(種)의 천이 의 복합령 에 의해서 비로소 초기 상태 와 목표 가 연결된다고 하자. 즉, 
이다.  와 는 입ㄹ경으로 주어진 와 를 차례로(밑줄 부분과의 매칭으로) 속을 탐색하여 발견ㅇ할 수 있다. 그러나 에 대해서는 그렇게 할 수 없다. 따라서 찾아낸 혹은 를 이용하여 다음 탐색을 할 필요가 있다. 이 조작은 입력 의 어느 쪽인가를 변환하는 형식으로 반복 처리되낟.
 예를 들면, 천이 는 "어떤(미지의) 상태 로부터 천이 를 행함으로써 상태  에 도달할 수 있다."라는 것을 찾은 것이지만, 는  에 천이 를 실시함으로써 도달하는 것을 알았기 때문에 미지의 상태 를 발견된 에 의거해서 로 고정할 수 있다. 이어서 이번에는 를 새로운 목표로 설정하여 동일 도작을 반복한다. 즉, 르 키로 하여 가 발견된다.
 이와 같이 목표 상태 르 키로 천이 기술을 찾고, 거기에서 발견되는 새로운 ㅛ상태에서 목표 상태를 치환하는 변환을 반복함으로써 초기 상태 에 이르면 그것이 해가 된다. 이와 반대로 초기 상태 에서 출발하여  의 순으로 변환해서 목표에 도달하는 것도 가능하다. 
 일반적으로 별개로 주어지고 있는 정보(지식:의의 예는 천이 기술)를 일정한 규칙(의 예의 경우, 상태의 일치)에 따라서 서로에게 관련을 부여하고, 주어진 정보를 순차 변환하면서 출발점에서 목표 결과를 구하는 조작을 추론이라고 부른다. 초기 상태는 위의 예와 같이 그때마다 사람이 주는 경우 외에 미리 주어져 있는 경우도 있다. 후자의 전형적인 예는 수학의 정리를 증명하는 것과 같은 경우로, "미리 주어진 조합의 변역 공리에서만 어떤 정리를 증명한다."하는 형식이 취해진다.

그림 2-10에서 정상의 노드 si로부터 아래 방향으로 n단체(n=1,2...)의 노드는 상태 si로부터 도달하는 데 적어도 n회의 천이를 요하는 상태를 나타낸다. 또 아래쪽의 노드로부터 위쪽 노드로의 화살표는 앞에 통과한 상태로 되돌아가는 것을 의미한다. 예를 들면 그림 2-9에서, 상태열 si→sa→se→si는 이와 같은 예이다.
 목표로 하는 상태가 나타났을 때, 일반적으로 같은 중간 상태를 1회 이상 통과하는 것은 (특별한 지정이 없는 한) 쓸모없는 일이며 이와 같은 루트를 만들 필요는 없다. 그래서 그림 2-10에서 위쪽의 노드로 되돌아가는 천이(이미 통과한 상태로 되돌아간다.)는 하지 않는 것으로 하며, 이것을 생략하기로 한다. 또한 그림 2-10에는 상태 si 로부터 sc로의 경로가 있다. 이것은 위쪽의 노드로 되돌아가는 것이 아니라, 상태 sx 자신은 상태 sb로부터의 경로가 있고 그때 여기로부터 목표로의 경로가 있는지 없는지 조사되기 때문에 중복한다. 그 때문에 si로부터 sc로의 천이도 하지 않는 것으로 한다.
 이렇게 해서 불필요한 천이 경로를 제거한 것이 그림 2-10(b)(제거한 경로는 점선으로 나타나 있다.)로 이 나머지의 구조는 1개의 루트.노드(정상의 노드)로부터 아래쪽으로 열어가며, 사이클을 구성하지 않는 소위 트리 구조라고 하는 것이 된다. 문제는 이 루트.노드 si로부터 출발하여 목표 상태를 표현하는 노드(그림 2-10의 sk)에 이르는 경로를 발견하는 것이다. 우리의 누에는 그림 2-10(b)와 같이 2차원으로 표현하면 이 경로는 일목요연하지만, 컴퓨터로는 이와 같은 생각이 불가능하기 때문에 1개씩 정성껏 살펴갈 수밖에 없다.
 이러한 방법으로 트리 구조의 루트.노드로부터 시작하여, 왼쪽(오른쪽이라도 좋다.) 가지부터 순차적으로 아래쪽으로 더듬어 내려가는 도중에 분기점에 닿으면 왼쪽(오른쪽)의 가지를 택하여 진행된다.
만약 말단 노드에 가서도 그것이 목표로 하는 노드와 일치하지 않는다면 최후에 통과한 분기점의 위쪽으로 되돌아가, 아직 통과하지 않은 가지로 들어가서 아래쪽으로의 탐색을 계속한다. 만약 어떤 분기점에 접속하고 있는 모든 가지를 살펴보았다면, 또 하나의 위쪽 분기점으로 되돌아가는 방법을 사용한다. 이것을 도시한 것이 그림 2-11이다. 이것에 의해서 조직적으로 모든 노드를 탐색한다. 어떤 가지를 조사하여 목표가 없으면(목표와의 패턴 매치가 되지 않는다면) 최후의 분기점으로 되돌아가는 것이 back track이고 트리 구조 탐색의 프로그램에 있어서 가장 특징적인 부분이다. 이것은 예를 들면위쪽에서 아래쪽으로 진행할 때, 분기점에 도달할 때마다 그 분기점의 장소를 스택에 집어 넣고 분기점으로 되돌아 가는 것은 스택으로부터 팝업을 행하는 방법으로 실현된다.
2.4 추론과 지식
 이상과 같이 자동 장치는 T를 사용하여 초기 상태에서 목표에 도달하는 경로를 탐색적으로 발견하는 프로그램을 만들 수 있다. 이 프로그램은 앞으로 서술한 여러 기능을 포함하는 것이며, 추론 프로그램이라고 부를 수 있다. 이와 같이 만들어진 프로그램을 갖춘 시스템의 특징은 자동 장치의 기술부 T 와 그것이 의거해서 문제의 해를 발견하는 추론 기구, 즉 여건(앞에서 설명한 예의 용어로 초기 상태)과 목표가 주어졌을 때 그 사이의 경로를 발견하는 처리계가 분리되어 있는 점이다. 이러한 성질로부터 자동 장치 기술을 로부터 별도의 것 T로 바꾸면 기구가 동일하더라도 바깥쪽에서 본 시스템의 동작은 전혀 다른것처럼 생각될 수 있다. 즉, 동일한 기구를 가진 시스템이 기억된 정보의 내용에 따라서 다양한 동작을 한다. 이같이 행동하는 시스템이 언제나 동일 동작을 기계적으로 되풀이하는 것에 비해 지적으로 보인다 하더라도 특별히 다른 의견은 없을 것이다. 이것은 앞에 서술한 '지적인 동작은 복잡한 행동이며, 또 기억을 갖고 그것에 의해서 구동되는 동작으로 실현된다.' 고 한 것의 일례이다. 이 시스템의 능력은 처리계가 아니라 기억되어 있는 정보에 의존한다. 의료의 예에서 자동 장치 T를 보타 정교하게 한다면, 즉 변수를 늘리고 그 값도 미세하게 나눈다면, 인간(의사)이 행하는 진료에 접근하는 것이 가능할 것으로 보인다. 실제로 이와 같이 해서, 인간에게 도움이 될 만한 시스템을 실현할수 있을까의 여부, 또는 이를 위해서는 어떠한 점에 대한 노력이 더필요한가. 특히 CAD/CAM에 어떻게 이용할 수 있을까 등이 이제부터 큰 문제인데 이러한 논의는 좀더 앞을 내다보고 위의 시스템의 동작 원리에 대해서 좀더 생각해 보자. 앞에서 설명한 예에서 기억 정보는 자동 장치의 천이표와 등가인것으로 하였다. 그러나 이와 같은 몇 개의 기본 기능을 포함하는 추론 프로그램을 사용한다면 기억 정보가 자동 장치일 필요는 없다. 자도 장치는 앞에서 서룰한 바와 같이 1개의 시스템이 취할 수 있는 모든 상태를 정의하며, 그 사이의 천이 조건을 정한 것으로, 그것에 따라 시스템 전체의 행동과 성질을 고찰하기 위한 모델이다. 여기에서 상태라고 하는 개념은 추상화된 개념이고 현실의 시스템이 외부작극에 의해 변화하는 몇 개의 양을 내부에 포함할 때 이들의 양이 취할 수 있는 모든 값의 각 조합에 대해서 상태를 1개 대응시키고 있다. 따라서 이들 변화하는 양을 변수로 표현하면 시스템의 상태를 지정하는 것은 이들 변수의 값을 규정하는 것이고 또한 천이를 규정하면 이들 변수의 상호 관련을 포함시킨 값의 벼화도 규정하는 것이 된다. 역으로 개개 변수의 값과 그 변화를 모두 기술하는 것이 된다. 앞에서 설명한 예에서 TI등으로 주어진 것은 이와 같이 개개 변수의 값과 그 변화를 직접 기술함으로써 자동 장치를 정의하고 있는 것인데 이러한 정의하에서 상태의 개념은 희박하다. 자동 장치 전체의 행동이 논의되는 것은 가능한 모든 상태와 입력의 조합에 대해서 천이가 정의되기 때문이다. 그러나 앞에서 설명한 추론 프로그램의 동작은 천이표가 완전히 정의되어 있는 것을 필요로 하지 않는다. 추론 프로그램이 대상으로 하는 것은 개개의 천이 기술뿐이며, 거기에 존재하는 것만을 사용한다. 천이 기술이 몇 개 빠져 있다하더라도 시스템 자체의 존재 이유를 잃어버리는 일은 없다. 문제가 주어졌을 때 이 결핍 부분
이 해를 구하는 순서에 필요하지 않은 것이라면 결과에 영향을 미치지 않으며, 가끔 이것을 필요로 하는 문제라면"모릅니다" 라고 하는 대답을 낼 뿐이다. 말하자면 운이 나쁜것에 지나지 않는다. 이와 같은 점은 인간의 경우와 매우 비슷한데, 모른는 것은 대답할수 없지만 가지고 있는 지식은 유효하게 이용하려고 하는 사고방식이다. 현제 지식공학의 입장이 이와 비슷하다고 생각해도 좋을 것이다. 이미 서술한 바와 같이 앞에서 설명한 예에서는 개개천이 기술의 단순하 집합이 지식에 해당된다. 이것은 첫째로 자동 장치가 가진 전체성이라고 하는 제약에서 벗어나 자유로운 기술이 허용되는 것을 의미하며, 지식 공학적 방법의 이점이 되고 있다. 아울러 이것은 전체의 체계를 버림으로써 너무나도 자유로운 것의 위험성을 동시에 갖는 것이 된다. 예를 들면 법률이 있는 사회와 없는 사회가 다르며, 통상적으로 법률 같은 것은 잊어버리고 있는데, 만일의 경우에 법률이 있으면 그것에 비춰서 시비의 판단이 서겠지만 법률이 없을 때는 혼란이 생길 가능성이 있는 것과 유사하다. 이 점을 좀더 살펴보자. 다음에서는 간단하게 하기 위해 3개의 변수 X, Y, Z를 가지고 각 변수와 함께 {0.1}의 2개값을 취하는 시스템을 생각한다. 샅태는 (0, 0, 0)- (1, 1, 1)의 8개이다. 이것을 3행의 2진수로 보았을 때의 크기 순서인 S0, S1,...SI, 로 표현한다. 기술법을 간결하게 하기 위하여 천이 기술을 (SI, II)→SI와 같이 표현한다. 또 입력도 {A, B}의 2개값이라고 가정한다. 이것에 의해 다음과 같은 자동 장치를 생각한다. 이것을 도시한 것이 그림 2-12이다. 이 중에서 T1([ ]로 묶인 것)가 빠져 있었다고 하자. 자동 장치의 경우 이것은 불완전한 정의로서 체크된다. 한편으로 짓기 공학적 바법에서는 이와 같이 전체를 고려하지 않기 때문에 특별히 문제는 없다. 또 상태라고 하는 개념도 없기 때문에 이와 같이 상태 기호 S를 사용하지 않과. 예를 들면 최초 2개의 T0와 T1의 번역은와 같이 새로 쓰게 된다. 지식 공학적 표현법에서 전체의 관계는 고려하지 않아도 되기 때문에 개개의 천이를 다른 것과 무관하게 기술하는 것이 허용된다. 이와같이 다른 표현과 관계 없이 개개의 기술이 가능한 것은 개개 기술의 독립성이 강하고 새로운 지식을 자유롭게 지식 체계에 더할 수 있는 것을 의미한다. 이것을 '지식의 모듈성이 높다.'라고 표현한다. 지식의 모듈서이 높은 것은 지식 공학 시스템의 유연성이 높은 것을 나타낸다. 반면 이것이 부주의 등에 의한 혼란의 근원이 되기도 한다. 위의 자동 장치에서 (2-2B)와 (2-12D)는 천이 기호의 좌측 X2의 값이 다를 뿐 다른 것은 모두 같다. 또한 X2 모든 가능한 값(0과 1)을 다하고 있기 때문에 T0와 T1를 하나로 묶고 좌변의 X2를 생략하여 표현할 수 있으며, 이에 의해 자동 장치의 엄밀성이 파손되는 일은 없다. 한편 T0( (2-12A))와 T1((2-12C)에서는 이와 같은 일은 성립되지 않지만T1(2-12C))가 빠져 있는 점에서 만일 T0((2-12A))에 대하여도 (2-13)과 같이 T0와 T1을 합하여 다음과 같이 표현한다고 하자. 이것은 빠져 있는 T1을 그림 2-12의 점선으로 바꾸는 결과가 되어 자동 장치로서 생각하면 분명히 오류다. 애냐 하며 X2가 이와 같은 형태에서 생략할 수 있는 것은 위에서 설명한 대로 (I)X2이외의 조건이 모두 같고 (II)X2에 대해서 미리 정의된 모든 값을 포함하는 표현의 조합이 존재할 경우에 한정되기 때문이다. (II) 의 조건은 전체의 조건을 통해서 각 기술이 다른 기술의 영향을 간접적으로 받는 것을 나타내고 있다. 한편 (2-14)식은 지식 공학적 수법에서는 오류가 아니라고 하는 것보다 이거의 정오를 검사할 방법이 없다고 하는 쪽이 옳다. 따라서 이것을 지식의 하나로서 지식 체계에 추가할 때는 사람이 그 내용의 타당성 또는 다른 지식과의 무모순성을 검사할 수밖에 없다. (2-13A)식 대신에(2-14)를 사용한 결과 어떠한 일이 생기는가를 조사하여 보자. 쉽게 설명하기 위해 이것을 의료 시스템으로 보고, s6, s7을 각각 완전한 건강 상태 사망 상태로 하자. 초기 상태로서 s1=(x0=0, x1-0, x2=1)의 증상을 가진 환자가 왔다고 가정하자. 목표는 물론 s6이다. 자동 장치 T를 사용하면 이 때의 천이계열은 T1.T5이고 입력 계열은 A.A이다. 한편 (2-14)식을 사용하면 어떻게 될까. 이 때의 천이 계열은 T7.T2이고 입력 계열은 A.B이다. 그런데 친어표에서 초기 상태에 대하여 입력 계열 A.B에 의해 그림 2-12에서 S1으로부터 시작되어 S4이르지만 S4부터는 최종적으로 반드시 S7로 들어가 버린다.) 이와 같이, 지식의 표현에 무제한의 자유를 주는 것은 예기치 못한 함정으로 빠질 위험이 있음을 명심해 두지 않으면 안 된다. 자동 장치와 같이 전체를 규정하는 형식이 주어져 이?ㅆ을 경우 지식으 표현에 대해서 이 형식에 의거하여 검사할 가능성이 있지만. 이와 같은 형식을 없애면 이미 검사 수단도 잃어버리는 것이다. 그러나 이 점을 지적하더라도 지식 공학적 바업의 가치가 감소하는 것은 아니다. 자동장치는 확실히 모델로서는 적합할지는 모르나, 변수가 조금 증가하면 상태수가 급증하여 실제 문제에 이것을 사용하는 것은 거의 불가능하다. 지식 공학은 필요한 기술만 최소한으로 행하여서 그것을 효과적으로 사용하는 방법을 부여한 것이기 때문이다. 단지 실용에 있어서 위에서 설명한 것을 염두에 두고 지식의 기술에 세심한 주의를 기울이는 것이 필요한 일임을 지적한 데 지나지 않을 것이다.
2.5 지식 공학의 현상
 CAD/CAM에 인공지능의 성과를 도입하고자 하는 시도가 사람들을 끌어들이는 것은 어떤 의미에서는 이제까지의 기술로는 넘을 수 없는 벽이 있고, 더구나 사용자의 요구와은 아직 멀다는 것, 그리고 그것을 넘기 위한 새로운 기술을 사람들이 모색하고 있다는 것의 발로라고 생각된다. 현재의 기술로 요구를 충분히 충족시킬 수 없는 것은 우선 설계라고 하는 일이 인간이 행하는 여러 활동 중에서도 가장 지적인 것 중의 하나이며, 거기에서 사람의 창조성을 비롯한 다양한 고도 기능을 구사하여 뛰어난 제품을 완성시키고자 노력하고 있다. 그런데 이에 반해, 이제까지 정보처리 기술로 확립되어 온 것은 인간에게 자연스럽게(특별히 의식하지 않더라도) 갖춰져 있는 고도의 기능에 비해서 극히 낮은 수준의 일부분에 불과한 것이기 때문이다. 앞서 서술한 바와 같이 인공지능에서 비롯된 지식 공학은 종래의 컴퓨터와는 다른 그림 2-13과 같은 구조를 갖고 있으며, 기능적으로도 지적인 부분을 포함하고 있다. 여기에서 지적이라는 것은 입출력간의 관계가기억 정보에 의해 영향을 받기 때문에, 바깥쪽에서 관측하는 한 이 관계를 파악하기 어렵다고 하는 정도의 의미이다. 그림 2-13에서 나타냈던 것처럼 지식 공학적 시스템의 핵부분은 추론 기구와 지식 베이스로 구성되어 있는데, 지식 공학에 있어서 지식 베이스의 역할은 우리가 보통 지식이라고 부르고 있는 종류의 정보를 다수 모아 필요에 따라 검색되도록 체계적으로 기억해 두는 장소가 되는 것이다. 여기에서 지식은 인간과는 다른 기구를 가진 컴퓨터라는 기계가 처리할 수 있는 형식으로 표혀뇔 필요가 있다. 이것에는 여러 가지 방식이 제안되고 있는데, 앞의 예에서 나타낸 "IF....., THEM....."의 형식도 그 중 하나이다. 추론 기구는 이 지식을 목적 상태에 도달할 수 있도록 연결하는 작용을 가진 기구라고 생각할 수가 있다. 지식 공학에 대한 기대는 이 새로운 기술이 종래에는 실현할 수 없었던 기능을 새롭게 가능하도록 했다는 점에 있다. 그러나 이것이 참으로 기대한 대로 CAD/CAM 에도 유용하게 될 수 있을까 하는 평가는 아직 내려지지 않았다. 이것을 행하는 것은 실은 매우 어려운 문제지만, 앞으로 새로운 CAD/CAM 시스템을 설계하고자 한다면 (이것은 우리 나라의 기술 전반에 걸쳐서 실로 중요한 것인데) 조만간 이와 같은 평가를 확실히 할 필요가 있다. 여기에서는 우선 그 첫시작으로서 지식 공학 시스템의 대표적인 전문가 시스템이라고 불리는 것의 실상을 살펴보자, 사실 이제까지 실현된 지식 공학 시스템이라고 불려지는 것은 대부분 이 부류의 것이다. 전무가 시스템은 지식 베이스 시스템을 특정한 분야, 예를 들면 의료의 어떤 영역(심장병이라든가. 류머티스 드)에 적용하여 그 영역의 축적한다. 또 이것을 이용하여 추론을 행함으로써 이전문가와 같은 정도의 능력, 예을 들면 심장병에 관하 진단 능력을 가진 문제 해결시스템을 말한다. 이 예와 같이 전형적인 전문가 시스템은 의료 결정 지원 스스템으로 개발되고 있는 것이 많다. 이 외에 비슷한 사용법으로 공학 분야에서는 장치 등의 고장 진담에, 화학에 있어서는 분자구조의 결정 등에 사용하게 되었으며, 법률 상담 등에도 이용할 수 있다고 생각된다. 현재 이와 같은 응용 시스템의 개발이 여러 곳에서 추진되고 있다. 이와 같은 지식 공학적 시스템이 기대한 대로 지적인 의사 결정 지원 시스템이 될 수 있다면 이 기술은 CAD/CAM 에도 큰 영향을 미칠것은 확실하다. 설계하고 하는 일도 설계자의 의사 결정이 프로세스이며, 설계에 있어서 이제까지의 경험으로부터 정형화한 기법이나 규정(도면의 표현 방법 등) 또는 부품의 규격화 등을 기억해 두지 않으면 안되는 지식이 많다. 더 나아가서는 경험을 쌓은 설계자가 학교를 갓 졸업한 기술자보다 뛰어난 설계를 할 수 있는 것은 경험의 축적이 있기 때문이다. 이것은 기술적 지식으로 위에서 설명한 의료에 있어서의 진단 지식과 같은 성질의 것이라고 생각된다. 전무가 시스템의 기본적인 사고방식은 이와 같이 지식 베이스와 초론 절차를 사용하여 해당 분야의 전문가가 모델이 되는 소프트웨어 시스템을 완성시키는 것에 있다. 이러한 시스템이 효과를 발휘하는 데 

있어서 필요한 것은 유용한 전문적 지식을 다수 보유하고 있는 것이다. 보통 이와 같은 지식을 형식으로 구분하면 IF...., THEM....과 같이 조건문으로 표현되는 것과 조건을 포함하지 않는 좀더 단순한 형식의 것으로 구분된다. 전잘을 규칙, 후자를 사실이라고 부르기로 하자. 특히 사실이 개개의 대상에 관한 기술이라면 통상 데이터 베이스로 체계화된 형식으로 기억되어 있는 것도 마찬가지이다. 예를 들면 "홍길동 씨의 연령은 30세다."라고 하는 것이 여기에 해당한다. 이에 대해서 "만물은 유전한다."라고 하는 지식은 형식으로 사실이라 하더라도 특정 대상이 아니라 어떤 부류의 전대상에 대해서 서술하고 있다. 이것은 데이터 베이스의 대상 밖이며 이러한 의미에서 지식 베이스에는 종래의 데이터 베이스보다 큰 기술력이 요구된다. 이것은 규칙의 표현에 대해서 한층 현저한다. 지식 공학의 특징은 이러한 규칙을 지식으로 사용할 수 있다고 하는 점에 있다고 해도 좋다. 이것을 가능하게 하고 있는 것이 추론 규칙인 것은 말할 것도 엄ㅅ다. 앞에서 설명한 사실은 설령 어떤 루류 내의 대상에 관한 일반적 기술이라 하더라도 이용은 정보 검색 시스템과 본질적인 차이는 없지만, 규칙의 이용에 있어서는 정보 검색이나 데이터 베이스가 다른 새로운 추론이라고 하는 기능을 갖게 되기 때문에 차이가 크다. 이상의 논의는 지식을 그 표현 형식에 따라 분류한 것인데, 이것과 별도로 지식을 그 내용에 따라 분류하는 사람도 있다. 이것은 첫재(지식 공학 시스템이 있는 분야에 적용되는 것으로서), 적용 분야에 관하여 책 등에 기재되어 이미 많은 사람이 공유하고 있는 종류의 것, 둘째는 반드시 일반화되어 있지는 않지만 사실상 매우 유용한 지식으로 갱인이 경험적으로 확립한 전무적 지식과 실천적 지식으로 분류된다. 전자를 일반적 지식, 후자를 발견적 지식이라고 부른는 쪽도있다. 앞에서 설명한 형식적 분류를 적용시키면 이 양자의 조합이 가능하지만, 발견적 지식은 그 성질상 규칙의 형태를 취하는 경우가 많다. 전무가 시스템은 물론 해당 분야의 전문가가 가지고 있는 발견적 지식을 많이 획득함으로써 보다 뛰어난 전문가의 모델을 완성시키자고 하는 것인데, 여기에 전문가가 실제의 묹에 대해서 어떠한 지식을 사용할 것인가를 알지 못하면 안 된다. 이와 같은 지식을 획득하고 규겨과하여, 그것을 미리 정의되어 있는 추론 기구에 의해 이용할수 있도록 하는 작업은 실제적으로 용이한 것은 아니다. 이것은 지식획득이라고 불리는 지식 공학의 또 하나의 문제점이다. 
2.5.1 지식의 표현
 지식을 규격화하는 작업은 미리 정해져 있는 형식에 따라 주어진 정보를 표현하는 것이다. 이것을 지식 표현이라 부른다. 지식 공학 또는 그것의 기반이 되는 지식 베이스와 추론을 포함하는 시스템(정보처리 기술의 입장에서 보아 이것을 지식 베이스 시스템이라 부르기로 하자.)을 설계할 때에 지식 표현은 최초의, 그리고 가장 중요한 결정이다. 통상적으로, 자기가 행하고 있는 작업도 방법을 말로 바르게 표현하는 것마저 실제로는 매우 어려운 문제인데, 게다가 그것을 규격화하기 위해서는 지식 표현을 위한 언어의 표현력이 풍부한 것이 바람직하다. 한편, 지식 베이스 시스템을 구성하는 또 하나의 요소인 추론 기구는 이 지식을 표현하는 언어의 형식에 의거해서 정의되어야 한다. 만약 지식 표현의 형식이 너무 복잡하면 추론 기구가 복잡화되어 그 설계가 어려워질 뿐만 아니라 그 동작의 확실성을 잃어버릴 위험성도 생긴다. 지식 표현 언어는 이 외에도 시스템 설계의 많은 며에 영향을 주므로, 결국 이 언어의 설게는 이러한 여러 요인 사이의 일종의 타협을 통해서 행하지 않으면 안 된다. 앞에서 지식은 대상으로 하는 시스템의 동작을 기술한다고 하는 형태로 표현하였다. 이 때 표현의 기초로 삼는 것은 어떤 시점에 스스템이 어떠한 상태에 있고 그것이 입력에 의해 어떻게 변화하는가라는 것이었다. 여기에는 시스템의 상태라고 하는 개념이 있었다. 그리고 시스템의 상태라고 하는 개념은 그 대상 시스템을 구성하고 있는 개개의 구성 요소 상태의 조합으로 분해되었다. 결국 지식은 이들 요소의 상태를 가장 기초적인 개념으로 정하고, 이 중 입력(일반적으로는 외계의 조건)에 의해서 변화하는 부분만을 추출하여 기술하나다고 하는 형태로 표현되었다. 이것은 하나의 예로부터 출발하여 서술한 것이기는 하지만 동시에 지식 표현의 일반적인 형식이기도 하다. 즉, 지식이라는 것은 이들 기초적인 개념 사이의 천이 또는 좀더 일반적으로는 그들의 관계를 기술하는 것이다. (여기에서는 천이도 관계의 한 형식으로 간주한다.)이와 같은 기초 개념 및 그것을 컴퓨터 내에서 어떻게 표현하는가에 따라 표면적인 표현법이 정해지는 것이다. 다음에서는 대표적인 지식표현의 방식을 간단하게 소개하고자 한다. 
(1) 생성규칙
 지식 표현의 대표적인 것 중 하나가 앞에서 서술한 형식, 즉 IF...., THEM....의 형태이다. 통상 이와 같은 표현을 생성 규칙이라고 부르며, 이것을 사용한 시스템을 생성 시스템이라고 부른다. 그림 2-14에 생성 시스템의 예로서 유명한 MYCIN이라고 불리는 시스템의 지식 표현의 예를 나타냈다. MYCIN은 전염병 질환. 특히 혈액 감염과 골수염에 대한 진단을 하며, 그 질병에 대해서 항생 물질을 사용하는 치료법에 관한 의사 결정 지원 시스템으로서 개발된 것이다. 실험적 시스템으로 MYCIM 은 큰 성공을 거두어 지식 공학 연구에 커다란 자극을 준 것은 높이 평가된다.
(2) 의미 네트워크
 개개의 개념과 그 관계를 그래프 이론이나 자동 장치에서 사용되는 정점과 링크된 네트워크로 표현하는 것도 가능하다. 이 네트워크에서 각 절은 개념과 실체, 사상등 관계 이외의 것, 링크는 이들 정점간의 관계를 나타내는 것으로, 어느 것이나 정점과 링크가 무엇을 표현하는가를 나타내는 라벨이 붙여져 있다. 이와 같은 지식 표현을 의미 네트워크라고 부른다. 그림 2-15는 이러한 표현법의 이례이다. 이 그림은, 예를 들면 PARTS는 PROJEXT로부터 ORDER되고, PROJEXT는 SUPPLIER에 이 PARTS의 대금을 지불하지 않으면 안되는 상황을 그래프 형식으로 표현한 것이다.
(3) 술어 놀리
 술어 논리에 의한 지식 표현은 생성 규칙과 유사하다. 술어 논리는 수리 논리 또는 기호 논리 등이라고도 불리며, 오래 전부터 연구가 추진되어 왔다. 특히 이것이 수학이라고 하는 학문 체계의 기초를 이루는 점에서, 많은 수학자에 의해 체계화가 시도되어 왔다. 술어 넌리를 앞의 예에 대응시키면, 우선 IF 부분 및 THEN의 각 부 안에는 몇 개의 기술이 AND로 결합되어 있다. 이와 같이 복수개의 조건을 병렬 형식 및 IF...., THEN...이라고 하는 구조로 각각 대응하는 표현을 가지고 있다는 점에서 생성규칙과 유사하다. 그러나 양자 사이에는 중요한 차이가 있다. 그것은 술어 넌리에서는 지식 체계 전체의 성질이 고려되고 있는 점이다. 이것도 앞에서 설명한 바와 같이 지식의 표현에는 다른 표현에는 다른 표현으로부터의 독립성과 전체로서의 합법성이라고 하는 2개의(상반된) 성질이 있다. 생성 규칙에는 전체의 정합성은 없고 개개의 지식 표현에 완전하게 독립성을 주고 있다. 술어 논리에 대해서는 뒤에 다시 상세하게 서술한다. 
(4) 개념 의존 관계
 지식이라는 것은 의미를 표현하는 것이며, 의미라 하는 것은 유한개의 가장 원시적인 의미 단위의 다양한 조합으로 분해할 수 있다는 입장에서 언어의 의미를 표현하고자 한 것이 개념 의존 방식이다. 이것은 다른 방식에 있어서의 지식 표현과는 다소 성질이 다르며, 지식공학이라고 하는 부류에는 들어가지 않을지도 모르지만, 지식 표현과 결코 무관한 것은 아니며 자연 언너 이ㅐ와는 매우 관계가 깊다. 개념 의존 표현의 예를 그림 2-16에 나타내고 있다. 이 그림은 "John told Mary that he wants a book"이라고 하는 문장의 의미를 표현한 것이다. 다른 지식 표현, 예를 들면 의미 네트워크에서는 이것을 문장 속의 실체, 즉 John 과 Mary를 정검으로 표현하고 이것이 told라고 하는 관계로 결속된다고 표현한다. 즉, 문장의 글씨 모양과 지식 표현이 매우 직접적으로 대응하고 있다. 이것에 대해서 개념 의존에서는이 문장의 의미를 분해하여 표현하다. 그림 중 MTRANS나 ATRAS는 움직임을 표현하는 기본적 의미를 나타내며 각각 동물 간 혹은 동물 내에 심적인 정보의 이동이 있는 것, "소유나 제어와 같은 추상적인 관계가 밖으로 이동하는 것"이라고 정의되어 있다. 『움직인다』를 표현하는 기본 표현으로는 이들을 포함하여 기꺼해야 10종류 정도가 미리 준비되어 있다. 또한 관계된 기법으로서 그림으로 나타내고 있는 다른 타입의 화살표가 여러종류 정의되고, 장소나 시간같은 기본 개념이 정의되어 있고, 이들을 조합해서 문장의 표면에 나타난 의미뿐만 아니라 그 결과나 원인같은 관련 정보도 포함하여 표현한다. 예를 들면 그림의 맨 아래 * UOY *=(X)와 같은 표현은 "(John 이 책을 갖고 싶었던 결과 그것이 실현되면) John이 즐거워함은 x로부터 X + 2로 증대되는" 것을 나타낸다. 이와 같이 문장의 의미를 상세하게 분석하여 표현해 두면 그에관한 물음에 대답할 수 있다.
(5) 프레임 시스템
 지식 표현 언어로서의 성격을 갖는 동시에 정보처리의 새로운 방식이기도 하며, 근래에는 그 이론에 의거해서 프로그래밍한 언어의 정의도 이루어지고 있다. 이런 점에서 프로그래밍 언어의 성격을 갖는것으로 프레임 이론에 바탕을 둔 방식이다. 프레임이란, 본래는 어떤 지식이 적용되는 장면이라고 하는 정도의 의미이다. 이것은 지식에는 원래 환경에 따라 의미가 정의된다는 면이 있고 그 환경은 사람의 관심이 어떠한 범위로 향해지는가에 따라 그 파급이 다르다. 예를 들면 여행지에서 집으로 돌아가는 사람의 사고를 분석하면, 처음에는 철도나 도로를 포함한 어떤 범위의 지역을 사고 범위로써 귀로를 생각하고, 철도역을 내려서 자택에 이르기까지는 좀더 좁은 지역 내에서 사고한다. 또한 자택으로 돌아오면 사고 대상은 자택에 한정되고, 자기 방에 들어가면 방안에 한정된다. 각 프레임마다 사고와 동작의 패턴이 다르다. 이와 같은 사고의 프로세스는 설계 등에 있어서도 기본적인 것이며, 처음에 설계 대상의 전체 이미지를 만들고 그것을 점차 상세한 것으로 옮겨가는 순서에 따르는 경우가 많다. 이와 같은 프레임 이론 그 자체는 그것을 어떻게 구체화할 것인가 하는 것과는 관계가 없다. 하지만 위에서 설명한 바와 같이 각각의 대상 세계마다 거기서 일어나는 동작을 프로그램으로 표현하고, 그 프레임에 호출되도록 하며, 동시에 다른 프레임끼리는 메시지를 통하여 정보를 교환하기도 하고 제어를 옮기기도 함으로써, 최종 목적을 달성하는 것이 가능한 언어를 만들수 있게 되었다. 이것을 지식 표현에 사용하는 것도 가능하며 또 일반 프로그램 언어로도 할 수 있다. 지식 표현에 사용하는 것도 가능하며 또 일반 프로그램 언어로도 할 수 있다. 지식 표현 언오로 할때는 지식은 절차의 형식으로 표현되는 것이기 때문에 지금까지 설명해 온 여러 방시과 대비시킨다면 절차적 방식이라고 할 수 있다. 이상은 대표적지식 표현의 예였고 이것이 지금까지 생각해 온 지식 표현의 전부일 수는 없다. 그리고 여기에 예시된 것이나 이 외의 것도 각각의 특징을 가지고 있다. 생성 규칙은 역시 손쉬우며, 다른 지식을 의식하지 임으의 지식을 표현할 수 있다. 따라서 모듈성은 매우 좋지만, 반면에 만일 다른 지식과 모순되는 지식이 공존할 수 있기 때문에, 지식 체계의 전체적인 관리는 인간이 하지 않으면 안 된다. 의미 네트워크는 지식 체계를 쉽게 볼 수 있다는 데 특징이 있다. 지식을 실체나 개념의 관계로서 이것도 기존의 것과는 좀더 독립적이 될 수 있는데, 동일한 개념에 관한 모든 지식은 그 개념을 표현하는 정범과 다른 정점과 다른 정점과의 관계로 보고있어, 사람에 의한 무모순성 관리는 생성 시스템보다 용이하다고 생각된다. 한편. 이 방식은 지식이 증가하면 급속히 복잡해지기 때문에 한정된 범위의 문제 이외에는 시용화가 곤란하다. 술어 논리는 개개 지식의 모듈성이 높은 동시에 전체의 성질이 이론적으로 해명되어 이것을 사용함으로써, 임의로 지식을 정의하면서 그것이 기존의 것과 모순도지 않는가를 조사할 수 있다. 반면 이 전체의 성질을 보유하기 위해서 표현 형식이 고정되어 있어 읽기 어려운 점과 처리 능률이 좋지 않다고 하는 단점도 있다. 개념 의존은 모든 의미를 완전하게 분석하여 표현하지 않으면 안되므로 지식화에 절차가 필요한 점, 별개로 주어진 지식끼리의 관련을 아느 데 구조의 부분적 일치에 상당하는 조작이 필요한 점 등의 문제가 있다. 이것이 지식표현으로 사용되는 경우는 적다. 프레임 시스템 또는 이에 의거한 절차형 지식은 그 자신의 프로그램 언어적 성질이 있는 점에서도 알 수 있는 것처럼 복잡한 처리를 요하는 문제를 기술할 수 있지만, 지식이 기본적으로 절차에 의해 주어지고 있는 것은 개개의 지식 획득의 어려움(다른 지식을 고려하여 절차를 주어야 한다.)같은 모듈성에 관한 문제가 있다. 또한 이것도 지식이 증가하면 프레임간의 관계가 복잡하여 관리가 곤란할 것으로 예상된다. 이와 같은 방식에 따라 특징은 다양하지만, 이 가운데 지식의 모듈성을 갖는 동시에 전체의 체계로서 행동에 관한 이론적 배경을 갖고, 이에 의거해서 지식을 관리할 수 있는 방식은 술어 논리뿐이다. 이 외의 방식으로 지식 체계의 관리는 모두 사람에게 의존할 수 밖에 없는데, 술어 이론만은 시스템 자신에 의한 관리가 가능하다.
2.5.2 추론
 한편 지식 베이스 시스템의 추론은 원리적으로는 그다지 복잡한 것은 아니다. 이미 몇 번이나 서술한 바와 같이 이것은 지식 베이스 속의 지식을 찾아서 목표에 이르는 경로를 만들도록 연결해 가는 기능이며, 전지적 추론과 후진적 추론이 있다. 추론은 지식 베이스를 탐색하면서 수차적으로 작업을 추진하는데 출발점에서 목표를 향하여 진행해 나가는 것이 전진적 방법, 역으로 목표엣 시작하여 출발점으로 되돌아 진행해 가는 것이 후진적 방법이다. 어느 쪼깅 좋은가는 적용할 문제에 의존하며, 일률적으로 말할 수 없다. 일반적으로 지식은(생성 규칙의 경우에 대해서 나타내면) IF부분에 다수의 조건이 병렬되는 것에 대해서 THEN 부분은 하나의 경우가 많고, 또는 이것이 2개 이상이라 하더라도 지식을 분할하여 그것을 하나의 형태로 고치는 것도 가능하다. 추론 기구는 추론을 위해 사용할 지식을 매칭에 의해 정하는데, 1회에 1개의 매칭으로 완료한다면 처리가 용이하게 된다. 이 의미에서는 후진적 추론이 좋지만 문제에 따라서는 목표의 표현을 명확하게 기술할 수 없는 것도 있다. 환자의 증상 데이터로부터 병명을 추정할 때 목표에 맞는 병명이 전혀 눈에 띄지 않을 경우를 생각하면 된다. 이때는 점진적 추론에 의존할 수밖에 없다. 후자와 같은 문제에는 목표의 표현을 만들어 두지 않으면 안되는 경우가 있다. 이와 같은 문제에는 추론 기구를 사용해서, 말하자면 의사 결정이 필요해져 단순한 문제 해결의 패턴과는 경향이 다르다. 지식 베이스를 사용하여 의사 결정을 행할 때는 한 번 으로 최종 목표에 도달하기 어렵기 때문에 도주에 중간 목료를 두는 그림 2-17과 같은 프로세스가 되는 것이 보통이다. 이 모델은 현재의 사실로부터 새로운 것을 만들어낸다고 하는 성질의 개발형 프로세스의 모델이라고 생각된다. 설계는 개뱔형 문제의 대표적인 것인데, 그림2-17과 같은 사용법에 의해서 지식 베이스를 이용하면 CAD시스템의 실현이 가능하겠는가.
2.5.3 CAD/CAM과 지식 베이스
 그림 2-17에 나타낸 방식은 확샐히 개발이라고 하는 프로세스의 기본형을 나타내고는 있다. 그러나 현재까지 제안되어 온 각종 지식 표현이나 추론 기국를 이 그림의 추론-지식 베이스 부부네 적용시키면 CAD/CAM 과 같은 개발 지원이나 의사 결정 지원을 위한 시스템이 실현되겠는가 하면, 문제는 그다지 단순하지 않다. 첫째, 설계.제조란 한마디로 다양한 작업의 집합체로서, 지식 베이스 시스템과 인공지능 기술을 어떻게 효과적으로 이용할 수 있을까 하는 것은 이 작업을 좀더 분석해 보지 않으면 안 된다.
 둘째, 지식 베이스 및 추론을 이용한 기술은 이전에 누군가에 의해서 생성되고 표현이 규격화되기까지 저비된 정보의 재이용 기술이라고 하는 것을 망각해서는 안 된다. 이미 확립된 지식으로도 새로운 조합을 만듦으로써 새로운 것이 생성되는 경우도 많은 것은 사실이지만, 개방의 기능을 이것에만 한정한다면 그것은 퇴색한 것이 될 것이다. 이제부터의 기술 개발을 지원하는 시스템으로는 이것으로 불충분하다. 이제부터의 기술 개발을 지원하는 시스템으로는 이것으로 불충분하다. 따라서 CAD/CAM 에는 기존 지식의 유효 이용과 동시에 새로운 아이디어의 도입 그리고 시험적인 시도가 설계자의 의도대로 이루어지는 것이 필요하다. 셋째, 설계는 대상으로 하는 것의 형태와 구조를 완성시켜 가는 성격의 일이므로, 이것을 지원하는 시스템은 강력한 구조의 표현과 처리 기능이 필요하다. 이러한 관점에서 보면 현재의 많은 지식 표현은 아직 불충분하다. 위에서 설명한 여러 문제는 지식 표현과 추론이라고 하는 지식 베이스의 기본적인 요서를 개발혀의 응요이라고 하는 입장에서 재조명 되어야만 하는 것이다 그러나 이것은 현제까지의 여러 연구가 헛된 것이었다고 말하는 것은 아니다. 이제까지의 지식 베이스 기술은 선진적 연구의 자세로 종래에 없던 새로운 기능을 추구해 왔던 것이며, 그것은 거의 성공했다고 보아도 좋다. 이것을 잘 다루어 가는 것이 이제부터의 연구인 것이다. 거기에는 CAD/CAM이 앞으로 갖추어야 할 능력을 요구, 제기하여 그 중 어떠한 부분이 이 새로운 기능에 의해서 채워질 것인가 또는 그것을 위해 지식 표현과 추론을 어떻게 수정해 가면 좋은가를 생각하는 것이 필요하다
설계.제조 순서와 CAD/CAM
3.1 설계 . 제조에 있어서의 CAD/CAM 의 역할
『CAD/CAM과 인공지능』에 대해서 서술하는 본서의 목적은 두 가지의 다른 기술, 즉 CAD/CAM의 기술과 인공지능의 기술을 융합하고 거기에서 『새로운 기술』을 산출해 내려는 것에 있다. 인공지능은 정보처리가 기반이 되는 개념과 사상 또는 그것들을 표현하거나 상호 관련짓기 위한 기본적인 수단을 제공하는 것이기 때문에, 이『새로운 기술』이 지향하는 것은 새로운 개념과 사고방식을 집어 넣은 새로운 CAD/CAM 시스템이다. 이와 같은 새롱 CAD/CAM 시스템이 어떠한 것인가 또는CAD/CAM 에 인공지능과 같은 것을 도입할 필요가 있는 것인가 하는 의문이 일부 있을지도 모른다. CAD/CAM 에 인공지능의 사고방식을 도입하려는 시도는 세계적 차원으로는 겨우 시작되었을 뿐이고 이 의문에 대해서 실용성이 나타난 예를 가지고 답하기에는 시기상조이다. 그러나 CAD/CAM의 일을 분석함으로써 앞으로 어떠한 기능이 필요하게 될까, 그것에 대해서 인공지능의 기술이 어떠한 형태로 도움이 될까를 고찰할 수 있다. 이와 같은 고찰의 대상이 되는 것은 현재 다양한 형태로 사용되고 있는 각종 CAD/CAM 시스템보다 진보한 것으로 이른바 차세대 CAD/CAM 시스템이라고도 말할 수 있는 것이다.2장에서는 이와 같은 차세대CAD/CAM 시스템에 이용될 가능성이 가장 높은 것으로 인공지능 중에서도 지식 공학에 대해 여러가지 각도에서 살펴봤으므로, 본장에서는 CAD/CAM을 고찰하기로 한다. CAD/CAM 시스템은 어디까지나 설계.제조를 위한 지원 시스템이므로 이러한 모습을 고찰하기 위해서는 설계.제조 프로세스 자체를 분석하고 어떤 기능이 언제,어디서,어떤 형태로 필요시되고 있는가를 명확히해 둘 필요가 있다. 설계.제조 프로세스는 다루어 지는 대상에 따라 다르지만, 그 기본적인 흐름을 추출한 것이 그림 3-1이다. 설계 대상이 비교적 단순한 경우에는 이와 같은 설계.제조의 여러 단계가 반드시 명확하게 정의되어 있지 않고, 또한 몇 가지의 단계가 일체화되거나 생략되어 있을지도 모른다. 그러나 차세대(CAD/CAM 시스템은 뒤에 서술하는 바와 같이 넓은 범위의 개발 대상에 대해서 글 설게.제조의 전과정에 걸쳐 지원할 수 있느 것을 목표로 한다. 또, 실제의 적용에 있어서는 대상 혹은 적용 분야마다 관련된 부분을 추출하여 사용할 수 있도록 모듈화를 도모하는 방향으로 진보해 가리라예상된다. 따라서 가장 중요한 의미는 그림 3-1과 같은 단계를 취한는 설계.제조 프로세스를 고려하는 것으로 한다.
 설계.제조 프로세스는 우선 요구 기술에서 시작하여 문제의 정의가 이루어지고 이것에 의거해서 기본 계획, 개념 설계, 기본 설계, 상세 설계, 시험 제작, 검사, 제조.....라고 하는 일련의 공정을 거친다.  이 작업의 흐름 중에서, 특히 설계 부문에서 작업이 진행되고 대상의 형상과 구조를 구체화할 때마다 그것이 요구된 성질.성능을 갖추고 있느가가 검사되고, 그 결고가 만족하지 않으면 전단계로 다시 되돌아 간다는 방식을 택하고 있다. 이것을 그림으로 나타내면 그림 3-2와 같이 될 것이다. 여기에는 설계.제조 프로세스와 함께 그곳에서 필요시되는 몇 가지의 기능이 나타나 있다. 설계.제조에 있어서 선진적인 CAD/CAM의 지원이 필요한 기능을 명확하게 하는 것은 차세대 CAD/CAM 시스템 설계에 대한 요구 . 시방을 명확히하는 것이 된다. 한편으로 지식 공학 등 새로운 기술을 주의깊게 분석하며, 다른 한편으로는 CAD/CAM 에 대한 요구를 분석하고 이 쌍방의 결과를 검토하여 CAD/CAM에 대한요구.시방을 책정하는 것이 본서의 목적이라고 말했다. 
</tdmsfiletext>
